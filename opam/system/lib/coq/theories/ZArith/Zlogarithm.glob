DIGEST 8d2104124e4d1798e5fca443e88eeadb
FCoq.ZArith.Zlogarithm
R1494:1504 Coq.ZArith.ZArith_base <> <> lib
R1506:1510 Coq.omega.Omega <> <> lib
R1512:1523 Coq.ZArith.Zcomplements <> <> lib
R1525:1530 Coq.ZArith.Zpower <> <> lib
sec 1568:1574 <> Log_pos
def 1669:1675 <> log_inf
R1680:1687 Coq.Numbers.BinNums <> positive ind
R1692:1692 Coq.Numbers.BinNums <> Z ind
R1707:1707 Coq.ZArith.Zlogarithm <> p var
R1722:1723 Coq.Numbers.BinNums <> xH constr
R1746:1747 Coq.Numbers.BinNums <> xO constr
R1754:1759 Coq.ZArith.BinInt Z succ def
R1762:1768 Coq.ZArith.Zlogarithm <> log_inf def
R1796:1797 Coq.Numbers.BinNums <> xI constr
R1804:1809 Coq.ZArith.BinInt Z succ def
R1812:1818 Coq.ZArith.Zlogarithm <> log_inf def
def 1861:1867 <> log_sup
R1872:1879 Coq.Numbers.BinNums <> positive ind
R1884:1884 Coq.Numbers.BinNums <> Z ind
R1899:1899 Coq.ZArith.Zlogarithm <> p var
R1914:1915 Coq.Numbers.BinNums <> xH constr
R1938:1939 Coq.Numbers.BinNums <> xO constr
R1946:1951 Coq.ZArith.BinInt Z succ def
R1954:1960 Coq.ZArith.Zlogarithm <> log_sup def
R1982:1983 Coq.Numbers.BinNums <> xI constr
R1990:1995 Coq.ZArith.BinInt Z succ def
R1998:2003 Coq.ZArith.BinInt Z succ def
R2006:2012 Coq.ZArith.Zlogarithm <> log_inf def
R2053:2059 Coq.ZArith.Zlogarithm <> log_inf def
R2061:2067 Coq.ZArith.Zlogarithm <> log_sup def
prf 2079:2091 <> Psize_log_inf
R2122:2124 Coq.Init.Logic <> ::type_scope:x_'='_x not
R2105:2108 Coq.Numbers.BinNums <> Zpos constr
R2111:2118 Coq.PArith.BinPos Pos size def
R2120:2120 Coq.ZArith.Zlogarithm <> p var
R2125:2130 Coq.ZArith.BinInt Z succ def
R2133:2139 Coq.ZArith.Zlogarithm <> log_inf def
R2141:2141 Coq.ZArith.Zlogarithm <> p var
R2190:2203 Coq.ZArith.BinInt Pos2Z inj_succ thm
R2190:2203 Coq.ZArith.BinInt Pos2Z inj_succ thm
R2190:2203 Coq.ZArith.BinInt Pos2Z inj_succ thm
R2190:2203 Coq.ZArith.BinInt Pos2Z inj_succ thm
R2190:2203 Coq.ZArith.BinInt Pos2Z inj_succ thm
R2190:2203 Coq.ZArith.BinInt Pos2Z inj_succ thm
R2190:2203 Coq.ZArith.BinInt Pos2Z inj_succ thm
R2190:2203 Coq.ZArith.BinInt Pos2Z inj_succ thm
R2190:2203 Coq.ZArith.BinInt Pos2Z inj_succ thm
prf 2228:2240 <> Zlog2_log_inf
R2269:2271 Coq.Init.Logic <> ::type_scope:x_'='_x not
R2254:2259 Coq.ZArith.BinInt Z log2 def
R2262:2265 Coq.Numbers.BinNums <> Zpos constr
R2267:2267 Coq.ZArith.Zlogarithm <> p var
R2272:2278 Coq.ZArith.Zlogarithm <> log_inf def
R2280:2280 Coq.ZArith.Zlogarithm <> p var
R2302:2307 Coq.ZArith.BinInt Z log2 def
R2344:2356 Coq.ZArith.Zlogarithm <> Psize_log_inf thm
R2344:2356 Coq.ZArith.Zlogarithm <> Psize_log_inf thm
R2344:2356 Coq.ZArith.Zlogarithm <> Psize_log_inf thm
prf 2375:2390 <> Zlog2_up_log_sup
R2422:2424 Coq.Init.Logic <> ::type_scope:x_'='_x not
R2404:2412 Coq.ZArith.BinInt Z log2_up def
R2415:2418 Coq.Numbers.BinNums <> Zpos constr
R2420:2420 Coq.ZArith.Zlogarithm <> p var
R2425:2431 Coq.ZArith.Zlogarithm <> log_sup def
R2433:2433 Coq.ZArith.Zlogarithm <> p var
R2489:2492 Coq.Numbers.BinNums <> Zpos constr
R2495:2496 Coq.PArith.BinPosDef <> ::positive_scope:x_'~'_'1' not
R2515:2515 Coq.ZArith.BinInt <> ::Z_scope:x_'+'_x not
R2506:2507 Coq.ZArith.BinInt <> ::Z_scope:x_'*'_x not
R2514:2514 Coq.ZArith.BinInt <> ::Z_scope:x_'*'_x not
R2508:2511 Coq.Numbers.BinNums <> Zpos constr
R2489:2492 Coq.Numbers.BinNums <> Zpos constr
R2495:2496 Coq.PArith.BinPosDef <> ::positive_scope:x_'~'_'1' not
R2515:2515 Coq.ZArith.BinInt <> ::Z_scope:x_'+'_x not
R2506:2507 Coq.ZArith.BinInt <> ::Z_scope:x_'*'_x not
R2514:2514 Coq.ZArith.BinInt <> ::Z_scope:x_'*'_x not
R2508:2511 Coq.Numbers.BinNums <> Zpos constr
R2533:2553 Coq.ZArith.BinInt Z log2_up_succ_double thm
R2556:2568 Coq.ZArith.Zlogarithm <> Zlog2_log_inf thm
R2533:2553 Coq.ZArith.BinInt Z log2_up_succ_double thm
R2533:2553 Coq.ZArith.BinInt Z log2_up_succ_double thm
R2533:2553 Coq.ZArith.BinInt Z log2_up_succ_double thm
R2556:2568 Coq.ZArith.Zlogarithm <> Zlog2_log_inf thm
R2556:2568 Coq.ZArith.Zlogarithm <> Zlog2_log_inf thm
R2593:2598 Coq.ZArith.BinInt Z succ def
R2615:2624 Coq.ZArith.BinInt Z add_comm thm
R2632:2642 Coq.ZArith.BinInt Z add_assoc thm
R2615:2624 Coq.ZArith.BinInt Z add_comm thm
R2615:2624 Coq.ZArith.BinInt Z add_comm thm
R2615:2624 Coq.ZArith.BinInt Z add_comm thm
R2615:2624 Coq.ZArith.BinInt Z add_comm thm
R2632:2642 Coq.ZArith.BinInt Z add_assoc thm
R2632:2642 Coq.ZArith.BinInt Z add_assoc thm
R2658:2661 Coq.Numbers.BinNums <> Zpos constr
R2664:2665 Coq.PArith.BinPosDef <> ::positive_scope:x_'~'_'0' not
R2675:2675 Coq.ZArith.BinInt <> ::Z_scope:x_'*'_x not
R2676:2679 Coq.Numbers.BinNums <> Zpos constr
R2658:2661 Coq.Numbers.BinNums <> Zpos constr
R2664:2665 Coq.PArith.BinPosDef <> ::positive_scope:x_'~'_'0' not
R2675:2675 Coq.ZArith.BinInt <> ::Z_scope:x_'*'_x not
R2676:2679 Coq.Numbers.BinNums <> Zpos constr
R2702:2717 Coq.ZArith.BinInt Z log2_up_double thm
R2702:2717 Coq.ZArith.BinInt Z log2_up_double thm
R2702:2717 Coq.ZArith.BinInt Z log2_up_double thm
R2702:2717 Coq.ZArith.BinInt Z log2_up_double thm
prf 2895:2909 <> log_inf_correct
R2926:2933 Coq.Numbers.BinNums <> positive ind
R2956:2959 Coq.Init.Logic <> ::type_scope:x_'/\'_x not
R2943:2946 Coq.ZArith.BinInt <> ::Z_scope:x_'<='_x not
R2947:2953 Coq.ZArith.Zlogarithm <> log_inf def
R2955:2955 Coq.ZArith.Zlogarithm <> x var
R2977:2980 Coq.ZArith.BinInt <> ::Z_scope:x_'<='_x_'<'_x not
R2987:2989 Coq.ZArith.BinInt <> ::Z_scope:x_'<='_x_'<'_x not
R2960:2964 Coq.ZArith.Zpower <> two_p def
R2967:2973 Coq.ZArith.Zlogarithm <> log_inf def
R2975:2975 Coq.ZArith.Zlogarithm <> x var
R2981:2984 Coq.Numbers.BinNums <> Zpos constr
R2986:2986 Coq.ZArith.Zlogarithm <> x var
R2981:2984 Coq.Numbers.BinNums <> Zpos constr
R2986:2986 Coq.ZArith.Zlogarithm <> x var
R2990:2994 Coq.ZArith.Zpower <> two_p def
R2997:3002 Coq.ZArith.BinInt Z succ def
R3005:3011 Coq.ZArith.Zlogarithm <> log_inf def
R3013:3013 Coq.ZArith.Zlogarithm <> x var
R3194:3207 Coq.ZArith.BinInt Z le_le_succ_r thm
R3164:3169 Coq.ZArith.BinInt Z succ def
R3172:3178 Coq.ZArith.Zlogarithm <> log_inf def
R3145:3151 Coq.ZArith.Zpower <> two_p_S thm
R3233:3239 Coq.ZArith.Zpower <> two_p_S thm
R3266:3272 Coq.ZArith.Zpower <> two_p_S thm
R3301:3319 Coq.ZArith.BinInt Pos2Z inj_xI thm
R3462:3475 Coq.ZArith.BinInt Z le_le_succ_r thm
R3432:3437 Coq.ZArith.BinInt Z succ def
R3440:3446 Coq.ZArith.Zlogarithm <> log_inf def
R3413:3419 Coq.ZArith.Zpower <> two_p_S thm
R3503:3509 Coq.ZArith.Zpower <> two_p_S thm
R3538:3544 Coq.ZArith.Zpower <> two_p_S thm
R3573:3591 Coq.ZArith.BinInt Pos2Z inj_xO thm
R3619:3631 Coq.ZArith.Zpower <> two_power_pos def
R3641:3649 Coq.ZArith.Zpower <> shift_pos def
R3164:3169 Coq.ZArith.BinInt Z succ def
R3172:3178 Coq.ZArith.Zlogarithm <> log_inf def
R3145:3151 Coq.ZArith.Zpower <> two_p_S thm
R3194:3207 Coq.ZArith.BinInt Z le_le_succ_r thm
R3164:3169 Coq.ZArith.BinInt Z succ def
R3172:3178 Coq.ZArith.Zlogarithm <> log_inf def
R3145:3151 Coq.ZArith.Zpower <> two_p_S thm
R3233:3239 Coq.ZArith.Zpower <> two_p_S thm
R3233:3239 Coq.ZArith.Zpower <> two_p_S thm
R3266:3272 Coq.ZArith.Zpower <> two_p_S thm
R3266:3272 Coq.ZArith.Zpower <> two_p_S thm
R3301:3319 Coq.ZArith.BinInt Pos2Z inj_xI thm
R3301:3319 Coq.ZArith.BinInt Pos2Z inj_xI thm
R3432:3437 Coq.ZArith.BinInt Z succ def
R3440:3446 Coq.ZArith.Zlogarithm <> log_inf def
R3413:3419 Coq.ZArith.Zpower <> two_p_S thm
R3462:3475 Coq.ZArith.BinInt Z le_le_succ_r thm
R3432:3437 Coq.ZArith.BinInt Z succ def
R3440:3446 Coq.ZArith.Zlogarithm <> log_inf def
R3413:3419 Coq.ZArith.Zpower <> two_p_S thm
R3503:3509 Coq.ZArith.Zpower <> two_p_S thm
R3503:3509 Coq.ZArith.Zpower <> two_p_S thm
R3538:3544 Coq.ZArith.Zpower <> two_p_S thm
R3538:3544 Coq.ZArith.Zpower <> two_p_S thm
R3573:3591 Coq.ZArith.BinInt Pos2Z inj_xO thm
R3573:3591 Coq.ZArith.BinInt Pos2Z inj_xO thm
def 3692:3707 <> log_inf_correct1
R3712:3719 Coq.Numbers.BinNums <> positive ind
R3725:3729 Coq.Init.Logic <> proj1 thm
R3732:3746 Coq.ZArith.Zlogarithm <> log_inf_correct thm
R3748:3748 Coq.ZArith.Zlogarithm <> p var
def 3765:3780 <> log_inf_correct2
R3785:3792 Coq.Numbers.BinNums <> positive ind
R3798:3802 Coq.Init.Logic <> proj2 thm
R3805:3819 Coq.ZArith.Zlogarithm <> log_inf_correct thm
R3821:3821 Coq.ZArith.Zlogarithm <> p var
R3835:3850 Coq.ZArith.Zlogarithm <> log_inf_correct1 def
R3852:3867 Coq.ZArith.Zlogarithm <> log_inf_correct2 def
prf 3938:3953 <> log_sup_correct1
R3966:3973 Coq.Numbers.BinNums <> positive ind
R3977:3980 Coq.ZArith.BinInt <> ::Z_scope:x_'<='_x not
R3981:3987 Coq.ZArith.Zlogarithm <> log_sup def
R3989:3989 Coq.ZArith.Zlogarithm <> p var
prf 4201:4215 <> log_sup_log_inf
R4232:4239 Coq.Numbers.BinNums <> positive ind
R4248:4250 Coq.Init.Logic <> ::type_scope:'IF'_x_'then'_x_'else'_x not
R4277:4282 Coq.Init.Logic <> ::type_scope:'IF'_x_'then'_x_'else'_x not
R4309:4318 Coq.Init.Logic <> ::type_scope:'IF'_x_'then'_x_'else'_x not
R4257:4259 Coq.Init.Logic <> ::type_scope:x_'='_x not
R4251:4254 Coq.Numbers.BinNums <> Zpos constr
R4256:4256 Coq.ZArith.Zlogarithm <> p var
R4260:4264 Coq.ZArith.Zpower <> two_p def
R4267:4273 Coq.ZArith.Zlogarithm <> log_inf def
R4275:4275 Coq.ZArith.Zlogarithm <> p var
R4289:4291 Coq.Init.Logic <> ::type_scope:x_'='_x not
R4283:4286 Coq.Numbers.BinNums <> Zpos constr
R4288:4288 Coq.ZArith.Zlogarithm <> p var
R4292:4296 Coq.ZArith.Zpower <> two_p def
R4299:4305 Coq.ZArith.Zlogarithm <> log_sup def
R4307:4307 Coq.ZArith.Zlogarithm <> p var
R4328:4330 Coq.Init.Logic <> ::type_scope:x_'='_x not
R4319:4325 Coq.ZArith.Zlogarithm <> log_sup def
R4327:4327 Coq.ZArith.Zlogarithm <> p var
R4331:4336 Coq.ZArith.BinInt Z succ def
R4339:4345 Coq.ZArith.Zlogarithm <> log_inf def
R4347:4347 Coq.ZArith.Zlogarithm <> p var
R4432:4438 Coq.ZArith.Zpower <> two_p_S thm
R4454:4469 Coq.ZArith.Zlogarithm <> log_inf_correct1 def
R4441:4447 Coq.ZArith.Zlogarithm <> log_inf def
R4488:4506 Coq.ZArith.BinInt Pos2Z inj_xI thm
R4516:4521 Coq.ZArith.BinInt Z succ def
R4593:4599 Coq.ZArith.Zpower <> two_p_S thm
R4615:4630 Coq.ZArith.Zlogarithm <> log_inf_correct1 def
R4602:4608 Coq.ZArith.Zlogarithm <> log_inf def
R4654:4660 Coq.ZArith.Zpower <> two_p_S thm
R4676:4691 Coq.ZArith.Zlogarithm <> log_sup_correct1 thm
R4663:4669 Coq.ZArith.Zlogarithm <> log_sup def
R4713:4717 Coq.Init.Logic <> proj1 thm
R4737:4741 Coq.Init.Logic <> proj2 thm
R4795:4801 Coq.ZArith.Zpower <> two_p_S thm
R4817:4832 Coq.ZArith.Zlogarithm <> log_inf_correct1 def
R4804:4810 Coq.ZArith.Zlogarithm <> log_inf def
R4850:4868 Coq.ZArith.BinInt Pos2Z inj_xO thm
R4878:4883 Coq.ZArith.BinInt Z succ def
R4432:4438 Coq.ZArith.Zpower <> two_p_S thm
R4454:4469 Coq.ZArith.Zlogarithm <> log_inf_correct1 def
R4441:4447 Coq.ZArith.Zlogarithm <> log_inf def
R4432:4438 Coq.ZArith.Zpower <> two_p_S thm
R4454:4469 Coq.ZArith.Zlogarithm <> log_inf_correct1 def
R4441:4447 Coq.ZArith.Zlogarithm <> log_inf def
R4432:4438 Coq.ZArith.Zpower <> two_p_S thm
R4454:4469 Coq.ZArith.Zlogarithm <> log_inf_correct1 def
R4441:4447 Coq.ZArith.Zlogarithm <> log_inf def
R4432:4438 Coq.ZArith.Zpower <> two_p_S thm
R4454:4469 Coq.ZArith.Zlogarithm <> log_inf_correct1 def
R4441:4447 Coq.ZArith.Zlogarithm <> log_inf def
R4488:4506 Coq.ZArith.BinInt Pos2Z inj_xI thm
R4488:4506 Coq.ZArith.BinInt Pos2Z inj_xI thm
R4488:4506 Coq.ZArith.BinInt Pos2Z inj_xI thm
R4488:4506 Coq.ZArith.BinInt Pos2Z inj_xI thm
R4593:4599 Coq.ZArith.Zpower <> two_p_S thm
R4615:4630 Coq.ZArith.Zlogarithm <> log_inf_correct1 def
R4602:4608 Coq.ZArith.Zlogarithm <> log_inf def
R4593:4599 Coq.ZArith.Zpower <> two_p_S thm
R4615:4630 Coq.ZArith.Zlogarithm <> log_inf_correct1 def
R4602:4608 Coq.ZArith.Zlogarithm <> log_inf def
R4654:4660 Coq.ZArith.Zpower <> two_p_S thm
R4676:4691 Coq.ZArith.Zlogarithm <> log_sup_correct1 thm
R4663:4669 Coq.ZArith.Zlogarithm <> log_sup def
R4654:4660 Coq.ZArith.Zpower <> two_p_S thm
R4676:4691 Coq.ZArith.Zlogarithm <> log_sup_correct1 thm
R4663:4669 Coq.ZArith.Zlogarithm <> log_sup def
R4713:4717 Coq.Init.Logic <> proj1 thm
R4713:4717 Coq.Init.Logic <> proj1 thm
R4737:4741 Coq.Init.Logic <> proj2 thm
R4737:4741 Coq.Init.Logic <> proj2 thm
R4795:4801 Coq.ZArith.Zpower <> two_p_S thm
R4817:4832 Coq.ZArith.Zlogarithm <> log_inf_correct1 def
R4804:4810 Coq.ZArith.Zlogarithm <> log_inf def
R4795:4801 Coq.ZArith.Zpower <> two_p_S thm
R4817:4832 Coq.ZArith.Zlogarithm <> log_inf_correct1 def
R4804:4810 Coq.ZArith.Zlogarithm <> log_inf def
R4850:4868 Coq.ZArith.BinInt Pos2Z inj_xO thm
R4850:4868 Coq.ZArith.BinInt Pos2Z inj_xO thm
prf 4933:4948 <> log_sup_correct2
R4965:4972 Coq.Numbers.BinNums <> positive ind
R5001:5003 Coq.ZArith.BinInt <> ::Z_scope:x_'<'_x_'<='_x not
R5010:5013 Coq.ZArith.BinInt <> ::Z_scope:x_'<'_x_'<='_x not
R4975:4979 Coq.ZArith.Zpower <> two_p def
R4982:4987 Coq.ZArith.BinInt Z pred def
R4990:4996 Coq.ZArith.Zlogarithm <> log_sup def
R4998:4998 Coq.ZArith.Zlogarithm <> x var
R5004:5007 Coq.Numbers.BinNums <> Zpos constr
R5009:5009 Coq.ZArith.Zlogarithm <> x var
R5004:5007 Coq.Numbers.BinNums <> Zpos constr
R5009:5009 Coq.ZArith.Zlogarithm <> x var
R5014:5018 Coq.ZArith.Zpower <> two_p def
R5021:5027 Coq.ZArith.Zlogarithm <> log_sup def
R5029:5029 Coq.ZArith.Zlogarithm <> x var
R5063:5077 Coq.ZArith.Zlogarithm <> log_sup_log_inf thm
R5063:5077 Coq.ZArith.Zlogarithm <> log_sup_log_inf thm
R5188:5197 Coq.ZArith.Zpower <> two_p_pred thm
R5206:5221 Coq.ZArith.Zlogarithm <> log_sup_correct1 thm
R5231:5239 Coq.ZArith.BinInt Z le_refl thm
R5188:5197 Coq.ZArith.Zpower <> two_p_pred thm
R5206:5221 Coq.ZArith.Zlogarithm <> log_sup_correct1 thm
R5231:5239 Coq.ZArith.BinInt Z le_refl thm
R5289:5299 Coq.ZArith.BinInt Z pred_succ thm
R5302:5308 Coq.ZArith.Zlogarithm <> log_inf def
R5289:5299 Coq.ZArith.BinInt Z pred_succ thm
R5302:5308 Coq.ZArith.Zlogarithm <> log_inf def
R5289:5299 Coq.ZArith.BinInt Z pred_succ thm
R5302:5308 Coq.ZArith.Zlogarithm <> log_inf def
R5331:5346 Coq.ZArith.Zlogarithm <> log_inf_correct2 def
R5331:5346 Coq.ZArith.Zlogarithm <> log_inf_correct2 def
prf 5375:5392 <> log_inf_le_log_sup
R5405:5412 Coq.Numbers.BinNums <> positive ind
R5424:5427 Coq.ZArith.BinInt <> ::Z_scope:x_'<='_x not
R5415:5421 Coq.ZArith.Zlogarithm <> log_inf def
R5423:5423 Coq.ZArith.Zlogarithm <> p var
R5428:5434 Coq.ZArith.Zlogarithm <> log_sup def
R5436:5436 Coq.ZArith.Zlogarithm <> p var
prf 5510:5528 <> log_sup_le_Slog_inf
R5541:5548 Coq.Numbers.BinNums <> positive ind
R5560:5563 Coq.ZArith.BinInt <> ::Z_scope:x_'<='_x not
R5551:5557 Coq.ZArith.Zlogarithm <> log_sup def
R5559:5559 Coq.ZArith.Zlogarithm <> p var
R5564:5569 Coq.ZArith.BinInt Z succ def
R5572:5578 Coq.ZArith.Zlogarithm <> log_inf def
R5580:5580 Coq.ZArith.Zlogarithm <> p var
def 5740:5747 <> log_near
R5752:5759 Coq.Numbers.BinNums <> positive ind
R5764:5764 Coq.Numbers.BinNums <> Z ind
R5779:5779 Coq.ZArith.Zlogarithm <> x var
R5794:5795 Coq.Numbers.BinNums <> xH constr
R5810:5811 Coq.Numbers.BinNums <> xO constr
R5813:5814 Coq.Numbers.BinNums <> xH constr
R5829:5830 Coq.Numbers.BinNums <> xI constr
R5832:5833 Coq.Numbers.BinNums <> xH constr
R5848:5849 Coq.Numbers.BinNums <> xO constr
R5856:5861 Coq.ZArith.BinInt Z succ def
R5864:5871 Coq.ZArith.Zlogarithm <> log_near def
R5884:5885 Coq.Numbers.BinNums <> xI constr
R5892:5897 Coq.ZArith.BinInt Z succ def
R5900:5907 Coq.ZArith.Zlogarithm <> log_near def
prf 5932:5948 <> log_near_correct1
R5961:5968 Coq.Numbers.BinNums <> positive ind
R5972:5975 Coq.ZArith.BinInt <> ::Z_scope:x_'<='_x not
R5976:5983 Coq.ZArith.Zlogarithm <> log_near def
R5985:5985 Coq.ZArith.Zlogarithm <> p var
R6143:6156 Coq.ZArith.BinInt Z le_le_succ_r thm
R6143:6156 Coq.ZArith.BinInt Z le_le_succ_r thm
R6209:6222 Coq.ZArith.BinInt Z le_le_succ_r thm
R6209:6222 Coq.ZArith.BinInt Z le_le_succ_r thm
prf 6275:6291 <> log_near_correct2
R6308:6315 Coq.Numbers.BinNums <> positive ind
R6340:6343 Coq.Init.Logic <> ::type_scope:x_'\/'_x not
R6328:6330 Coq.Init.Logic <> ::type_scope:x_'='_x not
R6318:6325 Coq.ZArith.Zlogarithm <> log_near def
R6327:6327 Coq.ZArith.Zlogarithm <> p var
R6331:6337 Coq.ZArith.Zlogarithm <> log_inf def
R6339:6339 Coq.ZArith.Zlogarithm <> p var
R6354:6356 Coq.Init.Logic <> ::type_scope:x_'='_x not
R6344:6351 Coq.ZArith.Zlogarithm <> log_near def
R6353:6353 Coq.ZArith.Zlogarithm <> p var
R6357:6363 Coq.ZArith.Zlogarithm <> log_sup def
R6365:6365 Coq.ZArith.Zlogarithm <> p var
R6540:6554 Coq.ZArith.Zlogarithm <> log_sup_log_inf thm
R6540:6554 Coq.ZArith.Zlogarithm <> log_sup_log_inf thm
R6577:6594 Coq.ZArith.Zlogarithm <> log_inf_le_log_sup thm
R6577:6594 Coq.ZArith.Zlogarithm <> log_inf_le_log_sup thm
R6617:6635 Coq.ZArith.Zlogarithm <> log_sup_le_Slog_inf thm
R6617:6635 Coq.ZArith.Zlogarithm <> log_sup_le_Slog_inf thm
R6931:6937 Coq.ZArith.Zlogarithm Log_pos <> sec
sec 6949:6954 <> divers
def 7013:7020 <> N_digits
R7025:7025 Coq.Numbers.BinNums <> Z ind
R7041:7041 Coq.ZArith.Zlogarithm <> x var
R7056:7059 Coq.Numbers.BinNums <> Zpos constr
R7066:7072 Coq.ZArith.Zlogarithm <> log_inf def
R7084:7087 Coq.Numbers.BinNums <> Zneg constr
R7094:7100 Coq.ZArith.Zlogarithm <> log_inf def
R7112:7113 Coq.Numbers.BinNums <> Z0 constr
prf 7138:7153 <> ZERO_le_N_digits
R7166:7166 Coq.Numbers.BinNums <> Z ind
R7170:7173 Coq.ZArith.BinInt <> ::Z_scope:x_'<='_x not
R7174:7181 Coq.ZArith.Zlogarithm <> N_digits def
R7183:7183 Coq.ZArith.Zlogarithm <> x var
R7240:7248 Coq.ZArith.BinInt Z le_refl thm
R7258:7273 Coq.ZArith.Zlogarithm <> log_inf_correct1 def
R7283:7298 Coq.ZArith.Zlogarithm <> log_inf_correct1 def
R7240:7248 Coq.ZArith.BinInt Z le_refl thm
R7258:7273 Coq.ZArith.Zlogarithm <> log_inf_correct1 def
R7283:7298 Coq.ZArith.Zlogarithm <> log_inf_correct1 def
prf 7319:7335 <> log_inf_shift_nat
R7348:7350 Coq.Init.Datatypes <> nat ind
R7376:7378 Coq.Init.Logic <> ::type_scope:x_'='_x not
R7353:7359 Coq.ZArith.Zlogarithm <> log_inf def
R7362:7370 Coq.ZArith.Zpower <> shift_nat def
R7372:7372 Coq.ZArith.Zlogarithm <> n var
R7379:7386 Coq.ZArith.BinInt Z of_nat def
R7388:7388 Coq.ZArith.Zlogarithm <> n var
R7462:7475 Coq.ZArith.Znat Nat2Z inj_succ thm
R7462:7475 Coq.ZArith.Znat Nat2Z inj_succ thm
R7462:7475 Coq.ZArith.Znat Nat2Z inj_succ thm
prf 7523:7539 <> log_sup_shift_nat
R7552:7554 Coq.Init.Datatypes <> nat ind
R7580:7582 Coq.Init.Logic <> ::type_scope:x_'='_x not
R7557:7563 Coq.ZArith.Zlogarithm <> log_sup def
R7566:7574 Coq.ZArith.Zpower <> shift_nat def
R7576:7576 Coq.ZArith.Zlogarithm <> n var
R7583:7590 Coq.ZArith.BinInt Z of_nat def
R7592:7592 Coq.ZArith.Zlogarithm <> n var
R7666:7679 Coq.ZArith.Znat Nat2Z inj_succ thm
R7666:7679 Coq.ZArith.Znat Nat2Z inj_succ thm
R7666:7679 Coq.ZArith.Znat Nat2Z inj_succ thm
def 7783:7790 <> Is_power
R7795:7802 Coq.Numbers.BinNums <> positive ind
R7825:7825 Coq.ZArith.Zlogarithm <> p var
R7840:7841 Coq.Numbers.BinNums <> xH constr
R7846:7849 Coq.Init.Logic <> True ind
R7859:7860 Coq.Numbers.BinNums <> xO constr
R7867:7874 Coq.ZArith.Zlogarithm <> Is_power def
R7886:7887 Coq.Numbers.BinNums <> xI constr
R7894:7898 Coq.Init.Logic <> False ind
prf 7918:7933 <> Is_power_correct
R7950:7957 Coq.Numbers.BinNums <> positive ind
R7970:7975 Coq.Init.Logic <> ::type_scope:x_'<->'_x not
R8009:8009 Coq.Init.Logic <> ::type_scope:x_'<->'_x not
R7960:7967 Coq.ZArith.Zlogarithm <> Is_power def
R7969:7969 Coq.ZArith.Zlogarithm <> p var
R7976:7982 Coq.Init.Logic <> ::type_scope:'exists'_x_'..'_x_','_x not
R7990:7991 Coq.Init.Logic <> ::type_scope:'exists'_x_'..'_x_','_x not
R7987:7989 Coq.Init.Datatypes <> nat ind
R7993:7995 Coq.Init.Logic <> ::type_scope:x_'='_x not
R7992:7992 Coq.ZArith.Zlogarithm <> p var
R7996:8004 Coq.ZArith.Zpower <> shift_nat def
R8006:8006 Coq.ZArith.Zlogarithm <> y var
R8150:8150 Coq.Init.Datatypes <> S constr
R8150:8150 Coq.Init.Datatypes <> S constr
prf 8311:8321 <> Is_power_or
R8334:8341 Coq.Numbers.BinNums <> positive ind
R8354:8357 Coq.Init.Logic <> ::type_scope:x_'\/'_x not
R8344:8351 Coq.ZArith.Zlogarithm <> Is_power def
R8353:8353 Coq.ZArith.Zlogarithm <> p var
R8358:8359 Coq.Init.Logic <> ::type_scope:'~'_x not
R8360:8367 Coq.ZArith.Zlogarithm <> Is_power def
R8369:8369 Coq.ZArith.Zlogarithm <> p var
R8574:8579 Coq.ZArith.Zlogarithm divers <> sec
