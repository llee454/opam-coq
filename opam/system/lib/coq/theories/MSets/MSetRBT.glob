DIGEST d07bce7d85ac91e5e03d6415525cf492
FCoq.MSets.MSetRBT
R1573:1583 Coq.MSets.MSetGenTree <> <> lib
R1601:1604 Coq.Bool.Bool <> <> lib
R1606:1609 Coq.Lists.List <> <> lib
R1611:1616 Coq.PArith.BinPos <> <> lib
R1618:1621 Coq.PArith.Pnat <> <> lib
R1623:1628 Coq.Setoids.Setoid <> <> lib
R1630:1639 Coq.Lists.SetoidList <> <> lib
R1641:1648 Coq.Arith.PeanoNat <> <> lib
R1886:1900 Coq.MSets.MSetInterface S <> mod
modtype 1862:1874 <> MSetRemoveMin
ax 1916:1925 MSetRemoveMin remove_min
R1930:1933 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R1934:1939 Coq.Init.Datatypes <> option ind
R1945:1947 Coq.Init.Datatypes <> ::type_scope:x_'*'_x not
R1942:1944 Coq.MSets.MSetRBT M elt def
R1948:1948 Coq.MSets.MSetRBT M t defax
R1929:1929 Coq.MSets.MSetRBT M t defax
ax 1960:1975 MSetRemoveMin remove_min_spec1
R2022:2028 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R2047:2050 Coq.Init.Logic <> ::type_scope:x_'/\'_x not
R2038:2040 Coq.Init.Logic <> ::type_scope:x_'='_x not
R2029:2035 Coq.MSets.MSetRBT M min_elt defax
R2037:2037 Coq.MSets.MSetRBT <> s var
R2041:2044 Coq.Init.Datatypes <> Some constr
R2046:2046 Coq.MSets.MSetRBT <> k var
R2061:2065 Coq.MSets.MSetInterface WSetsOn :::x_'[=]'_x not
R2051:2056 Coq.MSets.MSetRBT M remove defax
R2060:2060 Coq.MSets.MSetRBT <> s var
R2058:2058 Coq.MSets.MSetRBT <> k var
R2066:2067 Coq.MSets.MSetRBT <> s' var
R2008:2010 Coq.Init.Logic <> ::type_scope:x_'='_x not
R1996:2005 Coq.MSets.MSetRBT MSetRemoveMin remove_min defax
R2007:2007 Coq.MSets.MSetRBT <> s var
R2011:2014 Coq.Init.Datatypes <> Some constr
R2016:2016 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R2018:2018 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R2021:2021 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R2017:2017 Coq.MSets.MSetRBT <> k var
R2019:2020 Coq.MSets.MSetRBT <> s' var
ax 2078:2093 MSetRemoveMin remove_min_spec2
R2126:2129 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R2130:2134 Coq.MSets.MSetRBT M Empty def
R2136:2136 Coq.MSets.MSetRBT <> s var
R2119:2121 Coq.Init.Logic <> ::type_scope:x_'='_x not
R2107:2116 Coq.MSets.MSetRBT MSetRemoveMin remove_min defax
R2118:2118 Coq.MSets.MSetRBT <> s var
R2122:2125 Coq.Init.Datatypes <> None constr
R2144:2156 Coq.MSets.MSetRBT MSetRemoveMin <> modtype
ind 2208:2212 <> color
constr 2217:2219 <> Red
constr 2223:2227 <> Black
R2220:2220 Coq.MSets.MSetRBT <> color ind
R2228:2228 Coq.MSets.MSetRBT <> color ind
mod 2238:2242 <> Color
def 2257:2257 Color t
R2262:2266 Coq.MSets.MSetRBT <> color ind
R2273:2277 Coq.MSets.MSetRBT Color <> mod
R2330:2347 Coq.Structures.Orders OrderedType <> mod
R2353:2369 Coq.MSets.MSetInterface Ops <> mod
R2371:2371 Coq.MSets.MSetRBT X <> modtype
mod 2323:2325 <> Ops
R2601:2615 Coq.MSets.MSetGenTree Ops <> mod
R2617:2617 Coq.MSets.MSetRBT X <> modtype
R2619:2623 Coq.MSets.MSetRBT Color <> modtype
def 2638:2638 Ops t
R2643:2646 Coq.MSets.MSetRBT Ops tree ind
syndef 2664:2665 Ops Rd
R2671:2674 Coq.MSets.MSetRBT Ops Node constr
R2676:2678 Coq.MSets.MSetRBT <> Red constr
syndef 2697:2698 Ops Bk
R2704:2707 Coq.MSets.MSetRBT Ops Node constr
R2709:2713 Coq.MSets.MSetRBT <> Black constr
def 2751:2759 Ops singleton
R2765:2767 Coq.MSets.MSetRBT Ops elt def
R2772:2775 Coq.MSets.MSetRBT Ops tree ind
R2780:2781 Coq.MSets.MSetRBT Ops Bk syndef
R2790:2793 Coq.MSets.MSetRBT Ops Leaf constr
R2788:2788 Coq.MSets.MSetRBT <> k var
R2783:2786 Coq.MSets.MSetRBT Ops Leaf constr
def 2839:2847 Ops makeBlack
R2861:2861 Coq.MSets.MSetRBT <> t var
R2871:2874 Coq.MSets.MSetRBT Ops Leaf constr
R2879:2882 Coq.MSets.MSetRBT Ops Leaf constr
R2887:2890 Coq.MSets.MSetRBT Ops Node constr
R2903:2904 Coq.MSets.MSetRBT Ops Bk syndef
def 2930:2936 Ops makeRed
R2950:2950 Coq.MSets.MSetRBT <> t var
R2960:2963 Coq.MSets.MSetRBT Ops Leaf constr
R2968:2971 Coq.MSets.MSetRBT Ops Leaf constr
R2976:2979 Coq.MSets.MSetRBT Ops Node constr
R2992:2993 Coq.MSets.MSetRBT Ops Rd syndef
def 3143:3146 Ops lbal
R3164:3164 Coq.MSets.MSetRBT <> l var
R3195:3196 Coq.MSets.MSetRBT Ops Rd syndef
R3212:3213 Coq.MSets.MSetRBT Ops Bk syndef
R3219:3219 Coq.MSets.MSetRBT <> r var
R3217:3217 Coq.MSets.MSetRBT <> k var
R3199:3200 Coq.MSets.MSetRBT Ops Bk syndef
R3246:3247 Coq.MSets.MSetRBT Ops Rd syndef
R3263:3264 Coq.MSets.MSetRBT Ops Bk syndef
R3270:3270 Coq.MSets.MSetRBT <> r var
R3268:3268 Coq.MSets.MSetRBT <> k var
R3250:3251 Coq.MSets.MSetRBT Ops Bk syndef
R3281:3282 Coq.MSets.MSetRBT Ops Bk syndef
R3288:3288 Coq.MSets.MSetRBT <> r var
R3286:3286 Coq.MSets.MSetRBT <> k var
R3284:3284 Coq.MSets.MSetRBT <> l var
def 3308:3311 Ops rbal
R3329:3329 Coq.MSets.MSetRBT <> r var
R3360:3361 Coq.MSets.MSetRBT Ops Rd syndef
R3377:3378 Coq.MSets.MSetRBT Ops Bk syndef
R3364:3365 Coq.MSets.MSetRBT Ops Bk syndef
R3369:3369 Coq.MSets.MSetRBT <> k var
R3367:3367 Coq.MSets.MSetRBT <> l var
R3411:3412 Coq.MSets.MSetRBT Ops Rd syndef
R3428:3429 Coq.MSets.MSetRBT Ops Bk syndef
R3415:3416 Coq.MSets.MSetRBT Ops Bk syndef
R3420:3420 Coq.MSets.MSetRBT <> k var
R3418:3418 Coq.MSets.MSetRBT <> l var
R3446:3447 Coq.MSets.MSetRBT Ops Bk syndef
R3453:3453 Coq.MSets.MSetRBT <> r var
R3451:3451 Coq.MSets.MSetRBT <> k var
R3449:3449 Coq.MSets.MSetRBT <> l var
def 3582:3586 Ops rbal'
R3604:3604 Coq.MSets.MSetRBT <> r var
R3635:3636 Coq.MSets.MSetRBT Ops Rd syndef
R3652:3653 Coq.MSets.MSetRBT Ops Bk syndef
R3639:3640 Coq.MSets.MSetRBT Ops Bk syndef
R3644:3644 Coq.MSets.MSetRBT <> k var
R3642:3642 Coq.MSets.MSetRBT <> l var
R3686:3687 Coq.MSets.MSetRBT Ops Rd syndef
R3703:3704 Coq.MSets.MSetRBT Ops Bk syndef
R3690:3691 Coq.MSets.MSetRBT Ops Bk syndef
R3695:3695 Coq.MSets.MSetRBT <> k var
R3693:3693 Coq.MSets.MSetRBT <> l var
R3721:3722 Coq.MSets.MSetRBT Ops Bk syndef
R3728:3728 Coq.MSets.MSetRBT <> r var
R3726:3726 Coq.MSets.MSetRBT <> k var
R3724:3724 Coq.MSets.MSetRBT <> l var
def 3929:3933 Ops lbalS
R3951:3951 Coq.MSets.MSetRBT <> l var
R3973:3974 Coq.MSets.MSetRBT Ops Rd syndef
R3989:3989 Coq.MSets.MSetRBT <> r var
R3987:3987 Coq.MSets.MSetRBT <> k var
R3977:3978 Coq.MSets.MSetRBT Ops Bk syndef
R4008:4008 Coq.MSets.MSetRBT <> r var
R4032:4036 Coq.MSets.MSetRBT Ops rbal' def
R4043:4044 Coq.MSets.MSetRBT Ops Rd syndef
R4040:4040 Coq.MSets.MSetRBT <> k var
R4038:4038 Coq.MSets.MSetRBT <> l var
R4079:4080 Coq.MSets.MSetRBT Ops Rd syndef
R4096:4100 Coq.MSets.MSetRBT Ops rbal' def
R4107:4113 Coq.MSets.MSetRBT Ops makeRed def
R4083:4084 Coq.MSets.MSetRBT Ops Bk syndef
R4088:4088 Coq.MSets.MSetRBT <> k var
R4086:4086 Coq.MSets.MSetRBT <> l var
R4129:4130 Coq.MSets.MSetRBT Ops Rd syndef
R4136:4136 Coq.MSets.MSetRBT <> r var
R4134:4134 Coq.MSets.MSetRBT <> k var
R4132:4132 Coq.MSets.MSetRBT <> l var
def 4180:4184 Ops rbalS
R4202:4202 Coq.MSets.MSetRBT <> r var
R4224:4225 Coq.MSets.MSetRBT Ops Rd syndef
R4232:4233 Coq.MSets.MSetRBT Ops Bk syndef
R4229:4229 Coq.MSets.MSetRBT <> k var
R4227:4227 Coq.MSets.MSetRBT <> l var
R4259:4259 Coq.MSets.MSetRBT <> l var
R4283:4286 Coq.MSets.MSetRBT Ops lbal def
R4301:4301 Coq.MSets.MSetRBT <> r var
R4299:4299 Coq.MSets.MSetRBT <> k var
R4289:4290 Coq.MSets.MSetRBT Ops Rd syndef
R4329:4330 Coq.MSets.MSetRBT Ops Rd syndef
R4358:4359 Coq.MSets.MSetRBT Ops Bk syndef
R4365:4365 Coq.MSets.MSetRBT <> r var
R4363:4363 Coq.MSets.MSetRBT <> k var
R4333:4336 Coq.MSets.MSetRBT Ops lbal def
R4339:4345 Coq.MSets.MSetRBT Ops makeRed def
R4378:4379 Coq.MSets.MSetRBT Ops Rd syndef
R4385:4385 Coq.MSets.MSetRBT <> r var
R4383:4383 Coq.MSets.MSetRBT <> k var
R4381:4381 Coq.MSets.MSetRBT <> l var
def 4448:4450 Ops ins
R4466:4466 Coq.MSets.MSetRBT <> s var
R4476:4479 Coq.MSets.MSetRBT Ops Leaf constr
R4484:4485 Coq.MSets.MSetRBT Ops Rd syndef
R4494:4497 Coq.MSets.MSetRBT Ops Leaf constr
R4492:4492 Coq.MSets.MSetRBT <> x var
R4487:4490 Coq.MSets.MSetRBT Ops Leaf constr
R4502:4505 Coq.MSets.MSetRBT Ops Node constr
R4527:4535 Coq.MSets.MSetRBT X compare defax
R4537:4537 Coq.MSets.MSetRBT <> x var
R4551:4552 Coq.Init.Datatypes <> Eq constr
R4557:4557 Coq.MSets.MSetRBT <> s var
R4564:4565 Coq.Init.Datatypes <> Lt constr
R4595:4597 Coq.MSets.MSetRBT <> Red constr
R4602:4603 Coq.MSets.MSetRBT Ops Rd syndef
R4606:4608 Coq.MSets.MSetRBT <> ins def
R4610:4610 Coq.MSets.MSetRBT <> x var
R4626:4630 Coq.MSets.MSetRBT <> Black constr
R4635:4638 Coq.MSets.MSetRBT Ops lbal def
R4641:4643 Coq.MSets.MSetRBT <> ins def
R4645:4645 Coq.MSets.MSetRBT <> x var
R4668:4669 Coq.Init.Datatypes <> Gt constr
R4699:4701 Coq.MSets.MSetRBT <> Red constr
R4706:4707 Coq.MSets.MSetRBT Ops Rd syndef
R4714:4716 Coq.MSets.MSetRBT <> ins def
R4718:4718 Coq.MSets.MSetRBT <> x var
R4730:4734 Coq.MSets.MSetRBT <> Black constr
R4739:4742 Coq.MSets.MSetRBT Ops rbal def
R4749:4751 Coq.MSets.MSetRBT <> ins def
R4753:4753 Coq.MSets.MSetRBT <> x var
def 4792:4794 Ops add
R4803:4811 Coq.MSets.MSetRBT Ops makeBlack def
R4814:4816 Coq.MSets.MSetRBT Ops ins def
R4820:4820 Coq.MSets.MSetRBT <> s var
R4818:4818 Coq.MSets.MSetRBT <> x var
def 4854:4859 Ops append
R4864:4867 Coq.MSets.MSetRBT Ops tree ind
R4876:4879 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R4880:4883 Coq.MSets.MSetRBT Ops tree ind
R4872:4875 Coq.MSets.MSetRBT Ops tree ind
R4895:4895 Coq.MSets.MSetRBT <> l var
R4905:4908 Coq.MSets.MSetRBT Ops Leaf constr
R4922:4922 Coq.MSets.MSetRBT <> r var
R4927:4930 Coq.MSets.MSetRBT Ops Node constr
R4966:4969 Coq.MSets.MSetRBT Ops tree ind
R4974:4977 Coq.MSets.MSetRBT Ops tree ind
R4991:4991 Coq.MSets.MSetRBT <> r var
R5003:5006 Coq.MSets.MSetRBT Ops Leaf constr
R5011:5011 Coq.MSets.MSetRBT <> l var
R5018:5021 Coq.MSets.MSetRBT Ops Node constr
R5068:5070 Coq.MSets.MSetRBT <> Red constr
R5073:5075 Coq.MSets.MSetRBT <> Red constr
R5098:5103 Coq.MSets.MSetRBT <> append def
R5127:5129 Coq.MSets.MSetRBT <> lrl var
R5161:5162 Coq.MSets.MSetRBT Ops Rd syndef
R5182:5183 Coq.MSets.MSetRBT Ops Rd syndef
R5165:5166 Coq.MSets.MSetRBT Ops Rd syndef
R5210:5211 Coq.MSets.MSetRBT Ops Rd syndef
R5220:5221 Coq.MSets.MSetRBT Ops Rd syndef
R5223:5225 Coq.MSets.MSetRBT <> lrl var
R5252:5256 Coq.MSets.MSetRBT <> Black constr
R5259:5263 Coq.MSets.MSetRBT <> Black constr
R5286:5291 Coq.MSets.MSetRBT <> append def
R5315:5317 Coq.MSets.MSetRBT <> lrl var
R5349:5350 Coq.MSets.MSetRBT Ops Rd syndef
R5370:5371 Coq.MSets.MSetRBT Ops Bk syndef
R5353:5354 Coq.MSets.MSetRBT Ops Bk syndef
R5398:5402 Coq.MSets.MSetRBT Ops lbalS def
R5411:5412 Coq.MSets.MSetRBT Ops Bk syndef
R5414:5416 Coq.MSets.MSetRBT <> lrl var
R5443:5447 Coq.MSets.MSetRBT <> Black constr
R5450:5452 Coq.MSets.MSetRBT <> Red constr
R5457:5458 Coq.MSets.MSetRBT Ops Rd syndef
R5461:5468 Coq.MSets.MSetRBT <> append_l var
R5487:5489 Coq.MSets.MSetRBT <> Red constr
R5492:5496 Coq.MSets.MSetRBT <> Black constr
R5501:5502 Coq.MSets.MSetRBT Ops Rd syndef
R5511:5516 Coq.MSets.MSetRBT <> append def
R5521:5521 Coq.MSets.MSetRBT <> r var
def 5556:5558 Ops del
R5574:5574 Coq.MSets.MSetRBT <> t var
R5584:5587 Coq.MSets.MSetRBT Ops Leaf constr
R5592:5595 Coq.MSets.MSetRBT Ops Leaf constr
R5600:5603 Coq.MSets.MSetRBT Ops Node constr
R5625:5633 Coq.MSets.MSetRBT X compare defax
R5635:5635 Coq.MSets.MSetRBT <> x var
R5649:5650 Coq.Init.Datatypes <> Eq constr
R5655:5660 Coq.MSets.MSetRBT Ops append def
R5671:5672 Coq.Init.Datatypes <> Lt constr
R5714:5718 Coq.MSets.MSetRBT Ops lbalS def
R5721:5723 Coq.MSets.MSetRBT <> del def
R5725:5725 Coq.MSets.MSetRBT <> x var
R5746:5747 Coq.MSets.MSetRBT Ops Rd syndef
R5750:5752 Coq.MSets.MSetRBT <> del def
R5754:5754 Coq.MSets.MSetRBT <> x var
R5777:5778 Coq.Init.Datatypes <> Gt constr
R5820:5824 Coq.MSets.MSetRBT Ops rbalS def
R5831:5833 Coq.MSets.MSetRBT <> del def
R5835:5835 Coq.MSets.MSetRBT <> x var
R5852:5853 Coq.MSets.MSetRBT Ops Rd syndef
R5860:5862 Coq.MSets.MSetRBT <> del def
R5864:5864 Coq.MSets.MSetRBT <> x var
def 5903:5908 Ops remove
R5917:5925 Coq.MSets.MSetRBT Ops makeBlack def
R5928:5930 Coq.MSets.MSetRBT Ops del def
R5934:5934 Coq.MSets.MSetRBT <> t var
R5932:5932 Coq.MSets.MSetRBT <> x var
def 5984:5989 Ops delmin
R6003:6005 Coq.Init.Datatypes <> ::type_scope:x_'*'_x not
R6000:6002 Coq.MSets.MSetRBT Ops elt def
R6006:6009 Coq.MSets.MSetRBT Ops tree ind
R6022:6022 Coq.MSets.MSetRBT <> l var
R6032:6035 Coq.MSets.MSetRBT Ops Leaf constr
R6040:6040 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R6042:6042 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R6044:6044 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R6041:6041 Coq.MSets.MSetRBT <> x var
R6043:6043 Coq.MSets.MSetRBT <> r var
R6049:6052 Coq.MSets.MSetRBT Ops Node constr
R6086:6091 Coq.MSets.MSetRBT <> delmin def
R6127:6131 Coq.MSets.MSetRBT <> Black constr
R6136:6136 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R6138:6139 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R6152:6152 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R6137:6137 Coq.MSets.MSetRBT <> k var
R6140:6144 Coq.MSets.MSetRBT Ops lbalS def
R6151:6151 Coq.MSets.MSetRBT <> r var
R6149:6149 Coq.MSets.MSetRBT <> x var
R6146:6147 Coq.MSets.MSetRBT <> l' var
R6159:6161 Coq.MSets.MSetRBT <> Red constr
R6166:6166 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R6168:6169 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R6179:6179 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R6167:6167 Coq.MSets.MSetRBT <> k var
R6170:6171 Coq.MSets.MSetRBT Ops Rd syndef
R6178:6178 Coq.MSets.MSetRBT <> r var
R6176:6176 Coq.MSets.MSetRBT <> x var
R6173:6174 Coq.MSets.MSetRBT <> l' var
def 6206:6215 Ops remove_min
R6221:6226 Coq.Init.Datatypes <> option ind
R6232:6234 Coq.Init.Datatypes <> ::type_scope:x_'*'_x not
R6229:6231 Coq.MSets.MSetRBT Ops elt def
R6235:6238 Coq.MSets.MSetRBT Ops tree ind
R6251:6251 Coq.MSets.MSetRBT <> t var
R6261:6264 Coq.MSets.MSetRBT Ops Leaf constr
R6269:6272 Coq.Init.Datatypes <> None constr
R6277:6280 Coq.MSets.MSetRBT Ops Node constr
R6309:6314 Coq.MSets.MSetRBT Ops delmin def
R6328:6331 Coq.Init.Datatypes <> Some constr
R6333:6333 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R6335:6336 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R6348:6348 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R6334:6334 Coq.MSets.MSetRBT <> k var
R6337:6345 Coq.MSets.MSetRBT Ops makeBlack def
R6347:6347 Coq.MSets.MSetRBT <> t var
def 6499:6503 Ops bogus
R6511:6513 Coq.Init.Datatypes <> ::type_scope:x_'*'_x not
R6507:6510 Coq.MSets.MSetRBT Ops tree ind
R6514:6517 Coq.Init.Datatypes <> list ind
R6519:6521 Coq.MSets.MSetRBT Ops elt def
R6526:6526 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R6531:6532 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R6536:6536 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R6527:6530 Coq.MSets.MSetRBT Ops Leaf constr
R6533:6535 Coq.Init.Datatypes <> nil constr
syndef 6549:6557 Ops treeify_t
R6571:6574 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R6579:6581 Coq.Init.Datatypes <> ::type_scope:x_'*'_x not
R6575:6578 Coq.MSets.MSetRBT Ops tree ind
R6582:6585 Coq.Init.Datatypes <> list ind
R6587:6589 Coq.MSets.MSetRBT Ops elt def
R6563:6566 Coq.Init.Datatypes <> list ind
R6568:6570 Coq.MSets.MSetRBT Ops elt def
def 6605:6616 Ops treeify_zero
R6620:6628 Coq.MSets.MSetRBT Ops treeify_t syndef
R6645:6645 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R6650:6650 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R6654:6654 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R6646:6649 Coq.MSets.MSetRBT Ops Leaf constr
R6651:6653 Coq.MSets.MSetRBT <> acc var
def 6669:6679 Ops treeify_one
R6683:6691 Coq.MSets.MSetRBT Ops treeify_t syndef
R6714:6716 Coq.MSets.MSetRBT <> acc var
R6727:6728 Coq.Init.Datatypes <> ::list_scope:x_'::'_x not
R6736:6736 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R6751:6752 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R6756:6756 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R6737:6738 Coq.MSets.MSetRBT Ops Rd syndef
R6747:6750 Coq.MSets.MSetRBT Ops Leaf constr
R6740:6743 Coq.MSets.MSetRBT Ops Leaf constr
R6753:6755 Coq.MSets.MSetRBT <> acc var
R6766:6770 Coq.MSets.MSetRBT Ops bogus def
def 6790:6801 Ops treeify_cont
R6810:6818 Coq.MSets.MSetRBT Ops treeify_t syndef
R6823:6831 Coq.MSets.MSetRBT Ops treeify_t syndef
R6855:6855 Coq.MSets.MSetRBT <> f var
R6857:6859 Coq.MSets.MSetRBT <> acc var
R6869:6869 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R6871:6872 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R6879:6879 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R6874:6875 Coq.Init.Datatypes <> ::list_scope:x_'::'_x not
R6893:6893 Coq.MSets.MSetRBT <> g var
R6895:6897 Coq.MSets.MSetRBT <> acc var
R6909:6909 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R6911:6912 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R6916:6916 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R6921:6921 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R6930:6931 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R6935:6935 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R6922:6923 Coq.MSets.MSetRBT Ops Bk syndef
R6932:6934 Coq.MSets.MSetRBT <> acc var
R6952:6956 Coq.MSets.MSetRBT Ops bogus def
def 6974:6984 Ops treeify_aux
R6992:6995 Coq.Init.Datatypes <> bool ind
R7001:7008 Coq.Numbers.BinNums <> positive ind
R7013:7021 Coq.MSets.MSetRBT Ops treeify_t syndef
R7033:7033 Coq.MSets.MSetRBT <> n var
R7043:7044 Coq.Numbers.BinNums <> xH constr
R7052:7055 Coq.MSets.MSetRBT <> pred var
R7080:7090 Coq.MSets.MSetRBT Ops treeify_one def
R7062:7073 Coq.MSets.MSetRBT Ops treeify_zero def
R7095:7096 Coq.Numbers.BinNums <> xO constr
R7103:7114 Coq.MSets.MSetRBT Ops treeify_cont def
R7138:7148 Coq.MSets.MSetRBT <> treeify_aux def
R7155:7155 Coq.MSets.MSetRBT <> n var
R7150:7153 Coq.Init.Datatypes <> true constr
R7117:7127 Coq.MSets.MSetRBT <> treeify_aux def
R7134:7134 Coq.MSets.MSetRBT <> n var
R7129:7132 Coq.MSets.MSetRBT <> pred var
R7161:7162 Coq.Numbers.BinNums <> xI constr
R7169:7180 Coq.MSets.MSetRBT Ops treeify_cont def
R7205:7215 Coq.MSets.MSetRBT <> treeify_aux def
R7222:7222 Coq.MSets.MSetRBT <> n var
R7217:7220 Coq.MSets.MSetRBT <> pred var
R7183:7193 Coq.MSets.MSetRBT <> treeify_aux def
R7201:7201 Coq.MSets.MSetRBT <> n var
R7195:7199 Coq.Init.Datatypes <> false constr
def 7241:7251 Ops plength_aux
R7256:7259 Coq.Init.Datatypes <> list ind
R7261:7263 Coq.MSets.MSetRBT Ops elt def
R7268:7275 Coq.Numbers.BinNums <> positive ind
R7287:7287 Coq.MSets.MSetRBT <> l var
R7297:7299 Coq.Init.Datatypes <> nil constr
R7304:7304 Coq.MSets.MSetRBT <> p var
R7310:7311 Coq.Init.Datatypes <> ::list_scope:x_'::'_x not
R7317:7327 Coq.MSets.MSetRBT <> plength_aux def
R7332:7339 Coq.PArith.BinPos Pos succ def
R7341:7341 Coq.MSets.MSetRBT <> p var
R7329:7329 Coq.MSets.MSetRBT <> l var
def 7361:7367 Ops plength
R7374:7384 Coq.MSets.MSetRBT Ops plength_aux def
R7386:7386 Coq.MSets.MSetRBT <> l var
def 7403:7409 Ops treeify
R7414:7417 Coq.Init.Datatypes <> list ind
R7419:7421 Coq.MSets.MSetRBT Ops elt def
R7428:7430 Coq.Init.Datatypes <> fst def
R7433:7443 Coq.MSets.MSetRBT Ops treeify_aux def
R7462:7462 Coq.MSets.MSetRBT <> l var
R7451:7457 Coq.MSets.MSetRBT Ops plength def
R7459:7459 Coq.MSets.MSetRBT <> l var
R7445:7448 Coq.Init.Datatypes <> true constr
def 7497:7506 Ops filter_aux
R7515:7518 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R7519:7522 Coq.Init.Datatypes <> bool ind
R7512:7514 Coq.MSets.MSetRBT Ops elt def
R7541:7541 Coq.MSets.MSetRBT <> s var
R7551:7554 Coq.MSets.MSetRBT Ops Leaf constr
R7559:7561 Coq.MSets.MSetRBT <> acc var
R7566:7569 Coq.MSets.MSetRBT Ops Node constr
R7596:7605 Coq.MSets.MSetRBT <> filter_aux def
R7611:7613 Coq.MSets.MSetRBT <> acc var
R7607:7607 Coq.MSets.MSetRBT <> f var
R7624:7624 Coq.MSets.MSetRBT <> f var
R7665:7674 Coq.MSets.MSetRBT <> filter_aux def
R7680:7682 Coq.MSets.MSetRBT <> acc var
R7676:7676 Coq.MSets.MSetRBT <> f var
R7633:7642 Coq.MSets.MSetRBT <> filter_aux def
R7650:7651 Coq.Init.Datatypes <> ::list_scope:x_'::'_x not
R7652:7654 Coq.MSets.MSetRBT <> acc var
R7644:7644 Coq.MSets.MSetRBT <> f var
def 7702:7707 Ops filter
R7716:7719 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R7720:7723 Coq.Init.Datatypes <> bool ind
R7713:7715 Coq.MSets.MSetRBT Ops elt def
R7730:7730 Coq.MSets.MSetRBT Ops t def
R7735:7735 Coq.MSets.MSetRBT Ops t def
R7741:7747 Coq.MSets.MSetRBT Ops treeify def
R7750:7759 Coq.MSets.MSetRBT Ops filter_aux def
R7765:7767 Coq.Init.Datatypes <> nil constr
R7763:7763 Coq.MSets.MSetRBT <> s var
R7761:7761 Coq.MSets.MSetRBT <> f var
def 7781:7793 Ops partition_aux
R7802:7805 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R7806:7809 Coq.Init.Datatypes <> bool ind
R7799:7801 Coq.MSets.MSetRBT Ops elt def
R7834:7834 Coq.MSets.MSetRBT <> s var
R7844:7847 Coq.MSets.MSetRBT Ops Leaf constr
R7852:7852 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R7857:7857 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R7862:7862 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R7853:7856 Coq.MSets.MSetRBT <> acc1 var
R7858:7861 Coq.MSets.MSetRBT <> acc2 var
R7867:7870 Coq.MSets.MSetRBT Ops Node constr
R7908:7920 Coq.MSets.MSetRBT <> partition_aux def
R7932:7935 Coq.MSets.MSetRBT <> acc2 var
R7927:7930 Coq.MSets.MSetRBT <> acc1 var
R7922:7922 Coq.MSets.MSetRBT <> f var
R7946:7946 Coq.MSets.MSetRBT <> f var
R7997:8009 Coq.MSets.MSetRBT <> partition_aux def
R8023:8024 Coq.Init.Datatypes <> ::list_scope:x_'::'_x not
R8025:8028 Coq.MSets.MSetRBT <> acc2 var
R8016:8019 Coq.MSets.MSetRBT <> acc1 var
R8011:8011 Coq.MSets.MSetRBT <> f var
R7955:7967 Coq.MSets.MSetRBT <> partition_aux def
R7984:7987 Coq.MSets.MSetRBT <> acc2 var
R7976:7977 Coq.Init.Datatypes <> ::list_scope:x_'::'_x not
R7978:7981 Coq.MSets.MSetRBT <> acc1 var
R7969:7969 Coq.MSets.MSetRBT <> f var
def 8049:8057 Ops partition
R8066:8069 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R8070:8073 Coq.Init.Datatypes <> bool ind
R8063:8065 Coq.MSets.MSetRBT Ops elt def
R8079:8079 Coq.MSets.MSetRBT Ops t def
R8085:8085 Coq.Init.Datatypes <> ::type_scope:x_'*'_x not
R8084:8084 Coq.MSets.MSetRBT Ops t def
R8086:8086 Coq.MSets.MSetRBT Ops t def
R8108:8120 Coq.MSets.MSetRBT Ops partition_aux def
R8130:8132 Coq.Init.Datatypes <> nil constr
R8126:8128 Coq.Init.Datatypes <> nil constr
R8124:8124 Coq.MSets.MSetRBT <> s var
R8122:8122 Coq.MSets.MSetRBT <> f var
R8139:8139 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R8150:8151 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R8162:8162 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R8140:8146 Coq.MSets.MSetRBT Ops treeify def
R8148:8149 Coq.MSets.MSetRBT <> ok var
R8152:8158 Coq.MSets.MSetRBT Ops treeify def
R8160:8161 Coq.MSets.MSetRBT <> ko var
def 8290:8299 Ops union_list
R8314:8317 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R8326:8329 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R8330:8333 Coq.Init.Datatypes <> list ind
R8335:8337 Coq.MSets.MSetRBT Ops elt def
R8318:8321 Coq.Init.Datatypes <> list ind
R8323:8325 Coq.MSets.MSetRBT Ops elt def
R8306:8309 Coq.Init.Datatypes <> list ind
R8311:8313 Coq.MSets.MSetRBT Ops elt def
R8349:8350 Coq.MSets.MSetRBT <> l1 var
R8360:8362 Coq.Init.Datatypes <> nil constr
R8368:8377 Coq.Lists.List <> rev_append def
R8385:8386 Coq.Init.Datatypes <> ::list_scope:x_'::'_x not
R8431:8432 Coq.MSets.MSetRBT <> l2 var
R8445:8447 Coq.Init.Datatypes <> nil constr
R8452:8461 Coq.Lists.List <> rev_append def
R8466:8468 Coq.MSets.MSetRBT <> acc var
R8463:8464 Coq.MSets.MSetRBT <> l1 var
R8477:8478 Coq.Init.Datatypes <> ::list_scope:x_'::'_x not
R8499:8507 Coq.MSets.MSetRBT X compare defax
R8527:8528 Coq.Init.Datatypes <> Eq constr
R8533:8542 Coq.MSets.MSetRBT <> union_list def
R8554:8555 Coq.Init.Datatypes <> ::list_scope:x_'::'_x not
R8556:8558 Coq.MSets.MSetRBT <> acc var
R8570:8571 Coq.Init.Datatypes <> Lt constr
R8576:8583 Coq.MSets.MSetRBT <> union_l1 var
R8591:8592 Coq.Init.Datatypes <> ::list_scope:x_'::'_x not
R8593:8595 Coq.MSets.MSetRBT <> acc var
R8607:8608 Coq.Init.Datatypes <> Gt constr
R8613:8622 Coq.MSets.MSetRBT <> union_list def
R8633:8634 Coq.Init.Datatypes <> ::list_scope:x_'::'_x not
R8635:8637 Coq.MSets.MSetRBT <> acc var
R8628:8629 Coq.MSets.MSetRBT <> l2 var
def 8677:8688 Ops linear_union
R8701:8707 Coq.MSets.MSetRBT Ops treeify def
R8710:8719 Coq.MSets.MSetRBT Ops union_list def
R8757:8759 Coq.Init.Datatypes <> nil constr
R8740:8751 Coq.MSets.MSetRBT Ops rev_elements def
R8753:8754 Coq.MSets.MSetRBT <> s2 var
R8722:8733 Coq.MSets.MSetRBT Ops rev_elements def
R8735:8736 Coq.MSets.MSetRBT <> s1 var
def 8773:8782 Ops inter_list
R8797:8800 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R8809:8812 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R8813:8816 Coq.Init.Datatypes <> list ind
R8818:8820 Coq.MSets.MSetRBT Ops elt def
R8801:8804 Coq.Init.Datatypes <> list ind
R8806:8808 Coq.MSets.MSetRBT Ops elt def
R8789:8792 Coq.Init.Datatypes <> list ind
R8794:8796 Coq.MSets.MSetRBT Ops elt def
R8832:8833 Coq.MSets.MSetRBT <> l1 var
R8843:8845 Coq.Init.Datatypes <> nil constr
R8863:8865 Coq.MSets.MSetRBT <> acc var
R8871:8872 Coq.Init.Datatypes <> ::list_scope:x_'::'_x not
R8917:8918 Coq.MSets.MSetRBT <> l2 var
R8931:8933 Coq.Init.Datatypes <> nil constr
R8938:8940 Coq.MSets.MSetRBT <> acc var
R8949:8950 Coq.Init.Datatypes <> ::list_scope:x_'::'_x not
R8971:8979 Coq.MSets.MSetRBT X compare defax
R8999:9000 Coq.Init.Datatypes <> Eq constr
R9005:9014 Coq.MSets.MSetRBT <> inter_list def
R9026:9027 Coq.Init.Datatypes <> ::list_scope:x_'::'_x not
R9028:9030 Coq.MSets.MSetRBT <> acc var
R9042:9043 Coq.Init.Datatypes <> Lt constr
R9048:9055 Coq.MSets.MSetRBT <> inter_l1 var
R9061:9063 Coq.MSets.MSetRBT <> acc var
R9074:9075 Coq.Init.Datatypes <> Gt constr
R9080:9089 Coq.MSets.MSetRBT <> inter_list def
R9098:9100 Coq.MSets.MSetRBT <> acc var
R9095:9096 Coq.MSets.MSetRBT <> l2 var
def 9139:9150 Ops linear_inter
R9163:9169 Coq.MSets.MSetRBT Ops treeify def
R9172:9181 Coq.MSets.MSetRBT Ops inter_list def
R9219:9221 Coq.Init.Datatypes <> nil constr
R9202:9213 Coq.MSets.MSetRBT Ops rev_elements def
R9215:9216 Coq.MSets.MSetRBT <> s2 var
R9184:9195 Coq.MSets.MSetRBT Ops rev_elements def
R9197:9198 Coq.MSets.MSetRBT <> s1 var
def 9235:9243 Ops diff_list
R9258:9261 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R9270:9273 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R9274:9277 Coq.Init.Datatypes <> list ind
R9279:9281 Coq.MSets.MSetRBT Ops elt def
R9262:9265 Coq.Init.Datatypes <> list ind
R9267:9269 Coq.MSets.MSetRBT Ops elt def
R9250:9253 Coq.Init.Datatypes <> list ind
R9255:9257 Coq.MSets.MSetRBT Ops elt def
R9293:9294 Coq.MSets.MSetRBT <> l1 var
R9304:9306 Coq.Init.Datatypes <> nil constr
R9324:9326 Coq.MSets.MSetRBT <> acc var
R9332:9333 Coq.Init.Datatypes <> ::list_scope:x_'::'_x not
R9377:9378 Coq.MSets.MSetRBT <> l2 var
R9391:9393 Coq.Init.Datatypes <> nil constr
R9398:9407 Coq.Lists.List <> rev_append def
R9412:9414 Coq.MSets.MSetRBT <> acc var
R9409:9410 Coq.MSets.MSetRBT <> l1 var
R9423:9424 Coq.Init.Datatypes <> ::list_scope:x_'::'_x not
R9445:9453 Coq.MSets.MSetRBT X compare defax
R9473:9474 Coq.Init.Datatypes <> Eq constr
R9479:9487 Coq.MSets.MSetRBT <> diff_list def
R9497:9499 Coq.MSets.MSetRBT <> acc var
R9510:9511 Coq.Init.Datatypes <> Lt constr
R9516:9522 Coq.MSets.MSetRBT <> diff_l1 var
R9528:9530 Coq.MSets.MSetRBT <> acc var
R9541:9542 Coq.Init.Datatypes <> Gt constr
R9547:9555 Coq.MSets.MSetRBT <> diff_list def
R9566:9567 Coq.Init.Datatypes <> ::list_scope:x_'::'_x not
R9568:9570 Coq.MSets.MSetRBT <> acc var
R9561:9562 Coq.MSets.MSetRBT <> l2 var
def 9610:9620 Ops linear_diff
R9633:9639 Coq.MSets.MSetRBT Ops treeify def
R9642:9650 Coq.MSets.MSetRBT Ops diff_list def
R9688:9690 Coq.Init.Datatypes <> nil constr
R9671:9682 Coq.MSets.MSetRBT Ops rev_elements def
R9684:9685 Coq.MSets.MSetRBT <> s2 var
R9653:9664 Coq.MSets.MSetRBT Ops rev_elements def
R9666:9667 Coq.MSets.MSetRBT <> s1 var
def 9961:9968 Ops skip_red
R9982:9982 Coq.MSets.MSetRBT <> t var
R10016:10016 Coq.MSets.MSetRBT <> t var
def 10036:10045 Ops skip_black
R10059:10066 Coq.MSets.MSetRBT Ops skip_red def
R10068:10068 Coq.MSets.MSetRBT <> t var
def 10122:10135 Ops compare_height
R10153:10156 Coq.MSets.MSetRBT Ops tree ind
R10161:10170 Coq.Init.Datatypes <> comparison ind
R10222:10229 Coq.MSets.MSetRBT Ops skip_red def
R10231:10233 Coq.MSets.MSetRBT <> s2x var
R10209:10216 Coq.MSets.MSetRBT Ops skip_red def
R10218:10219 Coq.MSets.MSetRBT <> s2 var
R10196:10203 Coq.MSets.MSetRBT Ops skip_red def
R10205:10206 Coq.MSets.MSetRBT <> s1 var
R10182:10189 Coq.MSets.MSetRBT Ops skip_red def
R10191:10193 Coq.MSets.MSetRBT <> s1x var
R10243:10246 Coq.MSets.MSetRBT Ops Node constr
R10260:10263 Coq.MSets.MSetRBT Ops Node constr
R10276:10279 Coq.MSets.MSetRBT Ops Node constr
R10292:10295 Coq.MSets.MSetRBT Ops Node constr
R10314:10327 Coq.MSets.MSetRBT <> compare_height def
R10356:10365 Coq.MSets.MSetRBT Ops skip_black def
R10330:10339 Coq.MSets.MSetRBT Ops skip_black def
R10379:10382 Coq.MSets.MSetRBT Ops Leaf constr
R10388:10391 Coq.MSets.MSetRBT Ops Node constr
R10404:10405 Coq.Init.Datatypes <> Lt constr
R10410:10413 Coq.MSets.MSetRBT Ops Node constr
R10427:10430 Coq.MSets.MSetRBT Ops Leaf constr
R10438:10439 Coq.Init.Datatypes <> Gt constr
R10444:10447 Coq.MSets.MSetRBT Ops Node constr
R10461:10464 Coq.MSets.MSetRBT Ops Node constr
R10477:10480 Coq.MSets.MSetRBT Ops Node constr
R10493:10496 Coq.MSets.MSetRBT Ops Leaf constr
R10504:10517 Coq.MSets.MSetRBT <> compare_height def
R10545:10548 Coq.MSets.MSetRBT Ops Leaf constr
R10520:10529 Coq.MSets.MSetRBT Ops skip_black def
R10553:10556 Coq.MSets.MSetRBT Ops Leaf constr
R10559:10562 Coq.MSets.MSetRBT Ops Node constr
R10575:10578 Coq.MSets.MSetRBT Ops Node constr
R10591:10594 Coq.MSets.MSetRBT Ops Node constr
R10613:10626 Coq.MSets.MSetRBT <> compare_height def
R10644:10653 Coq.MSets.MSetRBT Ops skip_black def
R10628:10631 Coq.MSets.MSetRBT Ops Leaf constr
R10678:10679 Coq.Init.Datatypes <> Eq constr
def 10884:10888 Ops union
R10898:10898 Coq.MSets.MSetRBT Ops t def
R10903:10903 Coq.MSets.MSetRBT Ops t def
R10915:10928 Coq.MSets.MSetRBT Ops compare_height def
R10939:10940 Coq.MSets.MSetRBT <> t2 var
R10936:10937 Coq.MSets.MSetRBT <> t2 var
R10933:10934 Coq.MSets.MSetRBT <> t1 var
R10930:10931 Coq.MSets.MSetRBT <> t1 var
R10950:10951 Coq.Init.Datatypes <> Lt constr
R10956:10959 Coq.MSets.MSetRBT Ops fold def
R10968:10969 Coq.MSets.MSetRBT <> t2 var
R10965:10966 Coq.MSets.MSetRBT <> t1 var
R10961:10963 Coq.MSets.MSetRBT Ops add def
R10974:10975 Coq.Init.Datatypes <> Gt constr
R10980:10983 Coq.MSets.MSetRBT Ops fold def
R10992:10993 Coq.MSets.MSetRBT <> t1 var
R10989:10990 Coq.MSets.MSetRBT <> t2 var
R10985:10987 Coq.MSets.MSetRBT Ops add def
R10998:10999 Coq.Init.Datatypes <> Eq constr
R11004:11015 Coq.MSets.MSetRBT Ops linear_union def
R11020:11021 Coq.MSets.MSetRBT <> t2 var
R11017:11018 Coq.MSets.MSetRBT <> t1 var
def 11041:11044 Ops diff
R11054:11054 Coq.MSets.MSetRBT Ops t def
R11059:11059 Coq.MSets.MSetRBT Ops t def
R11071:11084 Coq.MSets.MSetRBT Ops compare_height def
R11095:11096 Coq.MSets.MSetRBT <> t2 var
R11092:11093 Coq.MSets.MSetRBT <> t2 var
R11089:11090 Coq.MSets.MSetRBT <> t1 var
R11086:11087 Coq.MSets.MSetRBT <> t1 var
R11106:11107 Coq.Init.Datatypes <> Lt constr
R11112:11117 Coq.MSets.MSetRBT Ops filter def
R11146:11147 Coq.MSets.MSetRBT <> t1 var
R11129:11132 Coq.Init.Datatypes <> negb def
R11135:11137 Coq.MSets.MSetRBT Ops mem def
R11141:11142 Coq.MSets.MSetRBT <> t2 var
R11139:11139 Coq.MSets.MSetRBT <> k var
R11152:11153 Coq.Init.Datatypes <> Gt constr
R11158:11161 Coq.MSets.MSetRBT Ops fold def
R11173:11174 Coq.MSets.MSetRBT <> t1 var
R11170:11171 Coq.MSets.MSetRBT <> t2 var
R11163:11168 Coq.MSets.MSetRBT Ops remove def
R11179:11180 Coq.Init.Datatypes <> Eq constr
R11185:11195 Coq.MSets.MSetRBT Ops linear_diff def
R11200:11201 Coq.MSets.MSetRBT <> t2 var
R11197:11198 Coq.MSets.MSetRBT <> t1 var
def 11221:11225 Ops inter
R11235:11235 Coq.MSets.MSetRBT Ops t def
R11240:11240 Coq.MSets.MSetRBT Ops t def
R11252:11265 Coq.MSets.MSetRBT Ops compare_height def
R11276:11277 Coq.MSets.MSetRBT <> t2 var
R11273:11274 Coq.MSets.MSetRBT <> t2 var
R11270:11271 Coq.MSets.MSetRBT <> t1 var
R11267:11268 Coq.MSets.MSetRBT <> t1 var
R11287:11288 Coq.Init.Datatypes <> Lt constr
R11293:11298 Coq.MSets.MSetRBT Ops filter def
R11320:11321 Coq.MSets.MSetRBT <> t1 var
R11310:11312 Coq.MSets.MSetRBT Ops mem def
R11316:11317 Coq.MSets.MSetRBT <> t2 var
R11314:11314 Coq.MSets.MSetRBT <> k var
R11326:11327 Coq.Init.Datatypes <> Gt constr
R11332:11337 Coq.MSets.MSetRBT Ops filter def
R11359:11360 Coq.MSets.MSetRBT <> t2 var
R11349:11351 Coq.MSets.MSetRBT Ops mem def
R11355:11356 Coq.MSets.MSetRBT <> t1 var
R11353:11353 Coq.MSets.MSetRBT <> k var
R11365:11366 Coq.Init.Datatypes <> Eq constr
R11371:11382 Coq.MSets.MSetRBT Ops linear_inter def
R11387:11388 Coq.MSets.MSetRBT <> t2 var
R11384:11385 Coq.MSets.MSetRBT <> t1 var
R11401:11403 Coq.MSets.MSetRBT Ops <> mod
R11494:11511 Coq.Structures.Orders OrderedType <> mod
R11517:11537 Coq.MSets.MSetInterface RawSets <> mod
R11539:11539 Coq.MSets.MSetRBT X <> modtype
modtype 11483:11489 <> MakeRaw
R11550:11552 Coq.MSets.MSetRBT Ops <> modtype
R11554:11554 Coq.MSets.MSetRBT X <> modtype
R11692:11708 Coq.MSets.MSetGenTree Props <> mod
R11710:11710 Coq.MSets.MSetRBT X <> modtype
R11712:11716 Coq.MSets.MSetRBT Color <> modtype
syndef 11735:11736 MakeRaw Rd
R11742:11745 Coq.MSets.MSetRBT MakeRaw Node constr
R11747:11749 Coq.MSets.MSetRBT <> Red constr
syndef 11768:11769 MakeRaw Bk
R11775:11778 Coq.MSets.MSetRBT MakeRaw Node constr
R11780:11784 Coq.MSets.MSetRBT <> Black constr
R11839:11840 Coq.MSets.MSetRBT MakeRaw In def
R11842:11848 Coq.MSets.MSetRBT MakeRaw lt_tree def
R11850:11856 Coq.MSets.MSetRBT MakeRaw gt_tree def
R11858:11859 Coq.MSets.MSetRBT MakeRaw Ok class
R11886:11888 Coq.MSets.MSetRBT <> InT ind
R11890:11892 Coq.MSets.MSetRBT <> bst ind
prf 12160:12173 MakeRaw singleton_spec
R12200:12204 Coq.Init.Logic <> ::type_scope:x_'<->'_x not
R12181:12183 Coq.MSets.MSetRBT MakeRaw InT ind
R12188:12196 Coq.MSets.MSetRBT MakeRaw singleton def
R12198:12198 Coq.MSets.MSetRBT <> x var
R12185:12185 Coq.MSets.MSetRBT <> y var
R12205:12208 Coq.MSets.MSetRBT X eq defax
R12212:12212 Coq.MSets.MSetRBT <> x var
R12210:12210 Coq.MSets.MSetRBT <> y var
R12230:12238 Coq.MSets.MSetRBT MakeRaw singleton def
inst 12270:12281 MakeRaw singleton_ok
R12287:12288 Coq.MSets.MSetRBT MakeRaw Ok class
R12291:12299 Coq.MSets.MSetRBT MakeRaw singleton def
R12301:12301 Coq.MSets.MSetRBT <> x var
R12320:12328 Coq.MSets.MSetRBT MakeRaw singleton def
prf 12379:12392 MakeRaw makeBlack_spec
R12419:12423 Coq.Init.Logic <> ::type_scope:x_'<->'_x not
R12400:12402 Coq.MSets.MSetRBT MakeRaw InT ind
R12407:12415 Coq.MSets.MSetRBT MakeRaw makeBlack def
R12417:12417 Coq.MSets.MSetRBT <> s var
R12404:12404 Coq.MSets.MSetRBT <> x var
R12424:12426 Coq.MSets.MSetRBT MakeRaw InT ind
R12430:12430 Coq.MSets.MSetRBT <> s var
R12428:12428 Coq.MSets.MSetRBT <> x var
prf 12486:12497 MakeRaw makeRed_spec
R12522:12526 Coq.Init.Logic <> ::type_scope:x_'<->'_x not
R12505:12507 Coq.MSets.MSetRBT MakeRaw InT ind
R12512:12518 Coq.MSets.MSetRBT MakeRaw makeRed def
R12520:12520 Coq.MSets.MSetRBT <> s var
R12509:12509 Coq.MSets.MSetRBT <> x var
R12527:12529 Coq.MSets.MSetRBT MakeRaw InT ind
R12533:12533 Coq.MSets.MSetRBT <> s var
R12531:12531 Coq.MSets.MSetRBT <> x var
inst 12592:12603 MakeRaw makeBlack_ok
R12609:12610 Coq.MSets.MSetRBT MakeRaw Ok class
R12612:12612 Coq.MSets.MSetRBT <> s var
R12617:12618 Coq.MSets.MSetRBT MakeRaw Ok class
R12621:12629 Coq.MSets.MSetRBT MakeRaw makeBlack def
R12631:12631 Coq.MSets.MSetRBT <> s var
inst 12681:12690 MakeRaw makeRed_ok
R12696:12697 Coq.MSets.MSetRBT MakeRaw Ok class
R12699:12699 Coq.MSets.MSetRBT <> s var
R12704:12705 Coq.MSets.MSetRBT MakeRaw Ok class
R12708:12714 Coq.MSets.MSetRBT MakeRaw makeRed def
R12716:12716 Coq.MSets.MSetRBT <> s var
def 12834:12840 MakeRaw isblack
R12854:12854 Coq.MSets.MSetRBT <> t var
R12873:12876 Coq.Init.Logic <> True ind
R12885:12889 Coq.Init.Logic <> False ind
def 12908:12915 MakeRaw notblack
R12929:12929 Coq.MSets.MSetRBT <> t var
R12948:12952 Coq.Init.Logic <> False ind
R12961:12964 Coq.Init.Logic <> True ind
def 12983:12988 MakeRaw notred
R13002:13002 Coq.MSets.MSetRBT <> t var
R13021:13025 Coq.Init.Logic <> False ind
R13034:13037 Coq.Init.Logic <> True ind
def 13056:13060 MakeRaw rcase
R13074:13074 Coq.MSets.MSetRBT <> A var
R13086:13086 Coq.MSets.MSetRBT <> t var
R13108:13108 Coq.MSets.MSetRBT <> f var
R13124:13124 Coq.MSets.MSetRBT <> g var
R13126:13126 Coq.MSets.MSetRBT <> t var
ind 13145:13149 MakeRaw rspec
constr 13185:13188 MakeRaw rred
constr 13232:13236 MakeRaw relse
R13165:13168 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R13170:13173 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R13161:13164 Coq.MSets.MSetRBT MakeRaw tree ind
R13198:13202 Coq.MSets.MSetRBT <> rspec ind
R13220:13220 Coq.MSets.MSetRBT <> f var
R13226:13226 Coq.MSets.MSetRBT <> b var
R13224:13224 Coq.MSets.MSetRBT <> x var
R13222:13222 Coq.MSets.MSetRBT <> a var
R13209:13210 Coq.MSets.MSetRBT MakeRaw Rd syndef
R13216:13216 Coq.MSets.MSetRBT <> b var
R13214:13214 Coq.MSets.MSetRBT <> x var
R13212:13212 Coq.MSets.MSetRBT <> a var
R13206:13206 Coq.MSets.MSetRBT <> g var
R13204:13204 Coq.MSets.MSetRBT <> f var
R13198:13202 Coq.MSets.MSetRBT <> A var
R13250:13253 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R13254:13258 Coq.MSets.MSetRBT <> rspec ind
R13267:13267 Coq.MSets.MSetRBT <> g var
R13269:13269 Coq.MSets.MSetRBT <> t var
R13264:13264 Coq.MSets.MSetRBT <> t var
R13262:13262 Coq.MSets.MSetRBT <> g var
R13260:13260 Coq.MSets.MSetRBT <> f var
R13254:13258 Coq.MSets.MSetRBT <> A var
R13242:13247 Coq.MSets.MSetRBT MakeRaw notred def
R13249:13249 Coq.MSets.MSetRBT <> t var
prf 13279:13284 MakeRaw rmatch
R13298:13302 Coq.MSets.MSetRBT MakeRaw rspec ind
R13318:13322 Coq.MSets.MSetRBT MakeRaw rcase def
R13328:13328 Coq.MSets.MSetRBT <> t var
R13326:13326 Coq.MSets.MSetRBT <> g var
R13324:13324 Coq.MSets.MSetRBT <> f var
R13315:13315 Coq.MSets.MSetRBT <> t var
R13313:13313 Coq.MSets.MSetRBT <> g var
R13311:13311 Coq.MSets.MSetRBT <> f var
R13308:13308 Coq.MSets.MSetRBT <> A var
def 13408:13413 MakeRaw rrcase
R13427:13427 Coq.MSets.MSetRBT <> A var
R13439:13439 Coq.MSets.MSetRBT <> t var
R13470:13470 Coq.MSets.MSetRBT <> f var
R13506:13506 Coq.MSets.MSetRBT <> f var
R13526:13526 Coq.MSets.MSetRBT <> g var
R13528:13528 Coq.MSets.MSetRBT <> t var
syndef 13546:13554 MakeRaw notredred
R13560:13565 Coq.MSets.MSetRBT MakeRaw rrcase def
R13602:13605 Coq.Init.Logic <> True ind
R13585:13589 Coq.Init.Logic <> False ind
ind 13621:13626 MakeRaw rrspec
constr 13662:13667 MakeRaw rrleft
constr 13729:13735 MakeRaw rrright
constr 13797:13802 MakeRaw rrelse
R13642:13645 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R13647:13650 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R13638:13641 Coq.MSets.MSetRBT MakeRaw tree ind
R13681:13686 Coq.MSets.MSetRBT <> rrspec ind
R13713:13713 Coq.MSets.MSetRBT <> f var
R13723:13723 Coq.MSets.MSetRBT <> c var
R13721:13721 Coq.MSets.MSetRBT <> y var
R13719:13719 Coq.MSets.MSetRBT <> b var
R13717:13717 Coq.MSets.MSetRBT <> x var
R13715:13715 Coq.MSets.MSetRBT <> a var
R13693:13694 Coq.MSets.MSetRBT MakeRaw Rd syndef
R13709:13709 Coq.MSets.MSetRBT <> c var
R13707:13707 Coq.MSets.MSetRBT <> y var
R13697:13698 Coq.MSets.MSetRBT MakeRaw Rd syndef
R13704:13704 Coq.MSets.MSetRBT <> b var
R13702:13702 Coq.MSets.MSetRBT <> x var
R13700:13700 Coq.MSets.MSetRBT <> a var
R13690:13690 Coq.MSets.MSetRBT <> g var
R13688:13688 Coq.MSets.MSetRBT <> f var
R13681:13686 Coq.MSets.MSetRBT <> A var
R13749:13754 Coq.MSets.MSetRBT <> rrspec ind
R13781:13781 Coq.MSets.MSetRBT <> f var
R13791:13791 Coq.MSets.MSetRBT <> c var
R13789:13789 Coq.MSets.MSetRBT <> y var
R13787:13787 Coq.MSets.MSetRBT <> b var
R13785:13785 Coq.MSets.MSetRBT <> x var
R13783:13783 Coq.MSets.MSetRBT <> a var
R13761:13762 Coq.MSets.MSetRBT MakeRaw Rd syndef
R13769:13770 Coq.MSets.MSetRBT MakeRaw Rd syndef
R13776:13776 Coq.MSets.MSetRBT <> c var
R13774:13774 Coq.MSets.MSetRBT <> y var
R13772:13772 Coq.MSets.MSetRBT <> b var
R13766:13766 Coq.MSets.MSetRBT <> x var
R13764:13764 Coq.MSets.MSetRBT <> a var
R13758:13758 Coq.MSets.MSetRBT <> g var
R13756:13756 Coq.MSets.MSetRBT <> f var
R13749:13754 Coq.MSets.MSetRBT <> A var
R13819:13822 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R13823:13828 Coq.MSets.MSetRBT <> rrspec ind
R13837:13837 Coq.MSets.MSetRBT <> g var
R13839:13839 Coq.MSets.MSetRBT <> t var
R13834:13834 Coq.MSets.MSetRBT <> t var
R13832:13832 Coq.MSets.MSetRBT <> g var
R13830:13830 Coq.MSets.MSetRBT <> f var
R13823:13828 Coq.MSets.MSetRBT <> A var
R13808:13816 Coq.MSets.MSetRBT MakeRaw notredred syndef
R13818:13818 Coq.MSets.MSetRBT <> t var
prf 13849:13855 MakeRaw rrmatch
R13869:13874 Coq.MSets.MSetRBT MakeRaw rrspec ind
R13890:13895 Coq.MSets.MSetRBT MakeRaw rrcase def
R13901:13901 Coq.MSets.MSetRBT <> t var
R13899:13899 Coq.MSets.MSetRBT <> g var
R13897:13897 Coq.MSets.MSetRBT <> f var
R13887:13887 Coq.MSets.MSetRBT <> t var
R13885:13885 Coq.MSets.MSetRBT <> g var
R13883:13883 Coq.MSets.MSetRBT <> f var
R13880:13880 Coq.MSets.MSetRBT <> A var
def 14055:14061 MakeRaw rrcase'
R14075:14075 Coq.MSets.MSetRBT <> A var
R14087:14087 Coq.MSets.MSetRBT <> t var
R14118:14118 Coq.MSets.MSetRBT <> f var
R14154:14154 Coq.MSets.MSetRBT <> f var
R14174:14174 Coq.MSets.MSetRBT <> g var
R14176:14176 Coq.MSets.MSetRBT <> t var
prf 14190:14197 MakeRaw rrmatch'
R14211:14216 Coq.MSets.MSetRBT MakeRaw rrspec ind
R14232:14238 Coq.MSets.MSetRBT MakeRaw rrcase' def
R14244:14244 Coq.MSets.MSetRBT <> t var
R14242:14242 Coq.MSets.MSetRBT <> g var
R14240:14240 Coq.MSets.MSetRBT <> f var
R14229:14229 Coq.MSets.MSetRBT <> t var
R14227:14227 Coq.MSets.MSetRBT <> g var
R14225:14225 Coq.MSets.MSetRBT <> f var
R14222:14222 Coq.MSets.MSetRBT <> A var
prf 14452:14461 MakeRaw lbal_match
R14472:14477 Coq.MSets.MSetRBT MakeRaw rrspec ind
R14560:14563 Coq.MSets.MSetRBT MakeRaw lbal def
R14569:14569 Coq.MSets.MSetRBT <> r var
R14567:14567 Coq.MSets.MSetRBT <> k var
R14565:14565 Coq.MSets.MSetRBT <> l var
R14554:14554 Coq.MSets.MSetRBT <> l var
R14541:14542 Coq.MSets.MSetRBT MakeRaw Bk syndef
R14548:14548 Coq.MSets.MSetRBT <> r var
R14546:14546 Coq.MSets.MSetRBT <> k var
R14544:14544 Coq.MSets.MSetRBT <> l var
R14500:14501 Coq.MSets.MSetRBT MakeRaw Rd syndef
R14517:14518 Coq.MSets.MSetRBT MakeRaw Bk syndef
R14524:14524 Coq.MSets.MSetRBT <> r var
R14522:14522 Coq.MSets.MSetRBT <> k var
R14520:14520 Coq.MSets.MSetRBT <> c var
R14514:14514 Coq.MSets.MSetRBT <> y var
R14504:14505 Coq.MSets.MSetRBT MakeRaw Bk syndef
R14511:14511 Coq.MSets.MSetRBT <> b var
R14509:14509 Coq.MSets.MSetRBT <> x var
R14507:14507 Coq.MSets.MSetRBT <> a var
R14588:14594 Coq.MSets.MSetRBT MakeRaw rrmatch thm
R14588:14594 Coq.MSets.MSetRBT MakeRaw rrmatch thm
prf 14615:14624 MakeRaw rbal_match
R14635:14640 Coq.MSets.MSetRBT MakeRaw rrspec ind
R14723:14726 Coq.MSets.MSetRBT MakeRaw rbal def
R14732:14732 Coq.MSets.MSetRBT <> r var
R14730:14730 Coq.MSets.MSetRBT <> k var
R14728:14728 Coq.MSets.MSetRBT <> l var
R14717:14717 Coq.MSets.MSetRBT <> r var
R14704:14705 Coq.MSets.MSetRBT MakeRaw Bk syndef
R14711:14711 Coq.MSets.MSetRBT <> r var
R14709:14709 Coq.MSets.MSetRBT <> k var
R14707:14707 Coq.MSets.MSetRBT <> l var
R14663:14664 Coq.MSets.MSetRBT MakeRaw Rd syndef
R14680:14681 Coq.MSets.MSetRBT MakeRaw Bk syndef
R14687:14687 Coq.MSets.MSetRBT <> c var
R14685:14685 Coq.MSets.MSetRBT <> y var
R14683:14683 Coq.MSets.MSetRBT <> b var
R14677:14677 Coq.MSets.MSetRBT <> x var
R14667:14668 Coq.MSets.MSetRBT MakeRaw Bk syndef
R14674:14674 Coq.MSets.MSetRBT <> a var
R14672:14672 Coq.MSets.MSetRBT <> k var
R14670:14670 Coq.MSets.MSetRBT <> l var
R14751:14757 Coq.MSets.MSetRBT MakeRaw rrmatch thm
R14751:14757 Coq.MSets.MSetRBT MakeRaw rrmatch thm
prf 14778:14788 MakeRaw rbal'_match
R14799:14804 Coq.MSets.MSetRBT MakeRaw rrspec ind
R14887:14891 Coq.MSets.MSetRBT MakeRaw rbal' def
R14897:14897 Coq.MSets.MSetRBT <> r var
R14895:14895 Coq.MSets.MSetRBT <> k var
R14893:14893 Coq.MSets.MSetRBT <> l var
R14881:14881 Coq.MSets.MSetRBT <> r var
R14868:14869 Coq.MSets.MSetRBT MakeRaw Bk syndef
R14875:14875 Coq.MSets.MSetRBT <> r var
R14873:14873 Coq.MSets.MSetRBT <> k var
R14871:14871 Coq.MSets.MSetRBT <> l var
R14827:14828 Coq.MSets.MSetRBT MakeRaw Rd syndef
R14844:14845 Coq.MSets.MSetRBT MakeRaw Bk syndef
R14851:14851 Coq.MSets.MSetRBT <> c var
R14849:14849 Coq.MSets.MSetRBT <> y var
R14847:14847 Coq.MSets.MSetRBT <> b var
R14841:14841 Coq.MSets.MSetRBT <> x var
R14831:14832 Coq.MSets.MSetRBT MakeRaw Bk syndef
R14838:14838 Coq.MSets.MSetRBT <> a var
R14836:14836 Coq.MSets.MSetRBT <> k var
R14834:14834 Coq.MSets.MSetRBT <> l var
R14916:14923 Coq.MSets.MSetRBT MakeRaw rrmatch' thm
R14916:14923 Coq.MSets.MSetRBT MakeRaw rrmatch' thm
prf 14944:14954 MakeRaw lbalS_match
R14965:14969 Coq.MSets.MSetRBT MakeRaw rspec ind
R15177:15181 Coq.MSets.MSetRBT MakeRaw lbalS def
R15187:15187 Coq.MSets.MSetRBT <> r var
R15185:15185 Coq.MSets.MSetRBT <> x var
R15183:15183 Coq.MSets.MSetRBT <> l var
R15172:15172 Coq.MSets.MSetRBT <> l var
R15028:15028 Coq.MSets.MSetRBT <> r var
R15053:15057 Coq.MSets.MSetRBT MakeRaw rbal' def
R15064:15065 Coq.MSets.MSetRBT MakeRaw Rd syndef
R15061:15061 Coq.MSets.MSetRBT <> x var
R15059:15059 Coq.MSets.MSetRBT <> l var
R15101:15102 Coq.MSets.MSetRBT MakeRaw Rd syndef
R15118:15122 Coq.MSets.MSetRBT MakeRaw rbal' def
R15129:15135 Coq.MSets.MSetRBT MakeRaw makeRed def
R15105:15106 Coq.MSets.MSetRBT MakeRaw Bk syndef
R15110:15110 Coq.MSets.MSetRBT <> x var
R15108:15108 Coq.MSets.MSetRBT <> l var
R15152:15153 Coq.MSets.MSetRBT MakeRaw Rd syndef
R15159:15159 Coq.MSets.MSetRBT <> r var
R15157:15157 Coq.MSets.MSetRBT <> x var
R15155:15155 Coq.MSets.MSetRBT <> l var
R14987:14988 Coq.MSets.MSetRBT MakeRaw Rd syndef
R15003:15003 Coq.MSets.MSetRBT <> r var
R15001:15001 Coq.MSets.MSetRBT <> x var
R14991:14992 Coq.MSets.MSetRBT MakeRaw Bk syndef
R14998:14998 Coq.MSets.MSetRBT <> b var
R14996:14996 Coq.MSets.MSetRBT <> y var
R14994:14994 Coq.MSets.MSetRBT <> a var
R15206:15211 Coq.MSets.MSetRBT MakeRaw rmatch thm
R15206:15211 Coq.MSets.MSetRBT MakeRaw rmatch thm
prf 15232:15242 MakeRaw rbalS_match
R15253:15257 Coq.MSets.MSetRBT MakeRaw rspec ind
R15463:15467 Coq.MSets.MSetRBT MakeRaw rbalS def
R15473:15473 Coq.MSets.MSetRBT <> r var
R15471:15471 Coq.MSets.MSetRBT <> x var
R15469:15469 Coq.MSets.MSetRBT <> l var
R15458:15458 Coq.MSets.MSetRBT <> r var
R15316:15316 Coq.MSets.MSetRBT <> l var
R15341:15344 Coq.MSets.MSetRBT MakeRaw lbal def
R15359:15359 Coq.MSets.MSetRBT <> r var
R15357:15357 Coq.MSets.MSetRBT <> x var
R15347:15348 Coq.MSets.MSetRBT MakeRaw Rd syndef
R15388:15389 Coq.MSets.MSetRBT MakeRaw Rd syndef
R15417:15418 Coq.MSets.MSetRBT MakeRaw Bk syndef
R15424:15424 Coq.MSets.MSetRBT <> r var
R15422:15422 Coq.MSets.MSetRBT <> x var
R15392:15395 Coq.MSets.MSetRBT MakeRaw lbal def
R15398:15404 Coq.MSets.MSetRBT MakeRaw makeRed def
R15438:15439 Coq.MSets.MSetRBT MakeRaw Rd syndef
R15445:15445 Coq.MSets.MSetRBT <> r var
R15443:15443 Coq.MSets.MSetRBT <> x var
R15441:15441 Coq.MSets.MSetRBT <> l var
R15275:15276 Coq.MSets.MSetRBT MakeRaw Rd syndef
R15283:15284 Coq.MSets.MSetRBT MakeRaw Bk syndef
R15290:15290 Coq.MSets.MSetRBT <> b var
R15288:15288 Coq.MSets.MSetRBT <> y var
R15286:15286 Coq.MSets.MSetRBT <> a var
R15280:15280 Coq.MSets.MSetRBT <> x var
R15278:15278 Coq.MSets.MSetRBT <> l var
R15492:15497 Coq.MSets.MSetRBT MakeRaw rmatch thm
R15492:15497 Coq.MSets.MSetRBT MakeRaw rmatch thm
prf 15554:15562 MakeRaw lbal_spec
R15595:15599 Coq.Init.Logic <> ::type_scope:x_'<->'_x not
R15577:15579 Coq.MSets.MSetRBT MakeRaw InT ind
R15584:15587 Coq.MSets.MSetRBT MakeRaw lbal def
R15593:15593 Coq.MSets.MSetRBT <> r var
R15591:15591 Coq.MSets.MSetRBT <> x var
R15589:15589 Coq.MSets.MSetRBT <> l var
R15581:15581 Coq.MSets.MSetRBT <> y var
R15608:15611 Coq.Init.Logic <> ::type_scope:x_'\/'_x not
R15600:15603 Coq.MSets.MSetRBT X eq defax
R15607:15607 Coq.MSets.MSetRBT <> x var
R15605:15605 Coq.MSets.MSetRBT <> y var
R15619:15622 Coq.Init.Logic <> ::type_scope:x_'\/'_x not
R15612:15614 Coq.MSets.MSetRBT MakeRaw InT ind
R15618:15618 Coq.MSets.MSetRBT <> l var
R15616:15616 Coq.MSets.MSetRBT <> y var
R15623:15625 Coq.MSets.MSetRBT MakeRaw InT ind
R15629:15629 Coq.MSets.MSetRBT <> r var
R15627:15627 Coq.MSets.MSetRBT <> y var
R15645:15654 Coq.MSets.MSetRBT MakeRaw lbal_match thm
R15645:15654 Coq.MSets.MSetRBT MakeRaw lbal_match thm
inst 15686:15692 MakeRaw lbal_ok
R15702:15703 Coq.MSets.MSetRBT MakeRaw Ok class
R15705:15705 Coq.MSets.MSetRBT <> l var
R15708:15709 Coq.MSets.MSetRBT MakeRaw Ok class
R15711:15711 Coq.MSets.MSetRBT <> r var
R15714:15720 Coq.MSets.MSetRBT MakeRaw lt_tree def
R15724:15724 Coq.MSets.MSetRBT <> l var
R15722:15722 Coq.MSets.MSetRBT <> x var
R15727:15733 Coq.MSets.MSetRBT MakeRaw gt_tree def
R15737:15737 Coq.MSets.MSetRBT <> r var
R15735:15735 Coq.MSets.MSetRBT <> x var
R15743:15744 Coq.MSets.MSetRBT MakeRaw Ok class
R15747:15750 Coq.MSets.MSetRBT MakeRaw lbal def
R15756:15756 Coq.MSets.MSetRBT <> r var
R15754:15754 Coq.MSets.MSetRBT <> x var
R15752:15752 Coq.MSets.MSetRBT <> l var
R15778:15787 Coq.MSets.MSetRBT MakeRaw lbal_match thm
R15778:15787 Coq.MSets.MSetRBT MakeRaw lbal_match thm
prf 15813:15821 MakeRaw rbal_spec
R15854:15858 Coq.Init.Logic <> ::type_scope:x_'<->'_x not
R15836:15838 Coq.MSets.MSetRBT MakeRaw InT ind
R15843:15846 Coq.MSets.MSetRBT MakeRaw rbal def
R15852:15852 Coq.MSets.MSetRBT <> r var
R15850:15850 Coq.MSets.MSetRBT <> x var
R15848:15848 Coq.MSets.MSetRBT <> l var
R15840:15840 Coq.MSets.MSetRBT <> y var
R15867:15870 Coq.Init.Logic <> ::type_scope:x_'\/'_x not
R15859:15862 Coq.MSets.MSetRBT X eq defax
R15866:15866 Coq.MSets.MSetRBT <> x var
R15864:15864 Coq.MSets.MSetRBT <> y var
R15878:15881 Coq.Init.Logic <> ::type_scope:x_'\/'_x not
R15871:15873 Coq.MSets.MSetRBT MakeRaw InT ind
R15877:15877 Coq.MSets.MSetRBT <> l var
R15875:15875 Coq.MSets.MSetRBT <> y var
R15882:15884 Coq.MSets.MSetRBT MakeRaw InT ind
R15888:15888 Coq.MSets.MSetRBT <> r var
R15886:15886 Coq.MSets.MSetRBT <> y var
R15904:15913 Coq.MSets.MSetRBT MakeRaw rbal_match thm
R15904:15913 Coq.MSets.MSetRBT MakeRaw rbal_match thm
inst 15945:15951 MakeRaw rbal_ok
R15961:15962 Coq.MSets.MSetRBT MakeRaw Ok class
R15964:15964 Coq.MSets.MSetRBT <> l var
R15967:15968 Coq.MSets.MSetRBT MakeRaw Ok class
R15970:15970 Coq.MSets.MSetRBT <> r var
R15973:15979 Coq.MSets.MSetRBT MakeRaw lt_tree def
R15983:15983 Coq.MSets.MSetRBT <> l var
R15981:15981 Coq.MSets.MSetRBT <> x var
R15986:15992 Coq.MSets.MSetRBT MakeRaw gt_tree def
R15996:15996 Coq.MSets.MSetRBT <> r var
R15994:15994 Coq.MSets.MSetRBT <> x var
R16002:16003 Coq.MSets.MSetRBT MakeRaw Ok class
R16006:16009 Coq.MSets.MSetRBT MakeRaw rbal def
R16015:16015 Coq.MSets.MSetRBT <> r var
R16013:16013 Coq.MSets.MSetRBT <> x var
R16011:16011 Coq.MSets.MSetRBT <> l var
R16037:16046 Coq.MSets.MSetRBT MakeRaw rbal_match thm
R16037:16046 Coq.MSets.MSetRBT MakeRaw rbal_match thm
prf 16072:16081 MakeRaw rbal'_spec
R16115:16119 Coq.Init.Logic <> ::type_scope:x_'<->'_x not
R16096:16098 Coq.MSets.MSetRBT MakeRaw InT ind
R16103:16107 Coq.MSets.MSetRBT MakeRaw rbal' def
R16113:16113 Coq.MSets.MSetRBT <> r var
R16111:16111 Coq.MSets.MSetRBT <> x var
R16109:16109 Coq.MSets.MSetRBT <> l var
R16100:16100 Coq.MSets.MSetRBT <> y var
R16128:16131 Coq.Init.Logic <> ::type_scope:x_'\/'_x not
R16120:16123 Coq.MSets.MSetRBT X eq defax
R16127:16127 Coq.MSets.MSetRBT <> x var
R16125:16125 Coq.MSets.MSetRBT <> y var
R16139:16142 Coq.Init.Logic <> ::type_scope:x_'\/'_x not
R16132:16134 Coq.MSets.MSetRBT MakeRaw InT ind
R16138:16138 Coq.MSets.MSetRBT <> l var
R16136:16136 Coq.MSets.MSetRBT <> y var
R16143:16145 Coq.MSets.MSetRBT MakeRaw InT ind
R16149:16149 Coq.MSets.MSetRBT <> r var
R16147:16147 Coq.MSets.MSetRBT <> y var
R16165:16175 Coq.MSets.MSetRBT MakeRaw rbal'_match thm
R16165:16175 Coq.MSets.MSetRBT MakeRaw rbal'_match thm
inst 16207:16214 MakeRaw rbal'_ok
R16224:16225 Coq.MSets.MSetRBT MakeRaw Ok class
R16227:16227 Coq.MSets.MSetRBT <> l var
R16230:16231 Coq.MSets.MSetRBT MakeRaw Ok class
R16233:16233 Coq.MSets.MSetRBT <> r var
R16236:16242 Coq.MSets.MSetRBT MakeRaw lt_tree def
R16246:16246 Coq.MSets.MSetRBT <> l var
R16244:16244 Coq.MSets.MSetRBT <> x var
R16249:16255 Coq.MSets.MSetRBT MakeRaw gt_tree def
R16259:16259 Coq.MSets.MSetRBT <> r var
R16257:16257 Coq.MSets.MSetRBT <> x var
R16265:16266 Coq.MSets.MSetRBT MakeRaw Ok class
R16269:16273 Coq.MSets.MSetRBT MakeRaw rbal' def
R16279:16279 Coq.MSets.MSetRBT <> r var
R16277:16277 Coq.MSets.MSetRBT <> x var
R16275:16275 Coq.MSets.MSetRBT <> l var
R16301:16311 Coq.MSets.MSetRBT MakeRaw rbal'_match thm
R16301:16311 Coq.MSets.MSetRBT MakeRaw rbal'_match thm
R16344:16354 Coq.MSets.MSetRBT MakeRaw In_node_iff thm
R16356:16366 Coq.MSets.MSetRBT MakeRaw In_leaf_iff thm
R16369:16380 Coq.MSets.MSetRBT MakeRaw makeRed_spec thm
R16382:16395 Coq.MSets.MSetRBT MakeRaw makeBlack_spec thm
R16397:16405 Coq.MSets.MSetRBT MakeRaw lbal_spec thm
R16407:16415 Coq.MSets.MSetRBT MakeRaw rbal_spec thm
R16417:16426 Coq.MSets.MSetRBT MakeRaw rbal'_spec thm
prf 16654:16661 MakeRaw ins_spec
R16695:16699 Coq.Init.Logic <> ::type_scope:x_'<->'_x not
R16680:16682 Coq.MSets.MSetRBT MakeRaw InT ind
R16687:16689 Coq.MSets.MSetRBT MakeRaw ins def
R16693:16693 Coq.MSets.MSetRBT <> s var
R16691:16691 Coq.MSets.MSetRBT <> x var
R16684:16684 Coq.MSets.MSetRBT <> y var
R16708:16711 Coq.Init.Logic <> ::type_scope:x_'\/'_x not
R16700:16703 Coq.MSets.MSetRBT X eq defax
R16707:16707 Coq.MSets.MSetRBT <> x var
R16705:16705 Coq.MSets.MSetRBT <> y var
R16712:16714 Coq.MSets.MSetRBT MakeRaw InT ind
R16718:16718 Coq.MSets.MSetRBT <> s var
R16716:16716 Coq.MSets.MSetRBT <> y var
R16923:16930 Coq.MSets.MSetRBT MakeRaw ins_spec thm
inst 16948:16953 MakeRaw ins_ok
R16961:16962 Coq.MSets.MSetRBT MakeRaw Ok class
R16964:16964 Coq.MSets.MSetRBT <> s var
R16969:16970 Coq.MSets.MSetRBT MakeRaw Ok class
R16973:16975 Coq.MSets.MSetRBT MakeRaw ins def
R16979:16979 Coq.MSets.MSetRBT <> s var
R16977:16977 Coq.MSets.MSetRBT <> x var
R17044:17050 Coq.MSets.MSetRBT MakeRaw rbal_ok inst
R17027:17033 Coq.MSets.MSetRBT MakeRaw lbal_ok inst
R17027:17033 Coq.MSets.MSetRBT MakeRaw lbal_ok inst
R17044:17050 Coq.MSets.MSetRBT MakeRaw rbal_ok inst
R17027:17033 Coq.MSets.MSetRBT MakeRaw lbal_ok inst
R17027:17033 Coq.MSets.MSetRBT MakeRaw lbal_ok inst
R17044:17050 Coq.MSets.MSetRBT MakeRaw rbal_ok inst
R17027:17033 Coq.MSets.MSetRBT MakeRaw lbal_ok inst
R17044:17050 Coq.MSets.MSetRBT MakeRaw rbal_ok inst
prf 17116:17124 MakeRaw add_spec'
R17150:17154 Coq.Init.Logic <> ::type_scope:x_'<->'_x not
R17135:17137 Coq.MSets.MSetRBT MakeRaw InT ind
R17142:17144 Coq.MSets.MSetRBT MakeRaw add def
R17148:17148 Coq.MSets.MSetRBT <> s var
R17146:17146 Coq.MSets.MSetRBT <> x var
R17139:17139 Coq.MSets.MSetRBT <> y var
R17163:17166 Coq.Init.Logic <> ::type_scope:x_'\/'_x not
R17155:17158 Coq.MSets.MSetRBT X eq defax
R17162:17162 Coq.MSets.MSetRBT <> x var
R17160:17160 Coq.MSets.MSetRBT <> y var
R17167:17169 Coq.MSets.MSetRBT MakeRaw InT ind
R17173:17173 Coq.MSets.MSetRBT <> s var
R17171:17171 Coq.MSets.MSetRBT <> y var
R17191:17193 Coq.MSets.MSetRBT MakeRaw add def
R17228:17236 Coq.MSets.MSetRBT MakeRaw add_spec' thm
prf 17251:17258 MakeRaw add_spec
R17268:17269 Coq.MSets.MSetRBT MakeRaw Ok class
R17271:17271 Coq.MSets.MSetRBT <> s var
R17292:17296 Coq.Init.Logic <> ::type_scope:x_'<->'_x not
R17277:17279 Coq.MSets.MSetRBT MakeRaw InT ind
R17284:17286 Coq.MSets.MSetRBT MakeRaw add def
R17290:17290 Coq.MSets.MSetRBT <> s var
R17288:17288 Coq.MSets.MSetRBT <> x var
R17281:17281 Coq.MSets.MSetRBT <> y var
R17305:17308 Coq.Init.Logic <> ::type_scope:x_'\/'_x not
R17297:17300 Coq.MSets.MSetRBT X eq defax
R17304:17304 Coq.MSets.MSetRBT <> x var
R17302:17302 Coq.MSets.MSetRBT <> y var
R17309:17311 Coq.MSets.MSetRBT MakeRaw InT ind
R17315:17315 Coq.MSets.MSetRBT <> s var
R17313:17313 Coq.MSets.MSetRBT <> y var
R17332:17340 Coq.MSets.MSetRBT MakeRaw add_spec' thm
R17332:17340 Coq.MSets.MSetRBT MakeRaw add_spec' thm
inst 17358:17363 MakeRaw add_ok
R17371:17372 Coq.MSets.MSetRBT MakeRaw Ok class
R17374:17374 Coq.MSets.MSetRBT <> s var
R17379:17380 Coq.MSets.MSetRBT MakeRaw Ok class
R17383:17385 Coq.MSets.MSetRBT MakeRaw add def
R17389:17389 Coq.MSets.MSetRBT <> s var
R17387:17387 Coq.MSets.MSetRBT <> x var
R17408:17410 Coq.MSets.MSetRBT MakeRaw add def
prf 17468:17477 MakeRaw lbalS_spec
R17510:17514 Coq.Init.Logic <> ::type_scope:x_'<->'_x not
R17491:17493 Coq.MSets.MSetRBT MakeRaw InT ind
R17498:17502 Coq.MSets.MSetRBT MakeRaw lbalS def
R17508:17508 Coq.MSets.MSetRBT <> r var
R17506:17506 Coq.MSets.MSetRBT <> x var
R17504:17504 Coq.MSets.MSetRBT <> l var
R17495:17495 Coq.MSets.MSetRBT <> y var
R17523:17526 Coq.Init.Logic <> ::type_scope:x_'\/'_x not
R17515:17518 Coq.MSets.MSetRBT X eq defax
R17522:17522 Coq.MSets.MSetRBT <> x var
R17520:17520 Coq.MSets.MSetRBT <> y var
R17534:17537 Coq.Init.Logic <> ::type_scope:x_'\/'_x not
R17527:17529 Coq.MSets.MSetRBT MakeRaw InT ind
R17533:17533 Coq.MSets.MSetRBT <> l var
R17531:17531 Coq.MSets.MSetRBT <> y var
R17538:17540 Coq.MSets.MSetRBT MakeRaw InT ind
R17544:17544 Coq.MSets.MSetRBT <> r var
R17542:17542 Coq.MSets.MSetRBT <> y var
R17560:17570 Coq.MSets.MSetRBT MakeRaw lbalS_match thm
R17560:17570 Coq.MSets.MSetRBT MakeRaw lbalS_match thm
inst 17776:17783 MakeRaw lbalS_ok
R17803:17804 Coq.MSets.MSetRBT MakeRaw Ok class
R17806:17806 Coq.MSets.MSetRBT <> l var
R17809:17810 Coq.MSets.MSetRBT MakeRaw Ok class
R17812:17812 Coq.MSets.MSetRBT <> r var
R17815:17821 Coq.MSets.MSetRBT MakeRaw lt_tree def
R17825:17825 Coq.MSets.MSetRBT <> l var
R17823:17823 Coq.MSets.MSetRBT <> x var
R17828:17834 Coq.MSets.MSetRBT MakeRaw gt_tree def
R17838:17838 Coq.MSets.MSetRBT <> r var
R17836:17836 Coq.MSets.MSetRBT <> x var
R17842:17843 Coq.MSets.MSetRBT MakeRaw Ok class
R17846:17850 Coq.MSets.MSetRBT MakeRaw lbalS def
R17856:17856 Coq.MSets.MSetRBT <> r var
R17854:17854 Coq.MSets.MSetRBT <> x var
R17852:17852 Coq.MSets.MSetRBT <> l var
R17873:17883 Coq.MSets.MSetRBT MakeRaw lbalS_match thm
R17873:17883 Coq.MSets.MSetRBT MakeRaw lbalS_match thm
R18009:18016 Coq.MSets.MSetRBT MakeRaw rbal'_ok inst
R18009:18016 Coq.MSets.MSetRBT MakeRaw rbal'_ok inst
R18163:18170 Coq.MSets.MSetRBT MakeRaw rbal'_ok inst
R18163:18170 Coq.MSets.MSetRBT MakeRaw rbal'_ok inst
prf 18189:18198 MakeRaw rbalS_spec
R18231:18235 Coq.Init.Logic <> ::type_scope:x_'<->'_x not
R18212:18214 Coq.MSets.MSetRBT MakeRaw InT ind
R18219:18223 Coq.MSets.MSetRBT MakeRaw rbalS def
R18229:18229 Coq.MSets.MSetRBT <> r var
R18227:18227 Coq.MSets.MSetRBT <> x var
R18225:18225 Coq.MSets.MSetRBT <> l var
R18216:18216 Coq.MSets.MSetRBT <> y var
R18244:18247 Coq.Init.Logic <> ::type_scope:x_'\/'_x not
R18236:18239 Coq.MSets.MSetRBT X eq defax
R18243:18243 Coq.MSets.MSetRBT <> x var
R18241:18241 Coq.MSets.MSetRBT <> y var
R18255:18258 Coq.Init.Logic <> ::type_scope:x_'\/'_x not
R18248:18250 Coq.MSets.MSetRBT MakeRaw InT ind
R18254:18254 Coq.MSets.MSetRBT <> l var
R18252:18252 Coq.MSets.MSetRBT <> y var
R18259:18261 Coq.MSets.MSetRBT MakeRaw InT ind
R18265:18265 Coq.MSets.MSetRBT <> r var
R18263:18263 Coq.MSets.MSetRBT <> y var
R18281:18291 Coq.MSets.MSetRBT MakeRaw rbalS_match thm
R18281:18291 Coq.MSets.MSetRBT MakeRaw rbalS_match thm
inst 18511:18518 MakeRaw rbalS_ok
R18538:18539 Coq.MSets.MSetRBT MakeRaw Ok class
R18541:18541 Coq.MSets.MSetRBT <> l var
R18544:18545 Coq.MSets.MSetRBT MakeRaw Ok class
R18547:18547 Coq.MSets.MSetRBT <> r var
R18550:18556 Coq.MSets.MSetRBT MakeRaw lt_tree def
R18560:18560 Coq.MSets.MSetRBT <> l var
R18558:18558 Coq.MSets.MSetRBT <> x var
R18563:18569 Coq.MSets.MSetRBT MakeRaw gt_tree def
R18573:18573 Coq.MSets.MSetRBT <> r var
R18571:18571 Coq.MSets.MSetRBT <> x var
R18577:18578 Coq.MSets.MSetRBT MakeRaw Ok class
R18581:18585 Coq.MSets.MSetRBT MakeRaw rbalS def
R18591:18591 Coq.MSets.MSetRBT <> r var
R18589:18589 Coq.MSets.MSetRBT <> x var
R18587:18587 Coq.MSets.MSetRBT <> l var
R18608:18618 Coq.MSets.MSetRBT MakeRaw rbalS_match thm
R18608:18618 Coq.MSets.MSetRBT MakeRaw rbalS_match thm
R18744:18750 Coq.MSets.MSetRBT MakeRaw lbal_ok inst
R18744:18750 Coq.MSets.MSetRBT MakeRaw lbal_ok inst
R18888:18894 Coq.MSets.MSetRBT MakeRaw lbal_ok inst
R18888:18894 Coq.MSets.MSetRBT MakeRaw lbal_ok inst
R18920:18929 Coq.MSets.MSetRBT MakeRaw lbalS_spec thm
R18931:18940 Coq.MSets.MSetRBT MakeRaw rbalS_spec thm
R19201:19206 Coq.MSets.MSetRBT MakeRaw notred def
R19209:19210 Coq.MSets.MSetRBT MakeRaw Bk syndef
R19258:19259 Coq.MSets.MSetRBT MakeRaw Bk syndef
R19351:19356 Coq.MSets.MSetRBT MakeRaw append def
R19351:19356 Coq.MSets.MSetRBT MakeRaw append def
R19369:19370 Coq.MSets.MSetRBT MakeRaw Rd syndef
R19373:19378 Coq.MSets.MSetRBT MakeRaw append def
R19381:19382 Coq.MSets.MSetRBT MakeRaw Bk syndef
R19423:19428 Coq.MSets.MSetRBT MakeRaw notred def
R19431:19432 Coq.MSets.MSetRBT MakeRaw Bk syndef
R19480:19481 Coq.MSets.MSetRBT MakeRaw Bk syndef
prf 19581:19595 MakeRaw append_rr_match
R19618:19622 Coq.MSets.MSetRBT MakeRaw rspec ind
R19727:19732 Coq.MSets.MSetRBT MakeRaw append def
R19749:19750 Coq.MSets.MSetRBT MakeRaw Rd syndef
R19758:19759 Coq.MSets.MSetRBT <> rr var
R19755:19756 Coq.MSets.MSetRBT <> rx var
R19752:19753 Coq.MSets.MSetRBT <> rl var
R19735:19736 Coq.MSets.MSetRBT MakeRaw Rd syndef
R19744:19745 Coq.MSets.MSetRBT <> lr var
R19741:19742 Coq.MSets.MSetRBT <> lx var
R19738:19739 Coq.MSets.MSetRBT <> ll var
R19710:19715 Coq.MSets.MSetRBT MakeRaw append def
R19720:19721 Coq.MSets.MSetRBT <> rl var
R19717:19718 Coq.MSets.MSetRBT <> lr var
R19684:19685 Coq.MSets.MSetRBT MakeRaw Rd syndef
R19694:19695 Coq.MSets.MSetRBT MakeRaw Rd syndef
R19702:19703 Coq.MSets.MSetRBT <> rr var
R19699:19700 Coq.MSets.MSetRBT <> rx var
R19697:19697 Coq.MSets.MSetRBT <> t var
R19690:19691 Coq.MSets.MSetRBT <> lx var
R19687:19688 Coq.MSets.MSetRBT <> ll var
R19640:19641 Coq.MSets.MSetRBT MakeRaw Rd syndef
R19659:19660 Coq.MSets.MSetRBT MakeRaw Rd syndef
R19667:19668 Coq.MSets.MSetRBT <> rr var
R19664:19665 Coq.MSets.MSetRBT <> rx var
R19662:19662 Coq.MSets.MSetRBT <> b var
R19656:19656 Coq.MSets.MSetRBT <> x var
R19644:19645 Coq.MSets.MSetRBT MakeRaw Rd syndef
R19653:19653 Coq.MSets.MSetRBT <> a var
R19650:19651 Coq.MSets.MSetRBT <> lx var
R19647:19648 Coq.MSets.MSetRBT <> ll var
R19779:19784 Coq.MSets.MSetRBT MakeRaw rmatch thm
R19779:19784 Coq.MSets.MSetRBT MakeRaw rmatch thm
prf 19805:19819 MakeRaw append_bb_match
R19842:19846 Coq.MSets.MSetRBT MakeRaw rspec ind
R19954:19959 Coq.MSets.MSetRBT MakeRaw append def
R19976:19977 Coq.MSets.MSetRBT MakeRaw Bk syndef
R19985:19986 Coq.MSets.MSetRBT <> rr var
R19982:19983 Coq.MSets.MSetRBT <> rx var
R19979:19980 Coq.MSets.MSetRBT <> rl var
R19962:19963 Coq.MSets.MSetRBT MakeRaw Bk syndef
R19971:19972 Coq.MSets.MSetRBT <> lr var
R19968:19969 Coq.MSets.MSetRBT <> lx var
R19965:19966 Coq.MSets.MSetRBT <> ll var
R19937:19942 Coq.MSets.MSetRBT MakeRaw append def
R19947:19948 Coq.MSets.MSetRBT <> rl var
R19944:19945 Coq.MSets.MSetRBT <> lr var
R19908:19912 Coq.MSets.MSetRBT MakeRaw lbalS def
R19921:19922 Coq.MSets.MSetRBT MakeRaw Bk syndef
R19929:19930 Coq.MSets.MSetRBT <> rr var
R19926:19927 Coq.MSets.MSetRBT <> rx var
R19924:19924 Coq.MSets.MSetRBT <> t var
R19917:19918 Coq.MSets.MSetRBT <> lx var
R19914:19915 Coq.MSets.MSetRBT <> ll var
R19864:19865 Coq.MSets.MSetRBT MakeRaw Rd syndef
R19883:19884 Coq.MSets.MSetRBT MakeRaw Bk syndef
R19891:19892 Coq.MSets.MSetRBT <> rr var
R19888:19889 Coq.MSets.MSetRBT <> rx var
R19886:19886 Coq.MSets.MSetRBT <> b var
R19880:19880 Coq.MSets.MSetRBT <> x var
R19868:19869 Coq.MSets.MSetRBT MakeRaw Bk syndef
R19877:19877 Coq.MSets.MSetRBT <> a var
R19874:19875 Coq.MSets.MSetRBT <> lx var
R19871:19872 Coq.MSets.MSetRBT <> ll var
R20006:20011 Coq.MSets.MSetRBT MakeRaw rmatch thm
R20006:20011 Coq.MSets.MSetRBT MakeRaw rmatch thm
prf 20033:20043 MakeRaw append_spec
R20072:20076 Coq.Init.Logic <> ::type_scope:x_'<->'_x not
R20054:20056 Coq.MSets.MSetRBT MakeRaw InT ind
R20061:20066 Coq.MSets.MSetRBT MakeRaw append def
R20070:20070 Coq.MSets.MSetRBT <> r var
R20068:20068 Coq.MSets.MSetRBT <> l var
R20058:20058 Coq.MSets.MSetRBT <> x var
R20084:20087 Coq.Init.Logic <> ::type_scope:x_'\/'_x not
R20077:20079 Coq.MSets.MSetRBT MakeRaw InT ind
R20083:20083 Coq.MSets.MSetRBT <> l var
R20081:20081 Coq.MSets.MSetRBT <> x var
R20088:20090 Coq.MSets.MSetRBT MakeRaw InT ind
R20094:20094 Coq.MSets.MSetRBT <> r var
R20092:20092 Coq.MSets.MSetRBT <> x var
R20192:20206 Coq.MSets.MSetRBT MakeRaw append_rr_match thm
R20192:20206 Coq.MSets.MSetRBT MakeRaw append_rr_match thm
R20303:20317 Coq.MSets.MSetRBT MakeRaw append_bb_match thm
R20303:20317 Coq.MSets.MSetRBT MakeRaw append_bb_match thm
R20389:20399 Coq.MSets.MSetRBT MakeRaw append_spec thm
prf 20414:20422 MakeRaw append_ok
R20441:20442 Coq.MSets.MSetRBT MakeRaw Ok class
R20444:20444 Coq.MSets.MSetRBT <> l var
R20447:20448 Coq.MSets.MSetRBT MakeRaw Ok class
R20450:20450 Coq.MSets.MSetRBT <> r var
R20466:20469 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R20481:20484 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R20485:20486 Coq.MSets.MSetRBT MakeRaw Ok class
R20489:20494 Coq.MSets.MSetRBT MakeRaw append def
R20498:20498 Coq.MSets.MSetRBT <> r var
R20496:20496 Coq.MSets.MSetRBT <> l var
R20470:20476 Coq.MSets.MSetRBT MakeRaw gt_tree def
R20480:20480 Coq.MSets.MSetRBT <> r var
R20478:20478 Coq.MSets.MSetRBT <> x var
R20455:20461 Coq.MSets.MSetRBT MakeRaw lt_tree def
R20465:20465 Coq.MSets.MSetRBT <> l var
R20463:20463 Coq.MSets.MSetRBT <> x var
R20637:20638 Coq.MSets.MSetRBT MakeRaw Ok class
R20641:20646 Coq.MSets.MSetRBT MakeRaw append def
R20637:20638 Coq.MSets.MSetRBT MakeRaw Ok class
R20641:20646 Coq.MSets.MSetRBT MakeRaw append def
R20703:20706 Coq.MSets.MSetRBT X lt defax
R20703:20706 Coq.MSets.MSetRBT X lt defax
R20758:20764 Coq.MSets.MSetRBT MakeRaw gt_tree def
R20770:20775 Coq.MSets.MSetRBT MakeRaw append def
R20758:20764 Coq.MSets.MSetRBT MakeRaw gt_tree def
R20770:20775 Coq.MSets.MSetRBT MakeRaw append def
R20866:20872 Coq.MSets.MSetRBT MakeRaw lt_tree def
R20878:20883 Coq.MSets.MSetRBT MakeRaw append def
R20866:20872 Coq.MSets.MSetRBT MakeRaw lt_tree def
R20878:20883 Coq.MSets.MSetRBT MakeRaw append def
R20982:20996 Coq.MSets.MSetRBT MakeRaw append_rr_match thm
R20982:20996 Coq.MSets.MSetRBT MakeRaw append_rr_match thm
R21220:21221 Coq.MSets.MSetRBT MakeRaw Ok class
R21224:21229 Coq.MSets.MSetRBT MakeRaw append def
R21220:21221 Coq.MSets.MSetRBT MakeRaw Ok class
R21224:21229 Coq.MSets.MSetRBT MakeRaw append def
R21286:21289 Coq.MSets.MSetRBT X lt defax
R21286:21289 Coq.MSets.MSetRBT X lt defax
R21341:21347 Coq.MSets.MSetRBT MakeRaw gt_tree def
R21353:21358 Coq.MSets.MSetRBT MakeRaw append def
R21341:21347 Coq.MSets.MSetRBT MakeRaw gt_tree def
R21353:21358 Coq.MSets.MSetRBT MakeRaw append def
R21449:21455 Coq.MSets.MSetRBT MakeRaw lt_tree def
R21461:21466 Coq.MSets.MSetRBT MakeRaw append def
R21449:21455 Coq.MSets.MSetRBT MakeRaw lt_tree def
R21461:21466 Coq.MSets.MSetRBT MakeRaw append def
R21565:21579 Coq.MSets.MSetRBT MakeRaw append_bb_match thm
R21565:21579 Coq.MSets.MSetRBT MakeRaw append_bb_match thm
R21604:21611 Coq.MSets.MSetRBT MakeRaw lbalS_ok inst
R21604:21611 Coq.MSets.MSetRBT MakeRaw lbalS_ok inst
prf 21650:21657 MakeRaw del_spec
R21676:21677 Coq.MSets.MSetRBT MakeRaw Ok class
R21679:21679 Coq.MSets.MSetRBT <> s var
R21699:21703 Coq.Init.Logic <> ::type_scope:x_'<->'_x not
R21684:21686 Coq.MSets.MSetRBT MakeRaw InT ind
R21691:21693 Coq.MSets.MSetRBT MakeRaw del def
R21697:21697 Coq.MSets.MSetRBT <> s var
R21695:21695 Coq.MSets.MSetRBT <> x var
R21688:21688 Coq.MSets.MSetRBT <> y var
R21711:21714 Coq.Init.Logic <> ::type_scope:x_'/\'_x not
R21704:21706 Coq.MSets.MSetRBT MakeRaw InT ind
R21710:21710 Coq.MSets.MSetRBT <> s var
R21708:21708 Coq.MSets.MSetRBT <> y var
R21715:21715 Coq.Init.Logic <> ::type_scope:'~'_x not
R21716:21719 Coq.MSets.MSetRBT X eq defax
R21723:21723 Coq.MSets.MSetRBT <> x var
R21721:21721 Coq.MSets.MSetRBT <> y var
R21796:21799 Coq.MSets.MSetRBT X lt defax
R21796:21799 Coq.MSets.MSetRBT X lt defax
R21834:21837 Coq.MSets.MSetRBT X lt defax
R21834:21837 Coq.MSets.MSetRBT X lt defax
R22070:22077 Coq.MSets.MSetRBT MakeRaw del_spec thm
inst 22095:22100 MakeRaw del_ok
R22108:22109 Coq.MSets.MSetRBT MakeRaw Ok class
R22111:22111 Coq.MSets.MSetRBT <> s var
R22116:22117 Coq.MSets.MSetRBT MakeRaw Ok class
R22120:22122 Coq.MSets.MSetRBT MakeRaw del def
R22126:22126 Coq.MSets.MSetRBT <> s var
R22124:22124 Coq.MSets.MSetRBT <> x var
R22169:22177 Coq.MSets.MSetRBT MakeRaw append_ok thm
R22169:22177 Coq.MSets.MSetRBT MakeRaw append_ok thm
R22197:22203 Coq.MSets.MSetRBT MakeRaw lt_tree def
R22209:22211 Coq.MSets.MSetRBT MakeRaw del def
R22197:22203 Coq.MSets.MSetRBT MakeRaw lt_tree def
R22209:22211 Coq.MSets.MSetRBT MakeRaw del def
R22324:22330 Coq.MSets.MSetRBT MakeRaw gt_tree def
R22336:22338 Coq.MSets.MSetRBT MakeRaw del def
R22324:22330 Coq.MSets.MSetRBT MakeRaw gt_tree def
R22336:22338 Coq.MSets.MSetRBT MakeRaw del def
prf 22453:22463 MakeRaw remove_spec
R22473:22474 Coq.MSets.MSetRBT MakeRaw Ok class
R22476:22476 Coq.MSets.MSetRBT <> s var
R22500:22504 Coq.Init.Logic <> ::type_scope:x_'<->'_x not
R22482:22484 Coq.MSets.MSetRBT MakeRaw InT ind
R22489:22494 Coq.MSets.MSetRBT MakeRaw remove def
R22498:22498 Coq.MSets.MSetRBT <> s var
R22496:22496 Coq.MSets.MSetRBT <> x var
R22486:22486 Coq.MSets.MSetRBT <> y var
R22512:22515 Coq.Init.Logic <> ::type_scope:x_'/\'_x not
R22505:22507 Coq.MSets.MSetRBT MakeRaw InT ind
R22511:22511 Coq.MSets.MSetRBT <> s var
R22509:22509 Coq.MSets.MSetRBT <> y var
R22516:22516 Coq.Init.Logic <> ::type_scope:'~'_x not
R22517:22520 Coq.MSets.MSetRBT X eq defax
R22524:22524 Coq.MSets.MSetRBT <> x var
R22522:22522 Coq.MSets.MSetRBT <> y var
R22541:22546 Coq.MSets.MSetRBT MakeRaw remove def
R22581:22591 Coq.MSets.MSetRBT MakeRaw remove_spec thm
inst 22609:22617 MakeRaw remove_ok
R22625:22626 Coq.MSets.MSetRBT MakeRaw Ok class
R22628:22628 Coq.MSets.MSetRBT <> s var
R22633:22634 Coq.MSets.MSetRBT MakeRaw Ok class
R22637:22642 Coq.MSets.MSetRBT MakeRaw remove def
R22646:22646 Coq.MSets.MSetRBT <> s var
R22644:22644 Coq.MSets.MSetRBT <> x var
R22664:22669 Coq.MSets.MSetRBT MakeRaw remove def
prf 22733:22743 MakeRaw delmin_spec
R22764:22765 Coq.MSets.MSetRBT MakeRaw Ok class
R22768:22771 Coq.MSets.MSetRBT MakeRaw Node constr
R22779:22779 Coq.MSets.MSetRBT <> r var
R22777:22777 Coq.MSets.MSetRBT <> y var
R22775:22775 Coq.MSets.MSetRBT <> l var
R22773:22773 Coq.MSets.MSetRBT <> c var
R22807:22812 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R22844:22847 Coq.Init.Logic <> ::type_scope:x_'/\'_x not
R22835:22837 Coq.Init.Logic <> ::type_scope:x_'='_x not
R22813:22819 Coq.MSets.MSetRBT MakeRaw min_elt def
R22822:22825 Coq.MSets.MSetRBT MakeRaw Node constr
R22833:22833 Coq.MSets.MSetRBT <> r var
R22831:22831 Coq.MSets.MSetRBT <> y var
R22829:22829 Coq.MSets.MSetRBT <> l var
R22827:22827 Coq.MSets.MSetRBT <> c var
R22838:22841 Coq.Init.Datatypes <> Some constr
R22843:22843 Coq.MSets.MSetRBT <> x var
R22868:22870 Coq.Init.Logic <> ::type_scope:x_'='_x not
R22848:22850 Coq.MSets.MSetRBT MakeRaw del def
R22855:22858 Coq.MSets.MSetRBT MakeRaw Node constr
R22866:22866 Coq.MSets.MSetRBT <> r var
R22864:22864 Coq.MSets.MSetRBT <> y var
R22862:22862 Coq.MSets.MSetRBT <> l var
R22860:22860 Coq.MSets.MSetRBT <> c var
R22852:22852 Coq.MSets.MSetRBT <> x var
R22871:22872 Coq.MSets.MSetRBT <> s' var
R22798:22800 Coq.Init.Logic <> ::type_scope:x_'='_x not
R22786:22791 Coq.MSets.MSetRBT MakeRaw delmin def
R22797:22797 Coq.MSets.MSetRBT <> r var
R22795:22795 Coq.MSets.MSetRBT <> y var
R22793:22793 Coq.MSets.MSetRBT <> l var
R22801:22801 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R22803:22803 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R22806:22806 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R22802:22802 Coq.MSets.MSetRBT <> x var
R22804:22805 Coq.MSets.MSetRBT <> s' var
R23015:23029 Coq.MSets.MSetRBT MakeRaw compare_refl thm
R23015:23029 Coq.MSets.MSetRBT MakeRaw compare_refl thm
R23015:23029 Coq.MSets.MSetRBT MakeRaw compare_refl thm
R23108:23113 Coq.MSets.MSetRBT MakeRaw delmin def
R23192:23195 Coq.MSets.MSetRBT MakeRaw Node constr
R23192:23195 Coq.MSets.MSetRBT MakeRaw Node constr
R23361:23364 Coq.MSets.MSetRBT X lt defax
R23361:23364 Coq.MSets.MSetRBT X lt defax
R23413:23415 Coq.MSets.MSetRBT MakeRaw InT ind
R23435:23447 Coq.MSets.MSetRBT MakeRaw min_elt_spec1 thm
R23413:23415 Coq.MSets.MSetRBT MakeRaw InT ind
R23435:23447 Coq.MSets.MSetRBT MakeRaw min_elt_spec1 thm
R23475:23488 Coq.MSets.MSetRBT X compare_spec prfax
R23475:23488 Coq.MSets.MSetRBT X compare_spec prfax
prf 23563:23578 MakeRaw remove_min_spec1
R23589:23590 Coq.MSets.MSetRBT MakeRaw Ok class
R23592:23592 Coq.MSets.MSetRBT <> s var
R23623:23628 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R23647:23650 Coq.Init.Logic <> ::type_scope:x_'/\'_x not
R23638:23640 Coq.Init.Logic <> ::type_scope:x_'='_x not
R23629:23635 Coq.MSets.MSetRBT MakeRaw min_elt def
R23637:23637 Coq.MSets.MSetRBT <> s var
R23641:23644 Coq.Init.Datatypes <> Some constr
R23646:23646 Coq.MSets.MSetRBT <> x var
R23661:23663 Coq.Init.Logic <> ::type_scope:x_'='_x not
R23651:23656 Coq.MSets.MSetRBT MakeRaw remove def
R23660:23660 Coq.MSets.MSetRBT <> s var
R23658:23658 Coq.MSets.MSetRBT <> x var
R23664:23665 Coq.MSets.MSetRBT <> s' var
R23609:23611 Coq.Init.Logic <> ::type_scope:x_'='_x not
R23597:23606 Coq.MSets.MSetRBT MakeRaw remove_min def
R23608:23608 Coq.MSets.MSetRBT <> s var
R23612:23615 Coq.Init.Datatypes <> Some constr
R23617:23617 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R23619:23619 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R23622:23622 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R23618:23618 Coq.MSets.MSetRBT <> x var
R23620:23621 Coq.MSets.MSetRBT <> s' var
R23683:23692 Coq.MSets.MSetRBT MakeRaw remove_min def
R23745:23755 Coq.MSets.MSetRBT MakeRaw delmin_spec thm
R23745:23755 Coq.MSets.MSetRBT MakeRaw delmin_spec thm
R23777:23782 Coq.MSets.MSetRBT MakeRaw delmin def
R23851:23856 Coq.MSets.MSetRBT MakeRaw remove def
R23862:23865 Coq.MSets.MSetRBT MakeRaw Node constr
R23851:23856 Coq.MSets.MSetRBT MakeRaw remove def
R23862:23865 Coq.MSets.MSetRBT MakeRaw Node constr
prf 23916:23931 MakeRaw remove_min_spec2
R23956:23959 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R23960:23964 Coq.MSets.MSetRBT MakeRaw Empty def
R23966:23966 Coq.MSets.MSetRBT <> s var
R23949:23951 Coq.Init.Logic <> ::type_scope:x_'='_x not
R23937:23946 Coq.MSets.MSetRBT MakeRaw remove_min def
R23948:23948 Coq.MSets.MSetRBT <> s var
R23952:23955 Coq.Init.Datatypes <> None constr
R23984:23993 Coq.MSets.MSetRBT MakeRaw remove_min def
R24048:24053 Coq.MSets.MSetRBT MakeRaw delmin def
prf 24068:24080 MakeRaw remove_min_ok
R24085:24085 Coq.MSets.MSetRBT MakeRaw t def
R24090:24091 Coq.MSets.MSetRBT MakeRaw Ok class
R24093:24093 Coq.MSets.MSetRBT <> s var
R24104:24113 Coq.MSets.MSetRBT MakeRaw remove_min def
R24115:24115 Coq.MSets.MSetRBT <> s var
R24125:24128 Coq.Init.Datatypes <> Some constr
R24130:24130 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R24132:24132 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R24135:24135 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R24140:24141 Coq.MSets.MSetRBT MakeRaw Ok class
R24149:24152 Coq.Init.Datatypes <> None constr
R24157:24160 Coq.Init.Logic <> True ind
R24188:24203 Coq.MSets.MSetRBT MakeRaw remove_min_spec1 thm
R24188:24203 Coq.MSets.MSetRBT MakeRaw remove_min_spec1 thm
R24219:24228 Coq.MSets.MSetRBT MakeRaw remove_min def
syndef 24341:24346 MakeRaw ifpred
R24366:24369 Coq.Init.Peano <> pred syndef
def 24398:24414 MakeRaw treeify_invariant
R24424:24432 Coq.MSets.MSetRBT MakeRaw treeify_t syndef
R24470:24474 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R24491:24491 Coq.MSets.MSetRBT <> f var
R24493:24495 Coq.MSets.MSetRBT <> acc var
R24518:24521 Coq.Init.Logic <> ::type_scope:x_'/\'_x not
R24511:24513 Coq.Init.Logic <> ::type_scope:x_'='_x not
R24501:24508 Coq.MSets.MSetRBT MakeRaw cardinal def
R24510:24510 Coq.MSets.MSetRBT <> t var
R24514:24517 Coq.MSets.MSetRBT <> size var
R24525:24527 Coq.Init.Logic <> ::type_scope:x_'='_x not
R24522:24524 Coq.MSets.MSetRBT <> acc var
R24538:24541 Coq.Init.Datatypes <> ::list_scope:x_'++'_x not
R24528:24535 Coq.MSets.MSetRBT MakeRaw elements def
R24537:24537 Coq.MSets.MSetRBT <> t var
R24542:24545 Coq.MSets.MSetRBT <> acc' var
R24456:24459 Coq.Init.Peano <> ::nat_scope:x_'<='_x not
R24452:24455 Coq.MSets.MSetRBT <> size var
R24460:24465 Coq.Init.Datatypes <> length def
R24467:24469 Coq.MSets.MSetRBT <> acc var
prf 24555:24571 MakeRaw treeify_zero_spec
R24575:24591 Coq.MSets.MSetRBT MakeRaw treeify_invariant def
R24595:24606 Coq.MSets.MSetRBT MakeRaw treeify_zero def
prf 24649:24664 MakeRaw treeify_one_spec
R24668:24684 Coq.MSets.MSetRBT MakeRaw treeify_invariant def
R24688:24698 Coq.MSets.MSetRBT MakeRaw treeify_one def
prf 24764:24780 MakeRaw treeify_cont_spec
R24831:24835 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R24861:24865 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R24890:24894 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R24895:24911 Coq.MSets.MSetRBT MakeRaw treeify_invariant def
R24919:24930 Coq.MSets.MSetRBT MakeRaw treeify_cont def
R24934:24934 Coq.MSets.MSetRBT <> g var
R24932:24932 Coq.MSets.MSetRBT <> f var
R24913:24916 Coq.MSets.MSetRBT <> size var
R24870:24872 Coq.Init.Logic <> ::type_scope:x_'='_x not
R24866:24869 Coq.MSets.MSetRBT <> size var
R24873:24873 Coq.Init.Datatypes <> S constr
R24881:24883 Coq.Init.Peano <> ::nat_scope:x_'+'_x not
R24876:24880 Coq.MSets.MSetRBT <> size1 var
R24884:24888 Coq.MSets.MSetRBT <> size2 var
R24836:24852 Coq.MSets.MSetRBT MakeRaw treeify_invariant def
R24860:24860 Coq.MSets.MSetRBT <> g var
R24854:24858 Coq.MSets.MSetRBT <> size2 var
R24806:24822 Coq.MSets.MSetRBT MakeRaw treeify_invariant def
R24830:24830 Coq.MSets.MSetRBT <> f var
R24824:24828 Coq.MSets.MSetRBT <> size1 var
R24977:24988 Coq.MSets.MSetRBT MakeRaw treeify_cont def
R25189:25198 Coq.Arith.PeanoNat Nat lt_nge thm
R25189:25198 Coq.Arith.PeanoNat Nat lt_nge thm
R25220:25228 Coq.Lists.List <> app_nil_r thm
R25234:25250 Coq.MSets.MSetRBT MakeRaw elements_cardinal thm
R25220:25228 Coq.Lists.List <> app_nil_r thm
R25220:25228 Coq.Lists.List <> app_nil_r thm
R25234:25250 Coq.MSets.MSetRBT MakeRaw elements_cardinal thm
R25234:25250 Coq.MSets.MSetRBT MakeRaw elements_cardinal thm
R25389:25398 Coq.Lists.List <> app_length thm
R25404:25420 Coq.MSets.MSetRBT MakeRaw elements_cardinal thm
R25389:25398 Coq.Lists.List <> app_length thm
R25389:25398 Coq.Lists.List <> app_length thm
R25404:25420 Coq.MSets.MSetRBT MakeRaw elements_cardinal thm
R25404:25420 Coq.MSets.MSetRBT MakeRaw elements_cardinal thm
R25442:25455 Coq.Arith.PeanoNat Nat add_succ_r thm
R25461:25476 Coq.Arith.PeanoNat Nat succ_le_mono thm
R25442:25455 Coq.Arith.PeanoNat Nat add_succ_r thm
R25442:25455 Coq.Arith.PeanoNat Nat add_succ_r thm
R25461:25476 Coq.Arith.PeanoNat Nat succ_le_mono thm
R25461:25476 Coq.Arith.PeanoNat Nat succ_le_mono thm
R25489:25505 Coq.Arith.PeanoNat Nat add_le_mono_l thm
R25489:25505 Coq.Arith.PeanoNat Nat add_le_mono_l thm
R25519:25531 Coq.MSets.MSetRBT MakeRaw elements_node thm
R25534:25540 Coq.Lists.List <> app_ass syndef
R25519:25531 Coq.MSets.MSetRBT MakeRaw elements_node thm
R25519:25531 Coq.MSets.MSetRBT MakeRaw elements_node thm
R25534:25540 Coq.Lists.List <> app_ass syndef
R25534:25540 Coq.Lists.List <> app_ass syndef
prf 25566:25581 MakeRaw treeify_aux_spec
R25588:25591 Coq.Init.Datatypes <> bool ind
R25597:25613 Coq.MSets.MSetRBT MakeRaw treeify_invariant def
R25642:25652 Coq.MSets.MSetRBT MakeRaw treeify_aux def
R25656:25656 Coq.MSets.MSetRBT <> n var
R25654:25654 Coq.MSets.MSetRBT <> p var
R25616:25621 Coq.MSets.MSetRBT MakeRaw ifpred syndef
R25626:25635 Coq.PArith.BinPos Pos to_nat def
R25637:25637 Coq.MSets.MSetRBT <> n var
R25626:25635 Coq.PArith.BinPos Pos to_nat def
R25637:25637 Coq.MSets.MSetRBT <> n var
R25623:25623 Coq.MSets.MSetRBT <> p var
R25741:25757 Coq.MSets.MSetRBT MakeRaw treeify_cont_spec thm
R25773:25777 Coq.Init.Datatypes <> false constr
R25741:25757 Coq.MSets.MSetRBT MakeRaw treeify_cont_spec thm
R25773:25777 Coq.Init.Datatypes <> false constr
R25812:25825 Coq.PArith.Pnat Pos2Nat inj_xI thm
R25812:25825 Coq.PArith.Pnat Pos2Nat inj_xI thm
R25812:25825 Coq.PArith.Pnat Pos2Nat inj_xI thm
R25844:25857 Coq.PArith.Pnat Pos2Nat is_pos thm
R25844:25857 Coq.PArith.Pnat Pos2Nat is_pos thm
R25869:25882 Coq.Arith.PeanoNat Nat neq_0_lt_0 thm
R25869:25882 Coq.Arith.PeanoNat Nat neq_0_lt_0 thm
R25928:25938 Coq.Arith.PeanoNat Nat add_0_r thm
R25928:25938 Coq.Arith.PeanoNat Nat add_0_r thm
R25928:25938 Coq.Arith.PeanoNat Nat add_0_r thm
R25928:25938 Coq.Arith.PeanoNat Nat add_0_r thm
R25928:25938 Coq.Arith.PeanoNat Nat add_0_r thm
R25968:25981 Coq.Arith.PeanoNat Nat add_succ_r thm
R25984:25996 Coq.Arith.PeanoNat Nat succ_pred thm
R25968:25981 Coq.Arith.PeanoNat Nat add_succ_r thm
R25968:25981 Coq.Arith.PeanoNat Nat add_succ_r thm
R25984:25996 Coq.Arith.PeanoNat Nat succ_pred thm
R25984:25996 Coq.Arith.PeanoNat Nat succ_pred thm
R25984:25996 Coq.Arith.PeanoNat Nat succ_pred thm
R26018:26034 Coq.MSets.MSetRBT MakeRaw treeify_cont_spec thm
R26066:26069 Coq.Init.Datatypes <> true constr
R26018:26034 Coq.MSets.MSetRBT MakeRaw treeify_cont_spec thm
R26066:26069 Coq.Init.Datatypes <> true constr
R26088:26101 Coq.PArith.Pnat Pos2Nat inj_xO thm
R26088:26101 Coq.PArith.Pnat Pos2Nat inj_xO thm
R26088:26101 Coq.PArith.Pnat Pos2Nat inj_xO thm
R26120:26133 Coq.PArith.Pnat Pos2Nat is_pos thm
R26120:26133 Coq.PArith.Pnat Pos2Nat is_pos thm
R26145:26158 Coq.Arith.PeanoNat Nat neq_0_lt_0 thm
R26145:26158 Coq.Arith.PeanoNat Nat neq_0_lt_0 thm
R26180:26193 Coq.Arith.PeanoNat Nat add_succ_r thm
R26196:26208 Coq.Arith.PeanoNat Nat succ_pred thm
R26180:26193 Coq.Arith.PeanoNat Nat add_succ_r thm
R26180:26193 Coq.Arith.PeanoNat Nat add_succ_r thm
R26196:26208 Coq.Arith.PeanoNat Nat succ_pred thm
R26196:26208 Coq.Arith.PeanoNat Nat succ_pred thm
R26260:26270 Coq.Arith.PeanoNat Nat add_0_r thm
R26260:26270 Coq.Arith.PeanoNat Nat add_0_r thm
R26260:26270 Coq.Arith.PeanoNat Nat add_0_r thm
R26260:26270 Coq.Arith.PeanoNat Nat add_0_r thm
R26260:26270 Coq.Arith.PeanoNat Nat add_0_r thm
R26305:26318 Coq.Arith.PeanoNat Nat add_pred_l thm
R26305:26318 Coq.Arith.PeanoNat Nat add_pred_l thm
R26344:26360 Coq.MSets.MSetRBT MakeRaw treeify_zero_spec thm
R26370:26385 Coq.MSets.MSetRBT MakeRaw treeify_one_spec thm
R26344:26360 Coq.MSets.MSetRBT MakeRaw treeify_zero_spec thm
R26370:26385 Coq.MSets.MSetRBT MakeRaw treeify_one_spec thm
prf 26402:26417 MakeRaw plength_aux_spec
R26455:26457 Coq.Init.Logic <> ::type_scope:x_'='_x not
R26427:26436 Coq.PArith.BinPos Pos to_nat def
R26439:26449 Coq.MSets.MSetRBT MakeRaw plength_aux def
R26453:26453 Coq.MSets.MSetRBT <> p var
R26451:26451 Coq.MSets.MSetRBT <> l var
R26466:26468 Coq.Init.Peano <> ::nat_scope:x_'+'_x not
R26458:26463 Coq.Init.Datatypes <> length def
R26465:26465 Coq.MSets.MSetRBT <> l var
R26469:26478 Coq.PArith.BinPos Pos to_nat def
R26480:26480 Coq.MSets.MSetRBT <> p var
R26568:26583 Coq.PArith.Pnat Pos2Nat inj_succ thm
R26586:26599 Coq.Arith.PeanoNat Nat add_succ_r thm
R26568:26583 Coq.PArith.Pnat Pos2Nat inj_succ thm
R26568:26583 Coq.PArith.Pnat Pos2Nat inj_succ thm
R26586:26599 Coq.Arith.PeanoNat Nat add_succ_r thm
R26586:26599 Coq.Arith.PeanoNat Nat add_succ_r thm
prf 26614:26625 MakeRaw plength_spec
R26653:26655 Coq.Init.Logic <> ::type_scope:x_'='_x not
R26631:26640 Coq.PArith.BinPos Pos to_nat def
R26643:26649 Coq.MSets.MSetRBT MakeRaw plength def
R26651:26651 Coq.MSets.MSetRBT <> l var
R26656:26656 Coq.Init.Datatypes <> S constr
R26659:26664 Coq.Init.Datatypes <> length def
R26666:26666 Coq.MSets.MSetRBT <> l var
R26685:26691 Coq.MSets.MSetRBT MakeRaw plength def
R26702:26717 Coq.MSets.MSetRBT MakeRaw plength_aux_spec thm
R26702:26717 Coq.MSets.MSetRBT MakeRaw plength_aux_spec thm
R26702:26717 Coq.MSets.MSetRBT MakeRaw plength_aux_spec thm
R26726:26736 Coq.Arith.PeanoNat Nat add_1_r thm
R26726:26736 Coq.Arith.PeanoNat Nat add_1_r thm
prf 26751:26766 MakeRaw treeify_elements
R26792:26794 Coq.Init.Logic <> ::type_scope:x_'='_x not
R26772:26779 Coq.MSets.MSetRBT MakeRaw elements def
R26782:26788 Coq.MSets.MSetRBT MakeRaw treeify def
R26790:26790 Coq.MSets.MSetRBT <> l var
R26795:26795 Coq.MSets.MSetRBT <> l var
R26819:26834 Coq.MSets.MSetRBT MakeRaw treeify_aux_spec thm
R26848:26851 Coq.Init.Datatypes <> true constr
R26837:26843 Coq.MSets.MSetRBT MakeRaw plength def
R26819:26834 Coq.MSets.MSetRBT MakeRaw treeify_aux_spec thm
R26848:26851 Coq.Init.Datatypes <> true constr
R26837:26843 Coq.MSets.MSetRBT MakeRaw plength def
R26865:26871 Coq.MSets.MSetRBT MakeRaw treeify def
R26883:26893 Coq.MSets.MSetRBT MakeRaw treeify_aux def
R26956:26967 Coq.MSets.MSetRBT MakeRaw plength_spec thm
R26956:26967 Coq.MSets.MSetRBT MakeRaw plength_spec thm
R26956:26967 Coq.MSets.MSetRBT MakeRaw plength_spec thm
R26990:27001 Coq.MSets.MSetRBT MakeRaw plength_spec thm
R27004:27013 Coq.Lists.List <> app_length thm
R27019:27035 Coq.MSets.MSetRBT MakeRaw elements_cardinal thm
R26990:27001 Coq.MSets.MSetRBT MakeRaw plength_spec thm
R26990:27001 Coq.MSets.MSetRBT MakeRaw plength_spec thm
R27004:27013 Coq.Lists.List <> app_length thm
R27004:27013 Coq.Lists.List <> app_length thm
R27019:27035 Coq.MSets.MSetRBT MakeRaw elements_cardinal thm
R27019:27035 Coq.MSets.MSetRBT MakeRaw elements_cardinal thm
R27073:27081 Coq.Lists.List <> app_nil_r thm
R27073:27081 Coq.Lists.List <> app_nil_r thm
R27073:27081 Coq.Lists.List <> app_nil_r thm
R27124:27137 Coq.Arith.PeanoNat Nat add_succ_r thm
R27140:27151 Coq.Arith.PeanoNat Nat add_comm thm
R27124:27137 Coq.Arith.PeanoNat Nat add_succ_r thm
R27124:27137 Coq.Arith.PeanoNat Nat add_succ_r thm
R27140:27151 Coq.Arith.PeanoNat Nat add_comm thm
R27140:27151 Coq.Arith.PeanoNat Nat add_comm thm
R27163:27180 Coq.Arith.PeanoNat Nat succ_add_discr thm
R27163:27180 Coq.Arith.PeanoNat Nat succ_add_discr thm
prf 27195:27206 MakeRaw treeify_spec
R27231:27235 Coq.Init.Logic <> ::type_scope:x_'<->'_x not
R27214:27216 Coq.MSets.MSetRBT MakeRaw InT ind
R27221:27227 Coq.MSets.MSetRBT MakeRaw treeify def
R27229:27229 Coq.MSets.MSetRBT <> l var
R27218:27218 Coq.MSets.MSetRBT <> x var
R27236:27238 Coq.Lists.SetoidList <> InA ind
R27247:27247 Coq.MSets.MSetRBT <> l var
R27245:27245 Coq.MSets.MSetRBT <> x var
R27240:27243 Coq.MSets.MSetRBT X eq defax
R27281:27294 Coq.MSets.MSetRBT MakeRaw elements_spec1 thm
R27297:27312 Coq.MSets.MSetRBT MakeRaw treeify_elements thm
R27281:27294 Coq.MSets.MSetRBT MakeRaw elements_spec1 thm
R27281:27294 Coq.MSets.MSetRBT MakeRaw elements_spec1 thm
R27297:27312 Coq.MSets.MSetRBT MakeRaw treeify_elements thm
R27297:27312 Coq.MSets.MSetRBT MakeRaw treeify_elements thm
prf 27327:27336 MakeRaw treeify_ok
R27353:27356 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R27357:27358 Coq.MSets.MSetRBT MakeRaw Ok class
R27361:27367 Coq.MSets.MSetRBT MakeRaw treeify def
R27369:27369 Coq.MSets.MSetRBT <> l var
R27342:27345 Coq.Sorting.Sorted <> sort syndef
R27352:27352 Coq.MSets.MSetRBT <> l var
R27347:27350 Coq.MSets.MSetRBT X lt defax
R27395:27410 Coq.MSets.MSetRBT MakeRaw elements_sort_ok thm
R27395:27410 Coq.MSets.MSetRBT MakeRaw elements_sort_ok thm
R27421:27436 Coq.MSets.MSetRBT MakeRaw treeify_elements thm
R27421:27436 Coq.MSets.MSetRBT MakeRaw treeify_elements thm
R27421:27436 Coq.MSets.MSetRBT MakeRaw treeify_elements thm
prf 27476:27485 MakeRaw filter_app
R27497:27500 Coq.Init.Datatypes <> list ind
R27502:27502 Coq.MSets.MSetRBT <> A var
R27531:27533 Coq.Init.Logic <> ::type_scope:x_'='_x not
R27508:27518 Coq.Lists.List <> filter def
R27524:27527 Coq.Init.Datatypes <> ::list_scope:x_'++'_x not
R27523:27523 Coq.MSets.MSetRBT <> l var
R27528:27529 Coq.MSets.MSetRBT <> l' var
R27520:27520 Coq.MSets.MSetRBT <> f var
R27549:27552 Coq.Init.Datatypes <> ::list_scope:x_'++'_x not
R27534:27544 Coq.Lists.List <> filter def
R27548:27548 Coq.MSets.MSetRBT <> l var
R27546:27546 Coq.MSets.MSetRBT <> f var
R27553:27563 Coq.Lists.List <> filter def
R27567:27568 Coq.MSets.MSetRBT <> l' var
R27565:27565 Coq.MSets.MSetRBT <> f var
prf 27673:27691 MakeRaw filter_aux_elements
R27722:27724 Coq.Init.Logic <> ::type_scope:x_'='_x not
R27704:27713 Coq.MSets.MSetRBT MakeRaw filter_aux def
R27719:27721 Coq.MSets.MSetRBT <> acc var
R27717:27717 Coq.MSets.MSetRBT <> s var
R27715:27715 Coq.MSets.MSetRBT <> f var
R27751:27754 Coq.Init.Datatypes <> ::list_scope:x_'++'_x not
R27725:27735 Coq.Lists.List <> filter def
R27740:27747 Coq.MSets.MSetRBT MakeRaw elements def
R27749:27749 Coq.MSets.MSetRBT <> s var
R27737:27737 Coq.MSets.MSetRBT <> f var
R27755:27757 Coq.MSets.MSetRBT <> acc var
R27847:27859 Coq.MSets.MSetRBT MakeRaw elements_node thm
R27862:27871 Coq.MSets.MSetRBT MakeRaw filter_app thm
R27847:27859 Coq.MSets.MSetRBT MakeRaw elements_node thm
R27847:27859 Coq.MSets.MSetRBT MakeRaw elements_node thm
R27862:27871 Coq.MSets.MSetRBT MakeRaw filter_app thm
R27862:27871 Coq.MSets.MSetRBT MakeRaw filter_app thm
R27920:27926 Coq.Lists.List <> app_ass syndef
R27920:27926 Coq.Lists.List <> app_ass syndef
R27920:27926 Coq.Lists.List <> app_ass syndef
R27920:27926 Coq.Lists.List <> app_ass syndef
R27920:27926 Coq.Lists.List <> app_ass syndef
prf 27941:27955 MakeRaw filter_elements
R27985:27987 Coq.Init.Logic <> ::type_scope:x_'='_x not
R27964:27971 Coq.MSets.MSetRBT MakeRaw elements def
R27974:27979 Coq.MSets.MSetRBT MakeRaw filter def
R27983:27983 Coq.MSets.MSetRBT <> s var
R27981:27981 Coq.MSets.MSetRBT <> f var
R27988:27998 Coq.Lists.List <> filter def
R28003:28010 Coq.MSets.MSetRBT MakeRaw elements def
R28012:28012 Coq.MSets.MSetRBT <> s var
R28000:28000 Coq.MSets.MSetRBT <> f var
R28031:28036 Coq.MSets.MSetRBT MakeRaw filter def
R28052:28067 Coq.MSets.MSetRBT MakeRaw treeify_elements thm
R28070:28088 Coq.MSets.MSetRBT MakeRaw filter_aux_elements thm
R28091:28099 Coq.Lists.List <> app_nil_r thm
R28052:28067 Coq.MSets.MSetRBT MakeRaw treeify_elements thm
R28052:28067 Coq.MSets.MSetRBT MakeRaw treeify_elements thm
R28070:28088 Coq.MSets.MSetRBT MakeRaw filter_aux_elements thm
R28070:28088 Coq.MSets.MSetRBT MakeRaw filter_aux_elements thm
R28091:28099 Coq.Lists.List <> app_nil_r thm
R28091:28099 Coq.Lists.List <> app_nil_r thm
prf 28114:28124 MakeRaw filter_spec
R28161:28166 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R28211:28211 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R28185:28189 Coq.Init.Logic <> ::type_scope:x_'<->'_x not
R28167:28169 Coq.MSets.MSetRBT MakeRaw InT ind
R28174:28179 Coq.MSets.MSetRBT MakeRaw filter def
R28183:28183 Coq.MSets.MSetRBT <> s var
R28181:28181 Coq.MSets.MSetRBT <> f var
R28171:28171 Coq.MSets.MSetRBT <> x var
R28197:28200 Coq.Init.Logic <> ::type_scope:x_'/\'_x not
R28190:28192 Coq.MSets.MSetRBT MakeRaw InT ind
R28196:28196 Coq.MSets.MSetRBT <> s var
R28194:28194 Coq.MSets.MSetRBT <> x var
R28204:28206 Coq.Init.Logic <> ::type_scope:x_'='_x not
R28201:28201 Coq.MSets.MSetRBT <> f var
R28203:28203 Coq.MSets.MSetRBT <> x var
R28207:28210 Coq.Init.Datatypes <> true constr
R28135:28140 Coq.Classes.Morphisms <> Proper class
R28160:28160 Coq.MSets.MSetRBT <> f var
R28147:28149 Coq.Classes.Morphisms ProperNotations ::signature_scope:x_'==>'_x not
R28143:28146 Coq.MSets.MSetRBT X eq defax
R28150:28157 Coq.Init.Logic <> eq ind
R28245:28258 Coq.MSets.MSetRBT MakeRaw elements_spec1 thm
R28261:28275 Coq.MSets.MSetRBT MakeRaw filter_elements thm
R28278:28287 Coq.Lists.SetoidList <> filter_InA thm
R28290:28303 Coq.MSets.MSetRBT MakeRaw elements_spec1 thm
R28245:28258 Coq.MSets.MSetRBT MakeRaw elements_spec1 thm
R28245:28258 Coq.MSets.MSetRBT MakeRaw elements_spec1 thm
R28261:28275 Coq.MSets.MSetRBT MakeRaw filter_elements thm
R28261:28275 Coq.MSets.MSetRBT MakeRaw filter_elements thm
R28278:28287 Coq.Lists.SetoidList <> filter_InA thm
R28278:28287 Coq.Lists.SetoidList <> filter_InA thm
R28278:28287 Coq.Lists.SetoidList <> filter_InA thm
R28290:28303 Coq.MSets.MSetRBT MakeRaw elements_spec1 thm
R28290:28303 Coq.MSets.MSetRBT MakeRaw elements_spec1 thm
inst 28336:28344 MakeRaw filter_ok
R28352:28353 Coq.MSets.MSetRBT MakeRaw Ok class
R28355:28355 Coq.MSets.MSetRBT <> s var
R28360:28361 Coq.MSets.MSetRBT MakeRaw Ok class
R28364:28369 Coq.MSets.MSetRBT MakeRaw filter def
R28373:28373 Coq.MSets.MSetRBT <> s var
R28371:28371 Coq.MSets.MSetRBT <> f var
R28391:28406 Coq.MSets.MSetRBT MakeRaw elements_sort_ok thm
R28391:28406 Coq.MSets.MSetRBT MakeRaw elements_sort_ok thm
R28418:28432 Coq.MSets.MSetRBT MakeRaw filter_elements thm
R28418:28432 Coq.MSets.MSetRBT MakeRaw filter_elements thm
R28418:28432 Coq.MSets.MSetRBT MakeRaw filter_elements thm
R28459:28462 Coq.MSets.MSetRBT X eq defax
R28442:28452 Coq.Lists.SetoidList <> filter_sort thm
R28459:28462 Coq.MSets.MSetRBT X eq defax
R28442:28452 Coq.Lists.SetoidList <> filter_sort thm
prf 28507:28524 MakeRaw partition_aux_spec
R28570:28574 Coq.Init.Logic <> ::type_scope:x_'='_x not
R28543:28555 Coq.MSets.MSetRBT MakeRaw partition_aux def
R28566:28569 Coq.MSets.MSetRBT <> acc2 var
R28561:28564 Coq.MSets.MSetRBT <> acc1 var
R28559:28559 Coq.MSets.MSetRBT <> s var
R28557:28557 Coq.MSets.MSetRBT <> f var
R28575:28575 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R28595:28596 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R28636:28636 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R28576:28585 Coq.MSets.MSetRBT MakeRaw filter_aux def
R28591:28594 Coq.MSets.MSetRBT <> acc1 var
R28589:28589 Coq.MSets.MSetRBT <> s var
R28587:28587 Coq.MSets.MSetRBT <> f var
R28597:28606 Coq.MSets.MSetRBT MakeRaw filter_aux def
R28632:28635 Coq.MSets.MSetRBT <> acc2 var
R28630:28630 Coq.MSets.MSetRBT <> s var
R28618:28621 Coq.Init.Datatypes <> negb def
R28624:28624 Coq.MSets.MSetRBT <> f var
R28626:28626 Coq.MSets.MSetRBT <> x var
prf 28800:28813 MakeRaw partition_spec
R28835:28837 Coq.Init.Logic <> ::type_scope:x_'='_x not
R28822:28830 Coq.MSets.MSetRBT MakeRaw partition def
R28834:28834 Coq.MSets.MSetRBT <> s var
R28832:28832 Coq.MSets.MSetRBT <> f var
R28838:28838 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R28849:28850 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R28881:28881 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R28839:28844 Coq.MSets.MSetRBT MakeRaw filter def
R28848:28848 Coq.MSets.MSetRBT <> s var
R28846:28846 Coq.MSets.MSetRBT <> f var
R28851:28856 Coq.MSets.MSetRBT MakeRaw filter def
R28880:28880 Coq.MSets.MSetRBT <> s var
R28868:28871 Coq.Init.Datatypes <> negb def
R28874:28874 Coq.MSets.MSetRBT <> f var
R28876:28876 Coq.MSets.MSetRBT <> x var
R28899:28907 Coq.MSets.MSetRBT MakeRaw partition def
R28910:28915 Coq.MSets.MSetRBT MakeRaw filter def
R28930:28947 Coq.MSets.MSetRBT MakeRaw partition_aux_spec thm
R28930:28947 Coq.MSets.MSetRBT MakeRaw partition_aux_spec thm
R28930:28947 Coq.MSets.MSetRBT MakeRaw partition_aux_spec thm
prf 28962:28976 MakeRaw partition_spec1
R29011:29015 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R29016:29020 Coq.MSets.MSetRBT MakeRaw Equal def
R29045:29050 Coq.MSets.MSetRBT MakeRaw filter def
R29054:29054 Coq.MSets.MSetRBT <> s var
R29052:29052 Coq.MSets.MSetRBT <> f var
R29023:29025 Coq.Init.Datatypes <> fst def
R29028:29036 Coq.MSets.MSetRBT MakeRaw partition def
R29040:29040 Coq.MSets.MSetRBT <> s var
R29038:29038 Coq.MSets.MSetRBT <> f var
R28985:28990 Coq.Classes.Morphisms <> Proper class
R29010:29010 Coq.MSets.MSetRBT <> f var
R28997:28999 Coq.Classes.Morphisms ProperNotations ::signature_scope:x_'==>'_x not
R28993:28996 Coq.MSets.MSetRBT X eq defax
R29000:29007 Coq.Init.Logic <> eq ind
R29077:29090 Coq.MSets.MSetRBT MakeRaw partition_spec thm
R29077:29090 Coq.MSets.MSetRBT MakeRaw partition_spec thm
R29077:29090 Coq.MSets.MSetRBT MakeRaw partition_spec thm
prf 29105:29119 MakeRaw partition_spec2
R29154:29158 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R29159:29163 Coq.MSets.MSetRBT MakeRaw Equal def
R29188:29193 Coq.MSets.MSetRBT MakeRaw filter def
R29217:29217 Coq.MSets.MSetRBT <> s var
R29205:29208 Coq.Init.Datatypes <> negb def
R29211:29211 Coq.MSets.MSetRBT <> f var
R29213:29213 Coq.MSets.MSetRBT <> x var
R29166:29168 Coq.Init.Datatypes <> snd def
R29171:29179 Coq.MSets.MSetRBT MakeRaw partition def
R29183:29183 Coq.MSets.MSetRBT <> s var
R29181:29181 Coq.MSets.MSetRBT <> f var
R29128:29133 Coq.Classes.Morphisms <> Proper class
R29153:29153 Coq.MSets.MSetRBT <> f var
R29140:29142 Coq.Classes.Morphisms ProperNotations ::signature_scope:x_'==>'_x not
R29136:29139 Coq.MSets.MSetRBT X eq defax
R29143:29150 Coq.Init.Logic <> eq ind
R29240:29253 Coq.MSets.MSetRBT MakeRaw partition_spec thm
R29240:29253 Coq.MSets.MSetRBT MakeRaw partition_spec thm
R29240:29253 Coq.MSets.MSetRBT MakeRaw partition_spec thm
inst 29271:29283 MakeRaw partition_ok1
R29291:29292 Coq.MSets.MSetRBT MakeRaw Ok class
R29294:29294 Coq.MSets.MSetRBT <> s var
R29299:29300 Coq.MSets.MSetRBT MakeRaw Ok class
R29303:29305 Coq.Init.Datatypes <> fst def
R29308:29316 Coq.MSets.MSetRBT MakeRaw partition def
R29320:29320 Coq.MSets.MSetRBT <> s var
R29318:29318 Coq.MSets.MSetRBT <> f var
R29340:29353 Coq.MSets.MSetRBT MakeRaw partition_spec thm
R29366:29374 Coq.MSets.MSetRBT MakeRaw filter_ok inst
R29340:29353 Coq.MSets.MSetRBT MakeRaw partition_spec thm
R29340:29353 Coq.MSets.MSetRBT MakeRaw partition_spec thm
R29366:29374 Coq.MSets.MSetRBT MakeRaw filter_ok inst
inst 29392:29404 MakeRaw partition_ok2
R29412:29413 Coq.MSets.MSetRBT MakeRaw Ok class
R29415:29415 Coq.MSets.MSetRBT <> s var
R29420:29421 Coq.MSets.MSetRBT MakeRaw Ok class
R29424:29426 Coq.Init.Datatypes <> snd def
R29429:29437 Coq.MSets.MSetRBT MakeRaw partition def
R29441:29441 Coq.MSets.MSetRBT <> s var
R29439:29439 Coq.MSets.MSetRBT <> f var
R29461:29474 Coq.MSets.MSetRBT MakeRaw partition_spec thm
R29487:29495 Coq.MSets.MSetRBT MakeRaw filter_ok inst
R29461:29474 Coq.MSets.MSetRBT MakeRaw partition_spec thm
R29461:29474 Coq.MSets.MSetRBT MakeRaw partition_spec thm
R29487:29495 Coq.MSets.MSetRBT MakeRaw filter_ok inst
R29595:29605 Coq.Lists.SetoidList <> InA_app_iff thm
R29609:29616 Coq.Lists.SetoidList <> InA_cons thm
R29620:29626 Coq.Lists.SetoidList <> InA_nil thm
R29630:29636 Coq.Lists.SetoidList <> InA_rev thm
rec 29661:29663 MakeRaw INV
proj 29688:29696 MakeRaw l1_sorted
proj 29721:29729 MakeRaw l2_sorted
proj 29754:29763 MakeRaw acc_sorted
proj 29783:29791 MakeRaw l1_lt_acc
proj 29845:29853 MakeRaw l2_lt_acc
R29700:29703 Coq.Sorting.Sorted <> sort syndef
R29711:29713 Coq.Lists.List <> rev def
R29715:29716 Coq.MSets.MSetRBT <> l1 var
R29705:29708 Coq.MSets.MSetRBT X lt defax
R29733:29736 Coq.Sorting.Sorted <> sort syndef
R29744:29746 Coq.Lists.List <> rev def
R29748:29749 Coq.MSets.MSetRBT <> l2 var
R29738:29741 Coq.MSets.MSetRBT X lt defax
R29767:29770 Coq.Sorting.Sorted <> sort syndef
R29777:29779 Coq.MSets.MSetRBT <> acc var
R29772:29775 Coq.MSets.MSetRBT X lt defax
R29812:29815 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R29830:29833 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R29834:29837 Coq.MSets.MSetRBT X lt defax
R29841:29841 Coq.MSets.MSetRBT <> y var
R29839:29839 Coq.MSets.MSetRBT <> x var
R29816:29818 Coq.Lists.SetoidList <> InA ind
R29827:29829 Coq.MSets.MSetRBT <> acc var
R29825:29825 Coq.MSets.MSetRBT <> y var
R29820:29823 Coq.MSets.MSetRBT X eq defax
R29799:29801 Coq.Lists.SetoidList <> InA ind
R29810:29811 Coq.MSets.MSetRBT <> l1 var
R29808:29808 Coq.MSets.MSetRBT <> x var
R29803:29806 Coq.MSets.MSetRBT X eq defax
R29874:29877 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R29892:29895 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R29896:29899 Coq.MSets.MSetRBT X lt defax
R29903:29903 Coq.MSets.MSetRBT <> y var
R29901:29901 Coq.MSets.MSetRBT <> x var
R29878:29880 Coq.Lists.SetoidList <> InA ind
R29889:29891 Coq.MSets.MSetRBT <> acc var
R29887:29887 Coq.MSets.MSetRBT <> y var
R29882:29885 Coq.MSets.MSetRBT X eq defax
R29861:29863 Coq.Lists.SetoidList <> InA ind
R29872:29873 Coq.MSets.MSetRBT <> l2 var
R29870:29870 Coq.MSets.MSetRBT <> x var
R29865:29868 Coq.MSets.MSetRBT X eq defax
prf 29965:29972 MakeRaw INV_init
R29982:29983 Coq.MSets.MSetRBT MakeRaw Ok class
R29985:29986 Coq.MSets.MSetRBT <> s1 var
R29989:29990 Coq.MSets.MSetRBT MakeRaw Ok class
R29992:29993 Coq.MSets.MSetRBT <> s2 var
R29999:30001 Coq.MSets.MSetRBT MakeRaw INV rec
R30039:30041 Coq.Init.Datatypes <> nil constr
R30022:30033 Coq.MSets.MSetRBT MakeRaw rev_elements def
R30035:30036 Coq.MSets.MSetRBT <> s2 var
R30004:30015 Coq.MSets.MSetRBT MakeRaw rev_elements def
R30017:30018 Coq.MSets.MSetRBT <> s1 var
R30061:30076 Coq.MSets.MSetRBT MakeRaw rev_elements_rev thm
R30061:30076 Coq.MSets.MSetRBT MakeRaw rev_elements_rev thm
R30061:30076 Coq.MSets.MSetRBT MakeRaw rev_elements_rev thm
R30061:30076 Coq.MSets.MSetRBT MakeRaw rev_elements_rev thm
R30061:30076 Coq.MSets.MSetRBT MakeRaw rev_elements_rev thm
R30096:30109 Coq.Lists.List <> rev_involutive thm
R30096:30109 Coq.Lists.List <> rev_involutive thm
R30096:30109 Coq.Lists.List <> rev_involutive thm
R30096:30109 Coq.Lists.List <> rev_involutive thm
R30096:30109 Coq.Lists.List <> rev_involutive thm
R30096:30109 Coq.Lists.List <> rev_involutive thm
R30096:30109 Coq.Lists.List <> rev_involutive thm
R30096:30109 Coq.Lists.List <> rev_involutive thm
R30096:30109 Coq.Lists.List <> rev_involutive thm
R30096:30109 Coq.Lists.List <> rev_involutive thm
R30096:30109 Coq.Lists.List <> rev_involutive thm
R30096:30109 Coq.Lists.List <> rev_involutive thm
R30096:30109 Coq.Lists.List <> rev_involutive thm
prf 30147:30153 MakeRaw INV_sym
R30180:30183 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R30184:30186 Coq.MSets.MSetRBT MakeRaw INV rec
R30194:30196 Coq.MSets.MSetRBT <> acc var
R30191:30192 Coq.MSets.MSetRBT <> l1 var
R30188:30189 Coq.MSets.MSetRBT <> l2 var
R30167:30169 Coq.MSets.MSetRBT MakeRaw INV rec
R30177:30179 Coq.MSets.MSetRBT <> acc var
R30174:30175 Coq.MSets.MSetRBT <> l2 var
R30171:30172 Coq.MSets.MSetRBT <> l1 var
prf 30242:30249 MakeRaw INV_drop
R30289:30292 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R30293:30295 Coq.MSets.MSetRBT MakeRaw INV rec
R30303:30305 Coq.MSets.MSetRBT <> acc var
R30300:30301 Coq.MSets.MSetRBT <> l2 var
R30297:30298 Coq.MSets.MSetRBT <> l1 var
R30268:30270 Coq.MSets.MSetRBT MakeRaw INV rec
R30286:30288 Coq.MSets.MSetRBT <> acc var
R30283:30284 Coq.MSets.MSetRBT <> l2 var
R30275:30278 Coq.Init.Datatypes <> ::list_scope:x_'::'_x not
R30273:30274 Coq.MSets.MSetRBT <> x1 var
R30279:30280 Coq.MSets.MSetRBT <> l1 var
R30370:30383 Coq.MSets.MSetRBT MakeRaw sorted_app_inv thm
R30370:30383 Coq.MSets.MSetRBT MakeRaw sorted_app_inv thm
prf 30442:30447 MakeRaw INV_eq
R30498:30501 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R30512:30517 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R30518:30520 Coq.MSets.MSetRBT MakeRaw INV rec
R30531:30534 Coq.Init.Datatypes <> ::list_scope:x_'::'_x not
R30529:30530 Coq.MSets.MSetRBT <> x1 var
R30535:30537 Coq.MSets.MSetRBT <> acc var
R30525:30526 Coq.MSets.MSetRBT <> l2 var
R30522:30523 Coq.MSets.MSetRBT <> l1 var
R30502:30505 Coq.MSets.MSetRBT X eq defax
R30510:30511 Coq.MSets.MSetRBT <> x2 var
R30507:30508 Coq.MSets.MSetRBT <> x1 var
R30469:30471 Coq.MSets.MSetRBT MakeRaw INV rec
R30495:30497 Coq.MSets.MSetRBT <> acc var
R30487:30490 Coq.Init.Datatypes <> ::list_scope:x_'::'_x not
R30485:30486 Coq.MSets.MSetRBT <> x2 var
R30491:30492 Coq.MSets.MSetRBT <> l2 var
R30476:30479 Coq.Init.Datatypes <> ::list_scope:x_'::'_x not
R30474:30475 Coq.MSets.MSetRBT <> x1 var
R30480:30481 Coq.MSets.MSetRBT <> l1 var
R30595:30608 Coq.MSets.MSetRBT MakeRaw sorted_app_inv thm
R30595:30608 Coq.MSets.MSetRBT MakeRaw sorted_app_inv thm
R30653:30666 Coq.MSets.MSetRBT MakeRaw sorted_app_inv thm
R30653:30666 Coq.MSets.MSetRBT MakeRaw sorted_app_inv thm
R30756:30759 Coq.MSets.MSetRBT X eq defax
R30742:30749 Coq.Lists.SetoidList <> InA_InfA thm
R30756:30759 Coq.MSets.MSetRBT X eq defax
R30742:30749 Coq.Lists.SetoidList <> InA_InfA thm
prf 30955:30960 MakeRaw INV_lt
R31011:31014 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R31025:31030 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R31031:31033 Coq.MSets.MSetRBT MakeRaw INV rec
R31052:31055 Coq.Init.Datatypes <> ::list_scope:x_'::'_x not
R31050:31051 Coq.MSets.MSetRBT <> x2 var
R31056:31058 Coq.MSets.MSetRBT <> acc var
R31046:31047 Coq.MSets.MSetRBT <> l2 var
R31038:31041 Coq.Init.Datatypes <> ::list_scope:x_'::'_x not
R31036:31037 Coq.MSets.MSetRBT <> x1 var
R31042:31043 Coq.MSets.MSetRBT <> l1 var
R31015:31018 Coq.MSets.MSetRBT X lt defax
R31023:31024 Coq.MSets.MSetRBT <> x2 var
R31020:31021 Coq.MSets.MSetRBT <> x1 var
R30982:30984 Coq.MSets.MSetRBT MakeRaw INV rec
R31008:31010 Coq.MSets.MSetRBT <> acc var
R31000:31003 Coq.Init.Datatypes <> ::list_scope:x_'::'_x not
R30998:30999 Coq.MSets.MSetRBT <> x2 var
R31004:31005 Coq.MSets.MSetRBT <> l2 var
R30989:30992 Coq.Init.Datatypes <> ::list_scope:x_'::'_x not
R30987:30988 Coq.MSets.MSetRBT <> x1 var
R30993:30994 Coq.MSets.MSetRBT <> l1 var
R31116:31129 Coq.MSets.MSetRBT MakeRaw sorted_app_inv thm
R31116:31129 Coq.MSets.MSetRBT MakeRaw sorted_app_inv thm
R31174:31187 Coq.MSets.MSetRBT MakeRaw sorted_app_inv thm
R31174:31187 Coq.MSets.MSetRBT MakeRaw sorted_app_inv thm
R31277:31280 Coq.MSets.MSetRBT X eq defax
R31263:31270 Coq.Lists.SetoidList <> InA_InfA thm
R31277:31280 Coq.MSets.MSetRBT X eq defax
R31263:31270 Coq.Lists.SetoidList <> InA_InfA thm
prf 31545:31551 MakeRaw INV_rev
R31579:31582 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R31583:31588 Coq.Sorting.Sorted <> Sorted ind
R31596:31605 Coq.Lists.List <> rev_append def
R31610:31612 Coq.MSets.MSetRBT <> acc var
R31607:31608 Coq.MSets.MSetRBT <> l1 var
R31590:31593 Coq.MSets.MSetRBT X lt defax
R31566:31568 Coq.MSets.MSetRBT MakeRaw INV rec
R31576:31578 Coq.MSets.MSetRBT <> acc var
R31573:31574 Coq.MSets.MSetRBT <> l2 var
R31570:31571 Coq.MSets.MSetRBT <> l1 var
R31640:31653 Coq.Lists.List <> rev_append_rev thm
R31640:31653 Coq.Lists.List <> rev_append_rev thm
R31640:31653 Coq.Lists.List <> rev_append_rev thm
R31678:31681 Coq.MSets.MSetRBT X eq defax
R31663:31671 Coq.Lists.SetoidList <> SortA_app thm
R31678:31681 Coq.MSets.MSetRBT X eq defax
R31663:31671 Coq.Lists.SetoidList <> SortA_app thm
R31724:31732 Coq.MSets.MSetRBT MakeRaw l1_lt_acc proj
R31724:31732 Coq.MSets.MSetRBT MakeRaw l1_lt_acc proj
prf 31771:31783 MakeRaw union_list_ok
R31811:31814 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R31815:31818 Coq.Sorting.Sorted <> sort syndef
R31826:31835 Coq.MSets.MSetRBT MakeRaw union_list def
R31843:31845 Coq.MSets.MSetRBT <> acc var
R31840:31841 Coq.MSets.MSetRBT <> l2 var
R31837:31838 Coq.MSets.MSetRBT <> l1 var
R31820:31823 Coq.MSets.MSetRBT X lt defax
R31798:31800 Coq.MSets.MSetRBT MakeRaw INV rec
R31808:31810 Coq.MSets.MSetRBT <> acc var
R31805:31806 Coq.MSets.MSetRBT <> l2 var
R31802:31803 Coq.MSets.MSetRBT <> l1 var
R31975:31981 Coq.MSets.MSetRBT MakeRaw INV_rev thm
R31984:31990 Coq.MSets.MSetRBT MakeRaw INV_sym thm
R31975:31981 Coq.MSets.MSetRBT MakeRaw INV_rev thm
R31984:31990 Coq.MSets.MSetRBT MakeRaw INV_sym thm
R32010:32016 Coq.MSets.MSetRBT MakeRaw INV_rev thm
R32010:32016 Coq.MSets.MSetRBT MakeRaw INV_rev thm
R32041:32054 Coq.MSets.MSetRBT X compare_spec prfax
R32041:32054 Coq.MSets.MSetRBT X compare_spec prfax
R32089:32094 Coq.MSets.MSetRBT MakeRaw INV_eq thm
R32089:32094 Coq.MSets.MSetRBT MakeRaw INV_eq thm
R32123:32124 Coq.Init.Datatypes <> ::list_scope:x_'::'_x not
R32123:32124 Coq.Init.Datatypes <> ::list_scope:x_'::'_x not
R32139:32144 Coq.MSets.MSetRBT MakeRaw INV_lt thm
R32139:32144 Coq.MSets.MSetRBT MakeRaw INV_lt thm
R32177:32183 Coq.MSets.MSetRBT MakeRaw INV_sym thm
R32186:32191 Coq.MSets.MSetRBT MakeRaw INV_lt thm
R32177:32183 Coq.MSets.MSetRBT MakeRaw INV_sym thm
R32186:32191 Coq.MSets.MSetRBT MakeRaw INV_lt thm
R32211:32217 Coq.MSets.MSetRBT MakeRaw INV_sym thm
R32211:32217 Coq.MSets.MSetRBT MakeRaw INV_sym thm
inst 32235:32249 MakeRaw linear_union_ok
R32259:32260 Coq.MSets.MSetRBT MakeRaw Ok class
R32262:32263 Coq.MSets.MSetRBT <> s1 var
R32266:32267 Coq.MSets.MSetRBT MakeRaw Ok class
R32269:32270 Coq.MSets.MSetRBT <> s2 var
R32276:32277 Coq.MSets.MSetRBT MakeRaw Ok class
R32280:32291 Coq.MSets.MSetRBT MakeRaw linear_union def
R32296:32297 Coq.MSets.MSetRBT <> s2 var
R32293:32294 Coq.MSets.MSetRBT <> s1 var
R32316:32327 Coq.MSets.MSetRBT MakeRaw linear_union def
R32340:32349 Coq.MSets.MSetRBT MakeRaw treeify_ok thm
R32352:32364 Coq.MSets.MSetRBT MakeRaw union_list_ok thm
R32367:32374 Coq.MSets.MSetRBT MakeRaw INV_init thm
R32340:32349 Coq.MSets.MSetRBT MakeRaw treeify_ok thm
R32352:32364 Coq.MSets.MSetRBT MakeRaw union_list_ok thm
R32367:32374 Coq.MSets.MSetRBT MakeRaw INV_init thm
inst 32392:32402 MakeRaw fold_add_ok
R32412:32413 Coq.MSets.MSetRBT MakeRaw Ok class
R32415:32416 Coq.MSets.MSetRBT <> s1 var
R32419:32420 Coq.MSets.MSetRBT MakeRaw Ok class
R32422:32423 Coq.MSets.MSetRBT <> s2 var
R32429:32430 Coq.MSets.MSetRBT MakeRaw Ok class
R32433:32436 Coq.MSets.MSetRBT MakeRaw fold def
R32445:32446 Coq.MSets.MSetRBT <> s2 var
R32442:32443 Coq.MSets.MSetRBT <> s1 var
R32438:32440 Coq.MSets.MSetRBT MakeRaw add def
R32466:32474 Coq.MSets.MSetRBT MakeRaw fold_spec thm
R32480:32498 Coq.Lists.List <> fold_left_rev_right thm
R32466:32474 Coq.MSets.MSetRBT MakeRaw fold_spec thm
R32466:32474 Coq.MSets.MSetRBT MakeRaw fold_spec thm
R32480:32498 Coq.Lists.List <> fold_left_rev_right thm
R32480:32498 Coq.Lists.List <> fold_left_rev_right thm
R32509:32511 Coq.MSets.MSetRBT MakeRaw elt def
R32531:32533 Coq.Lists.List <> rev def
R32536:32543 Coq.MSets.MSetRBT MakeRaw elements def
R32565:32568 Coq.Program.Basics <> flip def
R32531:32533 Coq.Lists.List <> rev def
R32536:32543 Coq.MSets.MSetRBT MakeRaw elements def
inst 32600:32607 MakeRaw union_ok
R32617:32618 Coq.MSets.MSetRBT MakeRaw Ok class
R32620:32621 Coq.MSets.MSetRBT <> s1 var
R32624:32625 Coq.MSets.MSetRBT MakeRaw Ok class
R32627:32628 Coq.MSets.MSetRBT <> s2 var
R32633:32634 Coq.MSets.MSetRBT MakeRaw Ok class
R32637:32641 Coq.MSets.MSetRBT MakeRaw union def
R32646:32647 Coq.MSets.MSetRBT <> s2 var
R32643:32644 Coq.MSets.MSetRBT <> s1 var
R32666:32670 Coq.MSets.MSetRBT MakeRaw union def
R32682:32695 Coq.MSets.MSetRBT MakeRaw compare_height def
prf 32719:32733 MakeRaw union_list_spec
R32783:32789 Coq.Init.Logic <> ::type_scope:x_'<->'_x not
R32750:32752 Coq.Lists.SetoidList <> InA ind
R32762:32771 Coq.MSets.MSetRBT MakeRaw union_list def
R32779:32781 Coq.MSets.MSetRBT <> acc var
R32776:32777 Coq.MSets.MSetRBT <> l2 var
R32773:32774 Coq.MSets.MSetRBT <> l1 var
R32759:32759 Coq.MSets.MSetRBT <> x var
R32754:32757 Coq.MSets.MSetRBT X eq defax
R32803:32806 Coq.Init.Logic <> ::type_scope:x_'\/'_x not
R32790:32792 Coq.Lists.SetoidList <> InA ind
R32801:32802 Coq.MSets.MSetRBT <> l1 var
R32799:32799 Coq.MSets.MSetRBT <> x var
R32794:32797 Coq.MSets.MSetRBT X eq defax
R32820:32823 Coq.Init.Logic <> ::type_scope:x_'\/'_x not
R32807:32809 Coq.Lists.SetoidList <> InA ind
R32818:32819 Coq.MSets.MSetRBT <> l2 var
R32816:32816 Coq.MSets.MSetRBT <> x var
R32811:32814 Coq.MSets.MSetRBT X eq defax
R32824:32826 Coq.Lists.SetoidList <> InA ind
R32835:32837 Coq.MSets.MSetRBT <> acc var
R32833:32833 Coq.MSets.MSetRBT <> x var
R32828:32831 Coq.MSets.MSetRBT X eq defax
R32927:32940 Coq.Lists.List <> rev_append_rev thm
R32927:32940 Coq.Lists.List <> rev_append_rev thm
R32927:32940 Coq.Lists.List <> rev_append_rev thm
R33020:33033 Coq.Lists.List <> rev_append_rev thm
R33020:33033 Coq.Lists.List <> rev_append_rev thm
R33020:33033 Coq.Lists.List <> rev_append_rev thm
R33058:33071 Coq.MSets.MSetRBT X compare_spec prfax
R33058:33071 Coq.MSets.MSetRBT X compare_spec prfax
R33104:33111 Coq.Lists.SetoidList <> InA_cons thm
R33104:33111 Coq.Lists.SetoidList <> InA_cons thm
R33104:33111 Coq.Lists.SetoidList <> InA_cons thm
R33104:33111 Coq.Lists.SetoidList <> InA_cons thm
R33104:33111 Coq.Lists.SetoidList <> InA_cons thm
R33104:33111 Coq.Lists.SetoidList <> InA_cons thm
R33147:33148 Coq.Init.Datatypes <> ::list_scope:x_'::'_x not
R33157:33164 Coq.Lists.SetoidList <> InA_cons thm
R33147:33148 Coq.Init.Datatypes <> ::list_scope:x_'::'_x not
R33147:33148 Coq.Init.Datatypes <> ::list_scope:x_'::'_x not
R33157:33164 Coq.Lists.SetoidList <> InA_cons thm
R33157:33164 Coq.Lists.SetoidList <> InA_cons thm
R33157:33164 Coq.Lists.SetoidList <> InA_cons thm
R33157:33164 Coq.Lists.SetoidList <> InA_cons thm
R33157:33164 Coq.Lists.SetoidList <> InA_cons thm
R33195:33202 Coq.Lists.SetoidList <> InA_cons thm
R33195:33202 Coq.Lists.SetoidList <> InA_cons thm
R33195:33202 Coq.Lists.SetoidList <> InA_cons thm
R33195:33202 Coq.Lists.SetoidList <> InA_cons thm
R33195:33202 Coq.Lists.SetoidList <> InA_cons thm
R33195:33202 Coq.Lists.SetoidList <> InA_cons thm
prf 33224:33240 MakeRaw linear_union_spec
R33279:33283 Coq.Init.Logic <> ::type_scope:x_'<->'_x not
R33253:33255 Coq.MSets.MSetRBT MakeRaw InT ind
R33260:33271 Coq.MSets.MSetRBT MakeRaw linear_union def
R33276:33277 Coq.MSets.MSetRBT <> s2 var
R33273:33274 Coq.MSets.MSetRBT <> s1 var
R33257:33257 Coq.MSets.MSetRBT <> x var
R33292:33295 Coq.Init.Logic <> ::type_scope:x_'\/'_x not
R33284:33286 Coq.MSets.MSetRBT MakeRaw InT ind
R33290:33291 Coq.MSets.MSetRBT <> s1 var
R33288:33288 Coq.MSets.MSetRBT <> x var
R33296:33298 Coq.MSets.MSetRBT MakeRaw InT ind
R33302:33303 Coq.MSets.MSetRBT <> s2 var
R33300:33300 Coq.MSets.MSetRBT <> x var
R33321:33332 Coq.MSets.MSetRBT MakeRaw linear_union def
R33344:33355 Coq.MSets.MSetRBT MakeRaw treeify_spec thm
R33358:33372 Coq.MSets.MSetRBT MakeRaw union_list_spec thm
R33376:33391 Coq.MSets.MSetRBT MakeRaw rev_elements_rev thm
R33344:33355 Coq.MSets.MSetRBT MakeRaw treeify_spec thm
R33344:33355 Coq.MSets.MSetRBT MakeRaw treeify_spec thm
R33358:33372 Coq.MSets.MSetRBT MakeRaw union_list_spec thm
R33358:33372 Coq.MSets.MSetRBT MakeRaw union_list_spec thm
R33376:33391 Coq.MSets.MSetRBT MakeRaw rev_elements_rev thm
R33376:33391 Coq.MSets.MSetRBT MakeRaw rev_elements_rev thm
R33376:33391 Coq.MSets.MSetRBT MakeRaw rev_elements_rev thm
R33376:33391 Coq.MSets.MSetRBT MakeRaw rev_elements_rev thm
R33404:33410 Coq.Lists.SetoidList <> InA_rev thm
R33413:33419 Coq.Lists.SetoidList <> InA_nil thm
R33423:33436 Coq.MSets.MSetRBT MakeRaw elements_spec1 thm
R33404:33410 Coq.Lists.SetoidList <> InA_rev thm
R33404:33410 Coq.Lists.SetoidList <> InA_rev thm
R33404:33410 Coq.Lists.SetoidList <> InA_rev thm
R33404:33410 Coq.Lists.SetoidList <> InA_rev thm
R33413:33419 Coq.Lists.SetoidList <> InA_nil thm
R33413:33419 Coq.Lists.SetoidList <> InA_nil thm
R33423:33436 Coq.MSets.MSetRBT MakeRaw elements_spec1 thm
R33423:33436 Coq.MSets.MSetRBT MakeRaw elements_spec1 thm
R33423:33436 Coq.MSets.MSetRBT MakeRaw elements_spec1 thm
R33423:33436 Coq.MSets.MSetRBT MakeRaw elements_spec1 thm
prf 33470:33482 MakeRaw fold_add_spec
R33517:33521 Coq.Init.Logic <> ::type_scope:x_'<->'_x not
R33495:33497 Coq.MSets.MSetRBT MakeRaw InT ind
R33502:33505 Coq.MSets.MSetRBT MakeRaw fold def
R33514:33515 Coq.MSets.MSetRBT <> s2 var
R33511:33512 Coq.MSets.MSetRBT <> s1 var
R33507:33509 Coq.MSets.MSetRBT MakeRaw add def
R33499:33499 Coq.MSets.MSetRBT <> x var
R33530:33533 Coq.Init.Logic <> ::type_scope:x_'\/'_x not
R33522:33524 Coq.MSets.MSetRBT MakeRaw InT ind
R33528:33529 Coq.MSets.MSetRBT <> s1 var
R33526:33526 Coq.MSets.MSetRBT <> x var
R33534:33536 Coq.MSets.MSetRBT MakeRaw InT ind
R33540:33541 Coq.MSets.MSetRBT <> s2 var
R33538:33538 Coq.MSets.MSetRBT <> x var
R33560:33568 Coq.MSets.MSetRBT MakeRaw fold_spec thm
R33574:33592 Coq.Lists.List <> fold_left_rev_right thm
R33560:33568 Coq.MSets.MSetRBT MakeRaw fold_spec thm
R33560:33568 Coq.MSets.MSetRBT MakeRaw fold_spec thm
R33574:33592 Coq.Lists.List <> fold_left_rev_right thm
R33574:33592 Coq.Lists.List <> fold_left_rev_right thm
R33608:33621 Coq.MSets.MSetRBT MakeRaw elements_spec1 thm
R33631:33637 Coq.Lists.SetoidList <> InA_rev thm
R33608:33621 Coq.MSets.MSetRBT MakeRaw elements_spec1 thm
R33608:33621 Coq.MSets.MSetRBT MakeRaw elements_spec1 thm
R33631:33637 Coq.Lists.SetoidList <> InA_rev thm
R33631:33637 Coq.Lists.SetoidList <> InA_rev thm
R33659:33661 Coq.MSets.MSetRBT MakeRaw elt def
R33681:33683 Coq.Lists.List <> rev def
R33686:33693 Coq.MSets.MSetRBT MakeRaw elements def
R33681:33683 Coq.Lists.List <> rev def
R33686:33693 Coq.MSets.MSetRBT MakeRaw elements def
R33719:33725 Coq.Lists.SetoidList <> InA_nil thm
R33719:33725 Coq.Lists.SetoidList <> InA_nil thm
R33719:33725 Coq.Lists.SetoidList <> InA_nil thm
R33745:33748 Coq.Program.Basics <> flip def
R33759:33767 Coq.MSets.MSetRBT MakeRaw add_spec' thm
R33775:33782 Coq.Lists.SetoidList <> InA_cons thm
R33759:33767 Coq.MSets.MSetRBT MakeRaw add_spec' thm
R33759:33767 Coq.MSets.MSetRBT MakeRaw add_spec' thm
R33775:33782 Coq.Lists.SetoidList <> InA_cons thm
R33775:33782 Coq.Lists.SetoidList <> InA_cons thm
prf 33804:33814 MakeRaw union_spec'
R33846:33850 Coq.Init.Logic <> ::type_scope:x_'<->'_x not
R33827:33829 Coq.MSets.MSetRBT MakeRaw InT ind
R33834:33838 Coq.MSets.MSetRBT MakeRaw union def
R33843:33844 Coq.MSets.MSetRBT <> s2 var
R33840:33841 Coq.MSets.MSetRBT <> s1 var
R33831:33831 Coq.MSets.MSetRBT <> x var
R33859:33862 Coq.Init.Logic <> ::type_scope:x_'\/'_x not
R33851:33853 Coq.MSets.MSetRBT MakeRaw InT ind
R33857:33858 Coq.MSets.MSetRBT <> s1 var
R33855:33855 Coq.MSets.MSetRBT <> x var
R33863:33865 Coq.MSets.MSetRBT MakeRaw InT ind
R33869:33870 Coq.MSets.MSetRBT <> s2 var
R33867:33867 Coq.MSets.MSetRBT <> x var
R33888:33892 Coq.MSets.MSetRBT MakeRaw union def
R33904:33917 Coq.MSets.MSetRBT MakeRaw compare_height def
R33929:33945 Coq.MSets.MSetRBT MakeRaw linear_union_spec thm
R33929:33945 Coq.MSets.MSetRBT MakeRaw linear_union_spec thm
R33957:33969 Coq.MSets.MSetRBT MakeRaw fold_add_spec thm
R33957:33969 Coq.MSets.MSetRBT MakeRaw fold_add_spec thm
R33983:33995 Coq.MSets.MSetRBT MakeRaw fold_add_spec thm
R33983:33995 Coq.MSets.MSetRBT MakeRaw fold_add_spec thm
R33983:33995 Coq.MSets.MSetRBT MakeRaw fold_add_spec thm
prf 34017:34026 MakeRaw union_spec
R34047:34048 Coq.MSets.MSetRBT MakeRaw Ok class
R34050:34051 Coq.MSets.MSetRBT <> s1 var
R34054:34055 Coq.MSets.MSetRBT MakeRaw Ok class
R34057:34058 Coq.MSets.MSetRBT <> s2 var
R34083:34087 Coq.Init.Logic <> ::type_scope:x_'<->'_x not
R34064:34066 Coq.MSets.MSetRBT MakeRaw InT ind
R34071:34075 Coq.MSets.MSetRBT MakeRaw union def
R34080:34081 Coq.MSets.MSetRBT <> s2 var
R34077:34078 Coq.MSets.MSetRBT <> s1 var
R34068:34068 Coq.MSets.MSetRBT <> y var
R34096:34099 Coq.Init.Logic <> ::type_scope:x_'\/'_x not
R34088:34090 Coq.MSets.MSetRBT MakeRaw InT ind
R34094:34095 Coq.MSets.MSetRBT <> s1 var
R34092:34092 Coq.MSets.MSetRBT <> y var
R34100:34102 Coq.MSets.MSetRBT MakeRaw InT ind
R34106:34107 Coq.MSets.MSetRBT <> s2 var
R34104:34104 Coq.MSets.MSetRBT <> y var
R34133:34143 Coq.MSets.MSetRBT MakeRaw union_spec' thm
R34133:34143 Coq.MSets.MSetRBT MakeRaw union_spec' thm
prf 34175:34187 MakeRaw inter_list_ok
R34215:34218 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R34219:34222 Coq.Sorting.Sorted <> sort syndef
R34230:34239 Coq.MSets.MSetRBT MakeRaw inter_list def
R34247:34249 Coq.MSets.MSetRBT <> acc var
R34244:34245 Coq.MSets.MSetRBT <> l2 var
R34241:34242 Coq.MSets.MSetRBT <> l1 var
R34224:34227 Coq.MSets.MSetRBT X lt defax
R34202:34204 Coq.MSets.MSetRBT MakeRaw INV rec
R34212:34214 Coq.MSets.MSetRBT <> acc var
R34209:34210 Coq.MSets.MSetRBT <> l2 var
R34206:34207 Coq.MSets.MSetRBT <> l1 var
R34394:34407 Coq.MSets.MSetRBT X compare_spec prfax
R34394:34407 Coq.MSets.MSetRBT X compare_spec prfax
R34442:34447 Coq.MSets.MSetRBT MakeRaw INV_eq thm
R34442:34447 Coq.MSets.MSetRBT MakeRaw INV_eq thm
R34486:34492 Coq.MSets.MSetRBT MakeRaw INV_sym thm
R34495:34502 Coq.MSets.MSetRBT MakeRaw INV_drop thm
R34505:34511 Coq.MSets.MSetRBT MakeRaw INV_sym thm
R34486:34492 Coq.MSets.MSetRBT MakeRaw INV_sym thm
R34495:34502 Coq.MSets.MSetRBT MakeRaw INV_drop thm
R34505:34511 Coq.MSets.MSetRBT MakeRaw INV_sym thm
R34544:34551 Coq.MSets.MSetRBT MakeRaw INV_drop thm
R34544:34551 Coq.MSets.MSetRBT MakeRaw INV_drop thm
inst 34576:34590 MakeRaw linear_inter_ok
R34600:34601 Coq.MSets.MSetRBT MakeRaw Ok class
R34603:34604 Coq.MSets.MSetRBT <> s1 var
R34607:34608 Coq.MSets.MSetRBT MakeRaw Ok class
R34610:34611 Coq.MSets.MSetRBT <> s2 var
R34617:34618 Coq.MSets.MSetRBT MakeRaw Ok class
R34621:34632 Coq.MSets.MSetRBT MakeRaw linear_inter def
R34637:34638 Coq.MSets.MSetRBT <> s2 var
R34634:34635 Coq.MSets.MSetRBT <> s1 var
R34657:34668 Coq.MSets.MSetRBT MakeRaw linear_inter def
R34681:34690 Coq.MSets.MSetRBT MakeRaw treeify_ok thm
R34693:34705 Coq.MSets.MSetRBT MakeRaw inter_list_ok thm
R34708:34715 Coq.MSets.MSetRBT MakeRaw INV_init thm
R34681:34690 Coq.MSets.MSetRBT MakeRaw treeify_ok thm
R34693:34705 Coq.MSets.MSetRBT MakeRaw inter_list_ok thm
R34708:34715 Coq.MSets.MSetRBT MakeRaw INV_init thm
inst 34733:34740 MakeRaw inter_ok
R34750:34751 Coq.MSets.MSetRBT MakeRaw Ok class
R34753:34754 Coq.MSets.MSetRBT <> s1 var
R34757:34758 Coq.MSets.MSetRBT MakeRaw Ok class
R34760:34761 Coq.MSets.MSetRBT <> s2 var
R34766:34767 Coq.MSets.MSetRBT MakeRaw Ok class
R34770:34774 Coq.MSets.MSetRBT MakeRaw inter def
R34779:34780 Coq.MSets.MSetRBT <> s2 var
R34776:34777 Coq.MSets.MSetRBT <> s1 var
R34799:34803 Coq.MSets.MSetRBT MakeRaw inter def
R34815:34828 Coq.MSets.MSetRBT MakeRaw compare_height def
prf 34852:34866 MakeRaw inter_list_spec
R34901:34905 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R34924:34929 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R35021:35021 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R34963:34970 Coq.Init.Logic <> ::type_scope:x_'<->'_x not
R34930:34932 Coq.Lists.SetoidList <> InA ind
R34942:34951 Coq.MSets.MSetRBT MakeRaw inter_list def
R34959:34961 Coq.MSets.MSetRBT <> acc var
R34956:34957 Coq.MSets.MSetRBT <> l2 var
R34953:34954 Coq.MSets.MSetRBT <> l1 var
R34939:34939 Coq.MSets.MSetRBT <> x var
R34934:34937 Coq.MSets.MSetRBT X eq defax
R34971:34971 Coq.Init.Logic <> ::type_scope:x_'\/'_x not
R35002:35006 Coq.Init.Logic <> ::type_scope:x_'\/'_x not
R34985:34988 Coq.Init.Logic <> ::type_scope:x_'/\'_x not
R34972:34974 Coq.Lists.SetoidList <> InA ind
R34983:34984 Coq.MSets.MSetRBT <> l1 var
R34981:34981 Coq.MSets.MSetRBT <> x var
R34976:34979 Coq.MSets.MSetRBT X eq defax
R34989:34991 Coq.Lists.SetoidList <> InA ind
R35000:35001 Coq.MSets.MSetRBT <> l2 var
R34998:34998 Coq.MSets.MSetRBT <> x var
R34993:34996 Coq.MSets.MSetRBT X eq defax
R35007:35009 Coq.Lists.SetoidList <> InA ind
R35018:35020 Coq.MSets.MSetRBT <> acc var
R35016:35016 Coq.MSets.MSetRBT <> x var
R35011:35014 Coq.MSets.MSetRBT X eq defax
R34906:34909 Coq.Sorting.Sorted <> sort syndef
R34917:34919 Coq.Lists.List <> rev def
R34921:34922 Coq.MSets.MSetRBT <> l2 var
R34911:34914 Coq.MSets.MSetRBT X lt defax
R34883:34886 Coq.Sorting.Sorted <> sort syndef
R34894:34896 Coq.Lists.List <> rev def
R34898:34899 Coq.MSets.MSetRBT <> l1 var
R34888:34891 Coq.MSets.MSetRBT X lt defax
R35223:35236 Coq.MSets.MSetRBT MakeRaw sorted_app_inv thm
R35223:35236 Coq.MSets.MSetRBT MakeRaw sorted_app_inv thm
R35285:35298 Coq.MSets.MSetRBT MakeRaw sorted_app_inv thm
R35285:35298 Coq.MSets.MSetRBT MakeRaw sorted_app_inv thm
R35342:35355 Coq.MSets.MSetRBT X compare_spec prfax
R35342:35355 Coq.MSets.MSetRBT X compare_spec prfax
R35388:35395 Coq.Lists.SetoidList <> InA_cons thm
R35388:35395 Coq.Lists.SetoidList <> InA_cons thm
R35388:35395 Coq.Lists.SetoidList <> InA_cons thm
R35388:35395 Coq.Lists.SetoidList <> InA_cons thm
R35388:35395 Coq.Lists.SetoidList <> InA_cons thm
R35388:35395 Coq.Lists.SetoidList <> InA_cons thm
R35482:35485 Coq.MSets.MSetRBT X lt defax
R35482:35485 Coq.MSets.MSetRBT X lt defax
R35588:35591 Coq.MSets.MSetRBT X lt defax
R35588:35591 Coq.MSets.MSetRBT X lt defax
prf 35638:35654 MakeRaw linear_inter_spec
R35666:35667 Coq.MSets.MSetRBT MakeRaw Ok class
R35669:35670 Coq.MSets.MSetRBT <> s1 var
R35673:35674 Coq.MSets.MSetRBT MakeRaw Ok class
R35676:35677 Coq.MSets.MSetRBT <> s2 var
R35709:35713 Coq.Init.Logic <> ::type_scope:x_'<->'_x not
R35683:35685 Coq.MSets.MSetRBT MakeRaw InT ind
R35690:35701 Coq.MSets.MSetRBT MakeRaw linear_inter def
R35706:35707 Coq.MSets.MSetRBT <> s2 var
R35703:35704 Coq.MSets.MSetRBT <> s1 var
R35687:35687 Coq.MSets.MSetRBT <> x var
R35722:35725 Coq.Init.Logic <> ::type_scope:x_'/\'_x not
R35714:35716 Coq.MSets.MSetRBT MakeRaw InT ind
R35720:35721 Coq.MSets.MSetRBT <> s1 var
R35718:35718 Coq.MSets.MSetRBT <> x var
R35726:35728 Coq.MSets.MSetRBT MakeRaw InT ind
R35732:35733 Coq.MSets.MSetRBT <> s2 var
R35730:35730 Coq.MSets.MSetRBT <> x var
R35751:35762 Coq.MSets.MSetRBT MakeRaw linear_inter def
R35837:35850 Coq.Lists.List <> rev_involutive thm
R35775:35790 Coq.MSets.MSetRBT MakeRaw rev_elements_rev thm
R35793:35804 Coq.MSets.MSetRBT MakeRaw treeify_spec thm
R35807:35821 Coq.MSets.MSetRBT MakeRaw inter_list_spec thm
R35775:35790 Coq.MSets.MSetRBT MakeRaw rev_elements_rev thm
R35775:35790 Coq.MSets.MSetRBT MakeRaw rev_elements_rev thm
R35775:35790 Coq.MSets.MSetRBT MakeRaw rev_elements_rev thm
R35775:35790 Coq.MSets.MSetRBT MakeRaw rev_elements_rev thm
R35793:35804 Coq.MSets.MSetRBT MakeRaw treeify_spec thm
R35793:35804 Coq.MSets.MSetRBT MakeRaw treeify_spec thm
R35807:35821 Coq.MSets.MSetRBT MakeRaw inter_list_spec thm
R35837:35850 Coq.Lists.List <> rev_involutive thm
R35837:35850 Coq.Lists.List <> rev_involutive thm
R35837:35850 Coq.Lists.List <> rev_involutive thm
R35837:35850 Coq.Lists.List <> rev_involutive thm
R35807:35821 Coq.MSets.MSetRBT MakeRaw inter_list_spec thm
R35873:35879 Coq.Lists.SetoidList <> InA_rev thm
R35882:35888 Coq.Lists.SetoidList <> InA_nil thm
R35892:35905 Coq.MSets.MSetRBT MakeRaw elements_spec1 thm
R35873:35879 Coq.Lists.SetoidList <> InA_rev thm
R35873:35879 Coq.Lists.SetoidList <> InA_rev thm
R35873:35879 Coq.Lists.SetoidList <> InA_rev thm
R35873:35879 Coq.Lists.SetoidList <> InA_rev thm
R35882:35888 Coq.Lists.SetoidList <> InA_nil thm
R35882:35888 Coq.Lists.SetoidList <> InA_nil thm
R35892:35905 Coq.MSets.MSetRBT MakeRaw elements_spec1 thm
R35892:35905 Coq.MSets.MSetRBT MakeRaw elements_spec1 thm
R35892:35905 Coq.MSets.MSetRBT MakeRaw elements_spec1 thm
R35892:35905 Coq.MSets.MSetRBT MakeRaw elements_spec1 thm
inst 35947:35956 MakeRaw mem_proper
R35962:35963 Coq.MSets.MSetRBT MakeRaw Ok class
R35965:35965 Coq.MSets.MSetRBT <> s var
R35971:35976 Coq.Classes.Morphisms <> Proper class
R36008:36010 Coq.MSets.MSetRBT MakeRaw mem def
R36014:36014 Coq.MSets.MSetRBT <> s var
R36012:36012 Coq.MSets.MSetRBT <> k var
R35983:35987 Coq.Classes.Morphisms ProperNotations ::signature_scope:x_'==>'_x not
R35979:35982 Coq.MSets.MSetRBT X eq defax
R35988:35995 Coq.Init.Logic <> eq ind
R36047:36065 Coq.Bool.Bool <> eq_iff_eq_true thm
R36077:36084 Coq.MSets.MSetRBT MakeRaw mem_spec thm
R36047:36065 Coq.Bool.Bool <> eq_iff_eq_true thm
R36077:36084 Coq.MSets.MSetRBT MakeRaw mem_spec thm
R36077:36084 Coq.MSets.MSetRBT MakeRaw mem_spec thm
R36077:36084 Coq.MSets.MSetRBT MakeRaw mem_spec thm
R36077:36084 Coq.MSets.MSetRBT MakeRaw mem_spec thm
R36077:36084 Coq.MSets.MSetRBT MakeRaw mem_spec thm
R36077:36084 Coq.MSets.MSetRBT MakeRaw mem_spec thm
prf 36122:36131 MakeRaw inter_spec
R36143:36144 Coq.MSets.MSetRBT MakeRaw Ok class
R36146:36147 Coq.MSets.MSetRBT <> s1 var
R36150:36151 Coq.MSets.MSetRBT MakeRaw Ok class
R36153:36154 Coq.MSets.MSetRBT <> s2 var
R36179:36183 Coq.Init.Logic <> ::type_scope:x_'<->'_x not
R36160:36162 Coq.MSets.MSetRBT MakeRaw InT ind
R36167:36171 Coq.MSets.MSetRBT MakeRaw inter def
R36176:36177 Coq.MSets.MSetRBT <> s2 var
R36173:36174 Coq.MSets.MSetRBT <> s1 var
R36164:36164 Coq.MSets.MSetRBT <> y var
R36192:36195 Coq.Init.Logic <> ::type_scope:x_'/\'_x not
R36184:36186 Coq.MSets.MSetRBT MakeRaw InT ind
R36190:36191 Coq.MSets.MSetRBT <> s1 var
R36188:36188 Coq.MSets.MSetRBT <> y var
R36196:36198 Coq.MSets.MSetRBT MakeRaw InT ind
R36202:36203 Coq.MSets.MSetRBT <> s2 var
R36200:36200 Coq.MSets.MSetRBT <> y var
R36221:36225 Coq.MSets.MSetRBT MakeRaw inter def
R36237:36250 Coq.MSets.MSetRBT MakeRaw compare_height def
R36266:36282 Coq.MSets.MSetRBT MakeRaw linear_inter_spec thm
R36266:36282 Coq.MSets.MSetRBT MakeRaw linear_inter_spec thm
R36296:36306 Coq.MSets.MSetRBT MakeRaw filter_spec thm
R36309:36316 Coq.MSets.MSetRBT MakeRaw mem_spec thm
R36296:36306 Coq.MSets.MSetRBT MakeRaw filter_spec thm
R36296:36306 Coq.MSets.MSetRBT MakeRaw filter_spec thm
R36309:36316 Coq.MSets.MSetRBT MakeRaw mem_spec thm
R36309:36316 Coq.MSets.MSetRBT MakeRaw mem_spec thm
R36348:36358 Coq.MSets.MSetRBT MakeRaw filter_spec thm
R36361:36368 Coq.MSets.MSetRBT MakeRaw mem_spec thm
R36348:36358 Coq.MSets.MSetRBT MakeRaw filter_spec thm
R36348:36358 Coq.MSets.MSetRBT MakeRaw filter_spec thm
R36361:36368 Coq.MSets.MSetRBT MakeRaw mem_spec thm
R36361:36368 Coq.MSets.MSetRBT MakeRaw mem_spec thm
prf 36423:36434 MakeRaw diff_list_ok
R36462:36465 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R36466:36469 Coq.Sorting.Sorted <> sort syndef
R36477:36485 Coq.MSets.MSetRBT MakeRaw diff_list def
R36493:36495 Coq.MSets.MSetRBT <> acc var
R36490:36491 Coq.MSets.MSetRBT <> l2 var
R36487:36488 Coq.MSets.MSetRBT <> l1 var
R36471:36474 Coq.MSets.MSetRBT X lt defax
R36449:36451 Coq.MSets.MSetRBT MakeRaw INV rec
R36459:36461 Coq.MSets.MSetRBT <> acc var
R36456:36457 Coq.MSets.MSetRBT <> l2 var
R36453:36454 Coq.MSets.MSetRBT <> l1 var
R36636:36644 Coq.MSets.MSetRBT MakeRaw diff_list def
R36654:36660 Coq.MSets.MSetRBT MakeRaw INV_rev thm
R36654:36660 Coq.MSets.MSetRBT MakeRaw INV_rev thm
R36685:36698 Coq.MSets.MSetRBT X compare_spec prfax
R36685:36698 Coq.MSets.MSetRBT X compare_spec prfax
R36733:36740 Coq.MSets.MSetRBT MakeRaw INV_drop thm
R36743:36749 Coq.MSets.MSetRBT MakeRaw INV_sym thm
R36752:36759 Coq.MSets.MSetRBT MakeRaw INV_drop thm
R36762:36768 Coq.MSets.MSetRBT MakeRaw INV_sym thm
R36733:36740 Coq.MSets.MSetRBT MakeRaw INV_drop thm
R36743:36749 Coq.MSets.MSetRBT MakeRaw INV_sym thm
R36752:36759 Coq.MSets.MSetRBT MakeRaw INV_drop thm
R36762:36768 Coq.MSets.MSetRBT MakeRaw INV_sym thm
R36807:36813 Coq.MSets.MSetRBT MakeRaw INV_sym thm
R36816:36823 Coq.MSets.MSetRBT MakeRaw INV_drop thm
R36826:36832 Coq.MSets.MSetRBT MakeRaw INV_sym thm
R36807:36813 Coq.MSets.MSetRBT MakeRaw INV_sym thm
R36816:36823 Coq.MSets.MSetRBT MakeRaw INV_drop thm
R36826:36832 Coq.MSets.MSetRBT MakeRaw INV_sym thm
R36865:36871 Coq.MSets.MSetRBT MakeRaw INV_sym thm
R36874:36879 Coq.MSets.MSetRBT MakeRaw INV_lt thm
R36865:36871 Coq.MSets.MSetRBT MakeRaw INV_sym thm
R36874:36879 Coq.MSets.MSetRBT MakeRaw INV_lt thm
R36899:36905 Coq.MSets.MSetRBT MakeRaw INV_sym thm
R36899:36905 Coq.MSets.MSetRBT MakeRaw INV_sym thm
inst 36923:36935 MakeRaw diff_inter_ok
R36945:36946 Coq.MSets.MSetRBT MakeRaw Ok class
R36948:36949 Coq.MSets.MSetRBT <> s1 var
R36952:36953 Coq.MSets.MSetRBT MakeRaw Ok class
R36955:36956 Coq.MSets.MSetRBT <> s2 var
R36962:36963 Coq.MSets.MSetRBT MakeRaw Ok class
R36966:36976 Coq.MSets.MSetRBT MakeRaw linear_diff def
R36981:36982 Coq.MSets.MSetRBT <> s2 var
R36978:36979 Coq.MSets.MSetRBT <> s1 var
R37001:37012 Coq.MSets.MSetRBT MakeRaw linear_inter def
R37025:37034 Coq.MSets.MSetRBT MakeRaw treeify_ok thm
R37037:37048 Coq.MSets.MSetRBT MakeRaw diff_list_ok thm
R37051:37058 Coq.MSets.MSetRBT MakeRaw INV_init thm
R37025:37034 Coq.MSets.MSetRBT MakeRaw treeify_ok thm
R37037:37048 Coq.MSets.MSetRBT MakeRaw diff_list_ok thm
R37051:37058 Coq.MSets.MSetRBT MakeRaw INV_init thm
inst 37076:37089 MakeRaw fold_remove_ok
R37099:37100 Coq.MSets.MSetRBT MakeRaw Ok class
R37102:37103 Coq.MSets.MSetRBT <> s2 var
R37109:37110 Coq.MSets.MSetRBT MakeRaw Ok class
R37113:37116 Coq.MSets.MSetRBT MakeRaw fold def
R37128:37129 Coq.MSets.MSetRBT <> s2 var
R37125:37126 Coq.MSets.MSetRBT <> s1 var
R37118:37123 Coq.MSets.MSetRBT MakeRaw remove def
R37149:37157 Coq.MSets.MSetRBT MakeRaw fold_spec thm
R37163:37181 Coq.Lists.List <> fold_left_rev_right thm
R37149:37157 Coq.MSets.MSetRBT MakeRaw fold_spec thm
R37149:37157 Coq.MSets.MSetRBT MakeRaw fold_spec thm
R37163:37181 Coq.Lists.List <> fold_left_rev_right thm
R37163:37181 Coq.Lists.List <> fold_left_rev_right thm
R37192:37194 Coq.MSets.MSetRBT MakeRaw elt def
R37214:37216 Coq.Lists.List <> rev def
R37219:37226 Coq.MSets.MSetRBT MakeRaw elements def
R37248:37251 Coq.Program.Basics <> flip def
R37214:37216 Coq.Lists.List <> rev def
R37219:37226 Coq.MSets.MSetRBT MakeRaw elements def
inst 37283:37289 MakeRaw diff_ok
R37299:37300 Coq.MSets.MSetRBT MakeRaw Ok class
R37302:37303 Coq.MSets.MSetRBT <> s1 var
R37306:37307 Coq.MSets.MSetRBT MakeRaw Ok class
R37309:37310 Coq.MSets.MSetRBT <> s2 var
R37315:37316 Coq.MSets.MSetRBT MakeRaw Ok class
R37319:37322 Coq.MSets.MSetRBT MakeRaw diff def
R37327:37328 Coq.MSets.MSetRBT <> s2 var
R37324:37325 Coq.MSets.MSetRBT <> s1 var
R37347:37350 Coq.MSets.MSetRBT MakeRaw diff def
R37362:37375 Coq.MSets.MSetRBT MakeRaw compare_height def
prf 37399:37412 MakeRaw diff_list_spec
R37447:37451 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R37470:37475 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R37567:37567 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R37508:37515 Coq.Init.Logic <> ::type_scope:x_'<->'_x not
R37476:37478 Coq.Lists.SetoidList <> InA ind
R37488:37496 Coq.MSets.MSetRBT MakeRaw diff_list def
R37504:37506 Coq.MSets.MSetRBT <> acc var
R37501:37502 Coq.MSets.MSetRBT <> l2 var
R37498:37499 Coq.MSets.MSetRBT <> l1 var
R37485:37485 Coq.MSets.MSetRBT <> x var
R37480:37483 Coq.MSets.MSetRBT X eq defax
R37516:37516 Coq.Init.Logic <> ::type_scope:x_'\/'_x not
R37548:37552 Coq.Init.Logic <> ::type_scope:x_'\/'_x not
R37530:37533 Coq.Init.Logic <> ::type_scope:x_'/\'_x not
R37517:37519 Coq.Lists.SetoidList <> InA ind
R37528:37529 Coq.MSets.MSetRBT <> l1 var
R37526:37526 Coq.MSets.MSetRBT <> x var
R37521:37524 Coq.MSets.MSetRBT X eq defax
R37534:37534 Coq.Init.Logic <> ::type_scope:'~'_x not
R37535:37537 Coq.Lists.SetoidList <> InA ind
R37546:37547 Coq.MSets.MSetRBT <> l2 var
R37544:37544 Coq.MSets.MSetRBT <> x var
R37539:37542 Coq.MSets.MSetRBT X eq defax
R37553:37555 Coq.Lists.SetoidList <> InA ind
R37564:37566 Coq.MSets.MSetRBT <> acc var
R37562:37562 Coq.MSets.MSetRBT <> x var
R37557:37560 Coq.MSets.MSetRBT X eq defax
R37452:37455 Coq.Sorting.Sorted <> sort syndef
R37463:37465 Coq.Lists.List <> rev def
R37467:37468 Coq.MSets.MSetRBT <> l2 var
R37457:37460 Coq.MSets.MSetRBT X lt defax
R37429:37432 Coq.Sorting.Sorted <> sort syndef
R37440:37442 Coq.Lists.List <> rev def
R37444:37445 Coq.MSets.MSetRBT <> l1 var
R37434:37437 Coq.MSets.MSetRBT X lt defax
R37734:37747 Coq.Lists.List <> rev_append_rev thm
R37734:37747 Coq.Lists.List <> rev_append_rev thm
R37734:37747 Coq.Lists.List <> rev_append_rev thm
R37801:37814 Coq.MSets.MSetRBT MakeRaw sorted_app_inv thm
R37801:37814 Coq.MSets.MSetRBT MakeRaw sorted_app_inv thm
R37863:37876 Coq.MSets.MSetRBT MakeRaw sorted_app_inv thm
R37863:37876 Coq.MSets.MSetRBT MakeRaw sorted_app_inv thm
R37920:37933 Coq.MSets.MSetRBT X compare_spec prfax
R37920:37933 Coq.MSets.MSetRBT X compare_spec prfax
R38022:38025 Coq.MSets.MSetRBT X lt defax
R38022:38025 Coq.MSets.MSetRBT X lt defax
R38143:38146 Coq.MSets.MSetRBT X lt defax
R38143:38146 Coq.MSets.MSetRBT X lt defax
R38294:38297 Coq.MSets.MSetRBT X lt defax
R38294:38297 Coq.MSets.MSetRBT X lt defax
prf 38344:38359 MakeRaw linear_diff_spec
R38371:38372 Coq.MSets.MSetRBT MakeRaw Ok class
R38374:38375 Coq.MSets.MSetRBT <> s1 var
R38378:38379 Coq.MSets.MSetRBT MakeRaw Ok class
R38381:38382 Coq.MSets.MSetRBT <> s2 var
R38413:38417 Coq.Init.Logic <> ::type_scope:x_'<->'_x not
R38388:38390 Coq.MSets.MSetRBT MakeRaw InT ind
R38395:38405 Coq.MSets.MSetRBT MakeRaw linear_diff def
R38410:38411 Coq.MSets.MSetRBT <> s2 var
R38407:38408 Coq.MSets.MSetRBT <> s1 var
R38392:38392 Coq.MSets.MSetRBT <> x var
R38426:38429 Coq.Init.Logic <> ::type_scope:x_'/\'_x not
R38418:38420 Coq.MSets.MSetRBT MakeRaw InT ind
R38424:38425 Coq.MSets.MSetRBT <> s1 var
R38422:38422 Coq.MSets.MSetRBT <> x var
R38430:38430 Coq.Init.Logic <> ::type_scope:'~'_x not
R38431:38433 Coq.MSets.MSetRBT MakeRaw InT ind
R38437:38438 Coq.MSets.MSetRBT <> s2 var
R38435:38435 Coq.MSets.MSetRBT <> x var
R38456:38466 Coq.MSets.MSetRBT MakeRaw linear_diff def
R38540:38553 Coq.Lists.List <> rev_involutive thm
R38479:38494 Coq.MSets.MSetRBT MakeRaw rev_elements_rev thm
R38497:38508 Coq.MSets.MSetRBT MakeRaw treeify_spec thm
R38511:38524 Coq.MSets.MSetRBT MakeRaw diff_list_spec thm
R38479:38494 Coq.MSets.MSetRBT MakeRaw rev_elements_rev thm
R38479:38494 Coq.MSets.MSetRBT MakeRaw rev_elements_rev thm
R38479:38494 Coq.MSets.MSetRBT MakeRaw rev_elements_rev thm
R38479:38494 Coq.MSets.MSetRBT MakeRaw rev_elements_rev thm
R38497:38508 Coq.MSets.MSetRBT MakeRaw treeify_spec thm
R38497:38508 Coq.MSets.MSetRBT MakeRaw treeify_spec thm
R38511:38524 Coq.MSets.MSetRBT MakeRaw diff_list_spec thm
R38540:38553 Coq.Lists.List <> rev_involutive thm
R38540:38553 Coq.Lists.List <> rev_involutive thm
R38540:38553 Coq.Lists.List <> rev_involutive thm
R38540:38553 Coq.Lists.List <> rev_involutive thm
R38511:38524 Coq.MSets.MSetRBT MakeRaw diff_list_spec thm
R38576:38582 Coq.Lists.SetoidList <> InA_rev thm
R38585:38591 Coq.Lists.SetoidList <> InA_nil thm
R38595:38608 Coq.MSets.MSetRBT MakeRaw elements_spec1 thm
R38576:38582 Coq.Lists.SetoidList <> InA_rev thm
R38576:38582 Coq.Lists.SetoidList <> InA_rev thm
R38576:38582 Coq.Lists.SetoidList <> InA_rev thm
R38576:38582 Coq.Lists.SetoidList <> InA_rev thm
R38585:38591 Coq.Lists.SetoidList <> InA_nil thm
R38585:38591 Coq.Lists.SetoidList <> InA_nil thm
R38595:38608 Coq.MSets.MSetRBT MakeRaw elements_spec1 thm
R38595:38608 Coq.MSets.MSetRBT MakeRaw elements_spec1 thm
R38595:38608 Coq.MSets.MSetRBT MakeRaw elements_spec1 thm
R38595:38608 Coq.MSets.MSetRBT MakeRaw elements_spec1 thm
prf 38641:38656 MakeRaw fold_remove_spec
R38668:38669 Coq.MSets.MSetRBT MakeRaw Ok class
R38671:38672 Coq.MSets.MSetRBT <> s2 var
R38704:38708 Coq.Init.Logic <> ::type_scope:x_'<->'_x not
R38679:38681 Coq.MSets.MSetRBT MakeRaw InT ind
R38686:38689 Coq.MSets.MSetRBT MakeRaw fold def
R38701:38702 Coq.MSets.MSetRBT <> s2 var
R38698:38699 Coq.MSets.MSetRBT <> s1 var
R38691:38696 Coq.MSets.MSetRBT MakeRaw remove def
R38683:38683 Coq.MSets.MSetRBT <> x var
R38717:38720 Coq.Init.Logic <> ::type_scope:x_'/\'_x not
R38709:38711 Coq.MSets.MSetRBT MakeRaw InT ind
R38715:38716 Coq.MSets.MSetRBT <> s2 var
R38713:38713 Coq.MSets.MSetRBT <> x var
R38721:38721 Coq.Init.Logic <> ::type_scope:'~'_x not
R38722:38724 Coq.MSets.MSetRBT MakeRaw InT ind
R38728:38729 Coq.MSets.MSetRBT <> s1 var
R38726:38726 Coq.MSets.MSetRBT <> x var
R38748:38756 Coq.MSets.MSetRBT MakeRaw fold_spec thm
R38762:38780 Coq.Lists.List <> fold_left_rev_right thm
R38748:38756 Coq.MSets.MSetRBT MakeRaw fold_spec thm
R38748:38756 Coq.MSets.MSetRBT MakeRaw fold_spec thm
R38762:38780 Coq.Lists.List <> fold_left_rev_right thm
R38762:38780 Coq.Lists.List <> fold_left_rev_right thm
R38796:38809 Coq.MSets.MSetRBT MakeRaw elements_spec1 thm
R38819:38825 Coq.Lists.SetoidList <> InA_rev thm
R38796:38809 Coq.MSets.MSetRBT MakeRaw elements_spec1 thm
R38796:38809 Coq.MSets.MSetRBT MakeRaw elements_spec1 thm
R38819:38825 Coq.Lists.SetoidList <> InA_rev thm
R38819:38825 Coq.Lists.SetoidList <> InA_rev thm
R38847:38849 Coq.MSets.MSetRBT MakeRaw elt def
R38869:38871 Coq.Lists.List <> rev def
R38874:38881 Coq.MSets.MSetRBT MakeRaw elements def
R38869:38871 Coq.Lists.List <> rev def
R38874:38881 Coq.MSets.MSetRBT MakeRaw elements def
R38915:38921 Coq.Lists.SetoidList <> InA_nil thm
R38915:38921 Coq.Lists.SetoidList <> InA_nil thm
R38915:38921 Coq.Lists.SetoidList <> InA_nil thm
R38945:38948 Coq.Program.Basics <> flip def
R38964:38974 Coq.MSets.MSetRBT MakeRaw remove_spec thm
R38982:38989 Coq.Lists.SetoidList <> InA_cons thm
R38964:38974 Coq.MSets.MSetRBT MakeRaw remove_spec thm
R38964:38974 Coq.MSets.MSetRBT MakeRaw remove_spec thm
R38964:38974 Coq.MSets.MSetRBT MakeRaw remove_spec thm
R38982:38989 Coq.Lists.SetoidList <> InA_cons thm
R38982:38989 Coq.Lists.SetoidList <> InA_cons thm
prf 39054:39062 MakeRaw diff_spec
R39074:39075 Coq.MSets.MSetRBT MakeRaw Ok class
R39077:39078 Coq.MSets.MSetRBT <> s1 var
R39081:39082 Coq.MSets.MSetRBT MakeRaw Ok class
R39084:39085 Coq.MSets.MSetRBT <> s2 var
R39109:39113 Coq.Init.Logic <> ::type_scope:x_'<->'_x not
R39091:39093 Coq.MSets.MSetRBT MakeRaw InT ind
R39098:39101 Coq.MSets.MSetRBT MakeRaw diff def
R39106:39107 Coq.MSets.MSetRBT <> s2 var
R39103:39104 Coq.MSets.MSetRBT <> s1 var
R39095:39095 Coq.MSets.MSetRBT <> y var
R39122:39125 Coq.Init.Logic <> ::type_scope:x_'/\'_x not
R39114:39116 Coq.MSets.MSetRBT MakeRaw InT ind
R39120:39121 Coq.MSets.MSetRBT <> s1 var
R39118:39118 Coq.MSets.MSetRBT <> y var
R39126:39126 Coq.Init.Logic <> ::type_scope:'~'_x not
R39127:39129 Coq.MSets.MSetRBT MakeRaw InT ind
R39133:39134 Coq.MSets.MSetRBT <> s2 var
R39131:39131 Coq.MSets.MSetRBT <> y var
R39152:39155 Coq.MSets.MSetRBT MakeRaw diff def
R39167:39180 Coq.MSets.MSetRBT MakeRaw compare_height def
R39196:39211 Coq.MSets.MSetRBT MakeRaw linear_diff_spec thm
R39196:39211 Coq.MSets.MSetRBT MakeRaw linear_diff_spec thm
R39225:39235 Coq.MSets.MSetRBT MakeRaw filter_spec thm
R39238:39255 Coq.Bool.Bool <> negb_true_iff thm
R39266:39288 Coq.Bool.Bool <> not_true_iff_false thm
R39291:39298 Coq.MSets.MSetRBT MakeRaw mem_spec thm
R39225:39235 Coq.MSets.MSetRBT MakeRaw filter_spec thm
R39225:39235 Coq.MSets.MSetRBT MakeRaw filter_spec thm
R39225:39235 Coq.MSets.MSetRBT MakeRaw filter_spec thm
R39238:39255 Coq.Bool.Bool <> negb_true_iff thm
R39238:39255 Coq.Bool.Bool <> negb_true_iff thm
R39266:39288 Coq.Bool.Bool <> not_true_iff_false thm
R39266:39288 Coq.Bool.Bool <> not_true_iff_false thm
R39291:39298 Coq.MSets.MSetRBT MakeRaw mem_spec thm
R39291:39298 Coq.MSets.MSetRBT MakeRaw mem_spec thm
R39291:39298 Coq.MSets.MSetRBT MakeRaw mem_spec thm
R39356:39365 Coq.MSets.MSetRBT MakeRaw mem_proper inst
R39356:39365 Coq.MSets.MSetRBT MakeRaw mem_proper inst
R39381:39396 Coq.MSets.MSetRBT MakeRaw fold_remove_spec thm
R39381:39396 Coq.MSets.MSetRBT MakeRaw fold_remove_spec thm
R39409:39415 Coq.MSets.MSetRBT MakeRaw <> modtype
R39593:39610 Coq.Structures.Orders OrderedType <> mod
R39624:39630 Coq.MSets.MSetRBT MakeRaw <> mod
R39632:39632 Coq.MSets.MSetRBT X <> modtype
mod 39578:39589 <> BalanceProps
syndef 39652:39653 BalanceProps Rd
R39659:39662 Coq.MSets.MSetRBT M Node constr
R39664:39666 Coq.MSets.MSetRBT <> Red constr
syndef 39685:39686 BalanceProps Bk
R39692:39695 Coq.MSets.MSetRBT M Node constr
R39697:39701 Coq.MSets.MSetRBT <> Black constr
ind 39950:39952 BalanceProps rbt
constr 39982:39988 BalanceProps RB_Leaf
constr 40006:40010 BalanceProps RB_Rd
constr 40091:40095 BalanceProps RB_Bk
R39959:39962 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R39967:39970 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R39963:39966 Coq.MSets.MSetRBT M tree ind
R39956:39958 Coq.Init.Datatypes <> nat ind
R39992:39994 Coq.MSets.MSetRBT <> rbt ind
R39998:40001 Coq.MSets.MSetRBT M Leaf constr
R40033:40036 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R40045:40048 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R40056:40059 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R40067:40070 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R40071:40073 Coq.MSets.MSetRBT <> rbt ind
R40078:40079 Coq.MSets.MSetRBT BalanceProps Rd syndef
R40085:40085 Coq.MSets.MSetRBT <> r var
R40083:40083 Coq.MSets.MSetRBT <> k var
R40081:40081 Coq.MSets.MSetRBT <> l var
R40075:40075 Coq.MSets.MSetRBT <> n var
R40060:40062 Coq.MSets.MSetRBT <> rbt ind
R40066:40066 Coq.MSets.MSetRBT <> r var
R40064:40064 Coq.MSets.MSetRBT <> n var
R40049:40051 Coq.MSets.MSetRBT <> rbt ind
R40055:40055 Coq.MSets.MSetRBT <> l var
R40053:40053 Coq.MSets.MSetRBT <> n var
R40037:40042 Coq.MSets.MSetRBT M notred def
R40044:40044 Coq.MSets.MSetRBT <> r var
R40025:40030 Coq.MSets.MSetRBT M notred def
R40032:40032 Coq.MSets.MSetRBT <> l var
R40114:40117 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R40125:40128 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R40129:40131 Coq.MSets.MSetRBT <> rbt ind
R40140:40141 Coq.MSets.MSetRBT BalanceProps Bk syndef
R40147:40147 Coq.MSets.MSetRBT <> r var
R40145:40145 Coq.MSets.MSetRBT <> k var
R40143:40143 Coq.MSets.MSetRBT <> l var
R40134:40134 Coq.Init.Datatypes <> S constr
R40136:40136 Coq.MSets.MSetRBT <> n var
R40118:40120 Coq.MSets.MSetRBT <> rbt ind
R40124:40124 Coq.MSets.MSetRBT <> r var
R40122:40122 Coq.MSets.MSetRBT <> n var
R40107:40109 Coq.MSets.MSetRBT <> rbt ind
R40113:40113 Coq.MSets.MSetRBT <> l var
R40111:40111 Coq.MSets.MSetRBT <> n var
ind 40381:40383 BalanceProps rrt
constr 40414:40418 BalanceProps RR_Rd
R40388:40390 Coq.Init.Datatypes <> nat ind
R40399:40402 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R40395:40398 Coq.MSets.MSetRBT M tree ind
R40435:40438 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R40446:40449 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R40450:40452 Coq.MSets.MSetRBT <> rrt ind
R40457:40458 Coq.MSets.MSetRBT BalanceProps Rd syndef
R40464:40464 Coq.MSets.MSetRBT <> r var
R40462:40462 Coq.MSets.MSetRBT <> k var
R40460:40460 Coq.MSets.MSetRBT <> l var
R40454:40454 Coq.MSets.MSetRBT <> n var
R40439:40441 Coq.MSets.MSetRBT BalanceProps rbt ind
R40445:40445 Coq.MSets.MSetRBT <> r var
R40443:40443 Coq.MSets.MSetRBT <> n var
R40428:40430 Coq.MSets.MSetRBT BalanceProps rbt ind
R40434:40434 Coq.MSets.MSetRBT <> l var
R40432:40432 Coq.MSets.MSetRBT <> n var
ind 40744:40747 BalanceProps arbt
constr 40778:40783 BalanceProps ARB_RB
constr 40810:40815 BalanceProps ARB_RR
R40752:40754 Coq.Init.Datatypes <> nat ind
R40759:40762 Coq.MSets.MSetRBT M tree ind
R40794:40797 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R40798:40801 Coq.MSets.MSetRBT <> arbt ind
R40805:40805 Coq.MSets.MSetRBT <> t var
R40803:40803 Coq.MSets.MSetRBT <> n var
R40787:40789 Coq.MSets.MSetRBT BalanceProps rbt ind
R40793:40793 Coq.MSets.MSetRBT <> t var
R40791:40791 Coq.MSets.MSetRBT <> n var
R40826:40829 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R40830:40833 Coq.MSets.MSetRBT <> arbt ind
R40837:40837 Coq.MSets.MSetRBT <> t var
R40835:40835 Coq.MSets.MSetRBT <> n var
R40819:40821 Coq.MSets.MSetRBT BalanceProps rrt ind
R40825:40825 Coq.MSets.MSetRBT <> t var
R40823:40823 Coq.MSets.MSetRBT <> n var
ind 40934:40936 BalanceProps Rbt
constr 40951:40953 BalanceProps RBT
rec 40934:40936 BalanceProps Rbt
proj 40951:40953 BalanceProps RBT
R40941:40944 Coq.MSets.MSetRBT M tree ind
R40957:40963 Coq.Init.Logic <> ::type_scope:'exists'_x_'..'_x_','_x not
R40965:40966 Coq.Init.Logic <> ::type_scope:'exists'_x_'..'_x_','_x not
R40967:40969 Coq.MSets.MSetRBT BalanceProps rbt ind
R40973:40973 Coq.MSets.MSetRBT <> t var
R40971:40971 Coq.MSets.MSetRBT <> d var
def 41037:41043 BalanceProps rbt_ind
R41062:41064 Coq.MSets.MSetRBT BalanceProps rbt ind
R41101:41103 Coq.MSets.MSetRBT <> rbt ind
R41105:41107 Coq.MSets.MSetRBT <> rrt ind
R41109:41112 Coq.MSets.MSetRBT <> arbt ind
R41136:41141 Coq.MSets.MSetRBT M notred def
R41156:41156 Coq.Init.Logic <> I constr
R41260:41263 Coq.MSets.MSetRBT BalanceProps arbt ind
R41260:41263 Coq.MSets.MSetRBT BalanceProps arbt ind
prf 41359:41367 BalanceProps rr_nrr_rb
R41383:41386 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R41398:41401 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R41402:41404 Coq.MSets.MSetRBT BalanceProps rbt ind
R41408:41408 Coq.MSets.MSetRBT <> t var
R41406:41406 Coq.MSets.MSetRBT <> n var
R41387:41395 Coq.MSets.MSetRBT M notredred syndef
R41397:41397 Coq.MSets.MSetRBT <> t var
R41376:41378 Coq.MSets.MSetRBT BalanceProps rrt ind
R41382:41382 Coq.MSets.MSetRBT <> t var
R41380:41380 Coq.MSets.MSetRBT <> n var
prf 41530:41539 BalanceProps arb_nrr_rb
R41556:41559 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R41571:41574 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R41575:41577 Coq.MSets.MSetRBT BalanceProps rbt ind
R41581:41581 Coq.MSets.MSetRBT <> t var
R41579:41579 Coq.MSets.MSetRBT <> n var
R41560:41568 Coq.MSets.MSetRBT M notredred syndef
R41570:41570 Coq.MSets.MSetRBT <> t var
R41548:41551 Coq.MSets.MSetRBT BalanceProps arbt ind
R41555:41555 Coq.MSets.MSetRBT <> t var
R41553:41553 Coq.MSets.MSetRBT <> n var
prf 41622:41630 BalanceProps arb_nr_rb
R41647:41650 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R41659:41662 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R41663:41665 Coq.MSets.MSetRBT BalanceProps rbt ind
R41669:41669 Coq.MSets.MSetRBT <> t var
R41667:41667 Coq.MSets.MSetRBT <> n var
R41651:41656 Coq.MSets.MSetRBT M notred def
R41658:41658 Coq.MSets.MSetRBT <> t var
R41639:41642 Coq.MSets.MSetRBT BalanceProps arbt ind
R41646:41646 Coq.MSets.MSetRBT <> t var
R41644:41644 Coq.MSets.MSetRBT <> n var
def 41845:41852 BalanceProps redcarac
R41859:41863 Coq.MSets.MSetRBT M rcase def
R41895:41895 Coq.MSets.MSetRBT <> s var
prf 41905:41915 BalanceProps rb_maxdepth
R41930:41933 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R41944:41947 Coq.Init.Peano <> ::nat_scope:x_'<='_x not
R41934:41941 Coq.MSets.MSetRBT M maxdepth def
R41943:41943 Coq.MSets.MSetRBT <> s var
R41951:41953 Coq.Init.Peano <> ::nat_scope:x_'+'_x not
R41949:41949 Coq.Init.Peano <> ::nat_scope:x_'*'_x not
R41950:41950 Coq.MSets.MSetRBT <> n var
R41954:41961 Coq.MSets.MSetRBT BalanceProps redcarac def
R41963:41963 Coq.MSets.MSetRBT <> s var
R41923:41925 Coq.MSets.MSetRBT BalanceProps rbt ind
R41929:41929 Coq.MSets.MSetRBT <> s var
R41927:41927 Coq.MSets.MSetRBT <> n var
R42015:42022 Coq.MSets.MSetRBT BalanceProps redcarac def
R42015:42022 Coq.MSets.MSetRBT BalanceProps redcarac def
R42069:42076 Coq.MSets.MSetRBT BalanceProps redcarac def
R42069:42076 Coq.MSets.MSetRBT BalanceProps redcarac def
R42157:42170 Coq.Arith.PeanoNat Nat add_succ_r thm
R42176:42191 Coq.Arith.PeanoNat Nat succ_le_mono thm
R42157:42170 Coq.Arith.PeanoNat Nat add_succ_r thm
R42157:42170 Coq.Arith.PeanoNat Nat add_succ_r thm
R42176:42191 Coq.Arith.PeanoNat Nat succ_le_mono thm
R42176:42191 Coq.Arith.PeanoNat Nat succ_le_mono thm
R42207:42217 Coq.Arith.PeanoNat Nat max_lub thm
R42207:42217 Coq.Arith.PeanoNat Nat max_lub thm
R42241:42256 Coq.Arith.PeanoNat Nat succ_le_mono thm
R42241:42256 Coq.Arith.PeanoNat Nat succ_le_mono thm
R42241:42256 Coq.Arith.PeanoNat Nat succ_le_mono thm
R42268:42278 Coq.Arith.PeanoNat Nat max_lub thm
R42288:42299 Coq.Arith.PeanoNat Nat le_trans thm
R42356:42366 Coq.Arith.PeanoNat Nat add_0_r thm
R42370:42380 Coq.Arith.PeanoNat Nat add_1_r thm
R42268:42278 Coq.Arith.PeanoNat Nat max_lub thm
R42288:42299 Coq.Arith.PeanoNat Nat le_trans thm
R42288:42299 Coq.Arith.PeanoNat Nat le_trans thm
R42356:42366 Coq.Arith.PeanoNat Nat add_0_r thm
R42356:42366 Coq.Arith.PeanoNat Nat add_0_r thm
R42356:42366 Coq.Arith.PeanoNat Nat add_0_r thm
R42356:42366 Coq.Arith.PeanoNat Nat add_0_r thm
R42356:42366 Coq.Arith.PeanoNat Nat add_0_r thm
R42370:42380 Coq.Arith.PeanoNat Nat add_1_r thm
R42370:42380 Coq.Arith.PeanoNat Nat add_1_r thm
R42356:42366 Coq.Arith.PeanoNat Nat add_0_r thm
R42356:42366 Coq.Arith.PeanoNat Nat add_0_r thm
R42356:42366 Coq.Arith.PeanoNat Nat add_0_r thm
R42356:42366 Coq.Arith.PeanoNat Nat add_0_r thm
R42370:42380 Coq.Arith.PeanoNat Nat add_1_r thm
R42370:42380 Coq.Arith.PeanoNat Nat add_1_r thm
R42370:42380 Coq.Arith.PeanoNat Nat add_1_r thm
R42356:42366 Coq.Arith.PeanoNat Nat add_0_r thm
R42356:42366 Coq.Arith.PeanoNat Nat add_0_r thm
R42356:42366 Coq.Arith.PeanoNat Nat add_0_r thm
R42356:42366 Coq.Arith.PeanoNat Nat add_0_r thm
R42356:42366 Coq.Arith.PeanoNat Nat add_0_r thm
R42370:42380 Coq.Arith.PeanoNat Nat add_1_r thm
R42370:42380 Coq.Arith.PeanoNat Nat add_1_r thm
R42356:42366 Coq.Arith.PeanoNat Nat add_0_r thm
R42356:42366 Coq.Arith.PeanoNat Nat add_0_r thm
R42356:42366 Coq.Arith.PeanoNat Nat add_0_r thm
R42356:42366 Coq.Arith.PeanoNat Nat add_0_r thm
R42356:42366 Coq.Arith.PeanoNat Nat add_0_r thm
R42370:42380 Coq.Arith.PeanoNat Nat add_1_r thm
R42370:42380 Coq.Arith.PeanoNat Nat add_1_r thm
R42356:42366 Coq.Arith.PeanoNat Nat add_0_r thm
R42356:42366 Coq.Arith.PeanoNat Nat add_0_r thm
R42356:42366 Coq.Arith.PeanoNat Nat add_0_r thm
R42356:42366 Coq.Arith.PeanoNat Nat add_0_r thm
R42370:42380 Coq.Arith.PeanoNat Nat add_1_r thm
R42370:42380 Coq.Arith.PeanoNat Nat add_1_r thm
R42370:42380 Coq.Arith.PeanoNat Nat add_1_r thm
R42356:42366 Coq.Arith.PeanoNat Nat add_0_r thm
R42356:42366 Coq.Arith.PeanoNat Nat add_0_r thm
R42356:42366 Coq.Arith.PeanoNat Nat add_0_r thm
R42356:42366 Coq.Arith.PeanoNat Nat add_0_r thm
R42356:42366 Coq.Arith.PeanoNat Nat add_0_r thm
R42370:42380 Coq.Arith.PeanoNat Nat add_1_r thm
R42370:42380 Coq.Arith.PeanoNat Nat add_1_r thm
prf 42412:42422 BalanceProps rb_mindepth
R42437:42440 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R42455:42458 Coq.Init.Peano <> ::nat_scope:x_'<='_x not
R42442:42444 Coq.Init.Peano <> ::nat_scope:x_'+'_x not
R42441:42441 Coq.MSets.MSetRBT <> n var
R42445:42452 Coq.MSets.MSetRBT BalanceProps redcarac def
R42454:42454 Coq.MSets.MSetRBT <> s var
R42459:42466 Coq.MSets.MSetRBT M mindepth def
R42468:42468 Coq.MSets.MSetRBT <> s var
R42430:42432 Coq.MSets.MSetRBT BalanceProps rbt ind
R42436:42436 Coq.MSets.MSetRBT <> s var
R42434:42434 Coq.MSets.MSetRBT <> n var
R42522:42535 Coq.Arith.PeanoNat Nat add_succ_r thm
R42522:42535 Coq.Arith.PeanoNat Nat add_succ_r thm
R42522:42535 Coq.Arith.PeanoNat Nat add_succ_r thm
R42550:42565 Coq.Arith.PeanoNat Nat succ_le_mono thm
R42550:42565 Coq.Arith.PeanoNat Nat succ_le_mono thm
R42580:42587 Coq.MSets.MSetRBT BalanceProps redcarac def
R42580:42587 Coq.MSets.MSetRBT BalanceProps redcarac def
R42634:42641 Coq.MSets.MSetRBT BalanceProps redcarac def
R42634:42641 Coq.MSets.MSetRBT BalanceProps redcarac def
R42689:42699 Coq.Arith.PeanoNat Nat min_glb thm
R42689:42699 Coq.Arith.PeanoNat Nat min_glb thm
R42714:42729 Coq.Arith.PeanoNat Nat succ_le_mono thm
R42714:42729 Coq.Arith.PeanoNat Nat succ_le_mono thm
R42740:42750 Coq.Arith.PeanoNat Nat add_0_r thm
R42740:42750 Coq.Arith.PeanoNat Nat add_0_r thm
R42740:42750 Coq.Arith.PeanoNat Nat add_0_r thm
R42762:42772 Coq.Arith.PeanoNat Nat min_glb thm
R42762:42772 Coq.Arith.PeanoNat Nat min_glb thm
prf 42805:42823 BalanceProps maxdepth_upperbound
R42834:42838 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R42849:42852 Coq.Init.Peano <> ::nat_scope:x_'<='_x not
R42839:42846 Coq.MSets.MSetRBT M maxdepth def
R42848:42848 Coq.MSets.MSetRBT <> s var
R42854:42856 Coq.Init.Peano <> ::nat_scope:x_'*'_x not
R42857:42864 Coq.Arith.PeanoNat Nat log2 def
R42867:42867 Coq.Init.Datatypes <> S constr
R42870:42877 Coq.MSets.MSetRBT M cardinal def
R42879:42879 Coq.MSets.MSetRBT <> s var
R42829:42831 Coq.MSets.MSetRBT BalanceProps Rbt class
R42833:42833 Coq.MSets.MSetRBT <> s var
R42914:42925 Coq.Arith.PeanoNat Nat le_trans thm
R42936:42946 Coq.MSets.MSetRBT BalanceProps rb_maxdepth thm
R42914:42925 Coq.Arith.PeanoNat Nat le_trans thm
R42936:42946 Coq.MSets.MSetRBT BalanceProps rb_maxdepth thm
R42974:42975 Coq.Init.Peano <> ::nat_scope:x_'*'_x not
R42988:42988 Coq.Init.Peano <> ::nat_scope:x_'*'_x not
R42977:42977 Coq.Init.Peano <> ::nat_scope:x_'+'_x not
R42978:42985 Coq.MSets.MSetRBT BalanceProps redcarac def
R42974:42975 Coq.Init.Peano <> ::nat_scope:x_'*'_x not
R42988:42988 Coq.Init.Peano <> ::nat_scope:x_'*'_x not
R42977:42977 Coq.Init.Peano <> ::nat_scope:x_'+'_x not
R42978:42985 Coq.MSets.MSetRBT BalanceProps redcarac def
R43003:43021 Coq.Arith.PeanoNat Nat mul_add_distr_l thm
R43003:43021 Coq.Arith.PeanoNat Nat mul_add_distr_l thm
R43003:43021 Coq.Arith.PeanoNat Nat mul_add_distr_l thm
R43030:43046 Coq.Arith.PeanoNat Nat add_le_mono_l thm
R43030:43046 Coq.Arith.PeanoNat Nat add_le_mono_l thm
R43063:43073 Coq.Arith.PeanoNat Nat mul_1_l thm
R43063:43073 Coq.Arith.PeanoNat Nat mul_1_l thm
R43063:43073 Coq.Arith.PeanoNat Nat mul_1_l thm
R43087:43103 Coq.Arith.PeanoNat Nat mul_le_mono_r thm
R43087:43103 Coq.Arith.PeanoNat Nat mul_le_mono_r thm
R43135:43151 Coq.Arith.PeanoNat Nat mul_le_mono_l thm
R43135:43151 Coq.Arith.PeanoNat Nat mul_le_mono_l thm
R43171:43178 Coq.MSets.MSetRBT M mindepth def
R43171:43178 Coq.MSets.MSetRBT M mindepth def
R43199:43209 Coq.MSets.MSetRBT BalanceProps rb_mindepth thm
R43199:43209 Coq.MSets.MSetRBT BalanceProps rb_mindepth thm
R43223:43243 Coq.MSets.MSetRBT M mindepth_log_cardinal thm
R43223:43243 Coq.MSets.MSetRBT M mindepth_log_cardinal thm
prf 43258:43276 BalanceProps maxdepth_lowerbound
R43289:43293 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R43315:43317 Coq.Init.Peano <> ::nat_scope:x_'<'_x not
R43294:43301 Coq.Arith.PeanoNat Nat log2 def
R43304:43311 Coq.MSets.MSetRBT M cardinal def
R43313:43313 Coq.MSets.MSetRBT <> s var
R43318:43325 Coq.MSets.MSetRBT M maxdepth def
R43327:43327 Coq.MSets.MSetRBT <> s var
R43283:43284 Coq.Init.Logic <> ::type_scope:x_'<>'_x not
R43282:43282 Coq.MSets.MSetRBT <> s var
R43285:43288 Coq.MSets.MSetRBT M Leaf constr
R43344:43364 Coq.MSets.MSetRBT M maxdepth_log_cardinal thm
R43344:43364 Coq.MSets.MSetRBT M maxdepth_log_cardinal thm
prf 43401:43412 BalanceProps singleton_rb
R43418:43420 Coq.MSets.MSetRBT BalanceProps Rbt class
R43423:43431 Coq.MSets.MSetRBT M singleton def
R43433:43433 Coq.MSets.MSetRBT <> x var
R43452:43460 Coq.MSets.MSetRBT M singleton def
prf 43528:43539 BalanceProps makeBlack_rb
R43555:43558 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R43559:43561 Coq.MSets.MSetRBT BalanceProps Rbt class
R43564:43572 Coq.MSets.MSetRBT M makeBlack def
R43574:43574 Coq.MSets.MSetRBT <> t var
R43547:43550 Coq.MSets.MSetRBT BalanceProps arbt ind
R43554:43554 Coq.MSets.MSetRBT <> t var
R43552:43552 Coq.MSets.MSetRBT <> n var
R43663:43663 Coq.Init.Datatypes <> S constr
R43663:43663 Coq.Init.Datatypes <> S constr
R43663:43663 Coq.Init.Datatypes <> S constr
prf 43713:43722 BalanceProps makeRed_rr
R43742:43745 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R43754:43757 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R43758:43760 Coq.MSets.MSetRBT BalanceProps rrt ind
R43765:43771 Coq.MSets.MSetRBT M makeRed def
R43773:43773 Coq.MSets.MSetRBT <> t var
R43762:43762 Coq.MSets.MSetRBT <> n var
R43746:43751 Coq.MSets.MSetRBT M notred def
R43753:43753 Coq.MSets.MSetRBT <> t var
R43731:43733 Coq.MSets.MSetRBT BalanceProps rbt ind
R43741:43741 Coq.MSets.MSetRBT <> t var
R43736:43736 Coq.Init.Datatypes <> S constr
R43738:43738 Coq.MSets.MSetRBT <> n var
prf 43866:43872 BalanceProps lbal_rb
R43893:43896 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R43904:43907 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R43908:43910 Coq.MSets.MSetRBT BalanceProps rbt ind
R43919:43922 Coq.MSets.MSetRBT M lbal def
R43928:43928 Coq.MSets.MSetRBT <> r var
R43926:43926 Coq.MSets.MSetRBT <> k var
R43924:43924 Coq.MSets.MSetRBT <> l var
R43913:43913 Coq.Init.Datatypes <> S constr
R43915:43915 Coq.MSets.MSetRBT <> n var
R43897:43899 Coq.MSets.MSetRBT BalanceProps rbt ind
R43903:43903 Coq.MSets.MSetRBT <> r var
R43901:43901 Coq.MSets.MSetRBT <> n var
R43885:43888 Coq.MSets.MSetRBT BalanceProps arbt ind
R43892:43892 Coq.MSets.MSetRBT <> l var
R43890:43890 Coq.MSets.MSetRBT <> n var
R43944:43953 Coq.MSets.MSetRBT M lbal_match thm
R43944:43953 Coq.MSets.MSetRBT M lbal_match thm
prf 43997:44003 BalanceProps rbal_rb
R44023:44026 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R44035:44038 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R44039:44041 Coq.MSets.MSetRBT BalanceProps rbt ind
R44050:44053 Coq.MSets.MSetRBT M rbal def
R44059:44059 Coq.MSets.MSetRBT <> r var
R44057:44057 Coq.MSets.MSetRBT <> k var
R44055:44055 Coq.MSets.MSetRBT <> l var
R44044:44044 Coq.Init.Datatypes <> S constr
R44046:44046 Coq.MSets.MSetRBT <> n var
R44027:44030 Coq.MSets.MSetRBT BalanceProps arbt ind
R44034:44034 Coq.MSets.MSetRBT <> r var
R44032:44032 Coq.MSets.MSetRBT <> n var
R44016:44018 Coq.MSets.MSetRBT BalanceProps rbt ind
R44022:44022 Coq.MSets.MSetRBT <> l var
R44020:44020 Coq.MSets.MSetRBT <> n var
R44075:44084 Coq.MSets.MSetRBT M rbal_match thm
R44075:44084 Coq.MSets.MSetRBT M rbal_match thm
prf 44128:44135 BalanceProps rbal'_rb
R44155:44158 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R44167:44170 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R44171:44173 Coq.MSets.MSetRBT BalanceProps rbt ind
R44182:44186 Coq.MSets.MSetRBT M rbal' def
R44192:44192 Coq.MSets.MSetRBT <> r var
R44190:44190 Coq.MSets.MSetRBT <> k var
R44188:44188 Coq.MSets.MSetRBT <> l var
R44176:44176 Coq.Init.Datatypes <> S constr
R44178:44178 Coq.MSets.MSetRBT <> n var
R44159:44162 Coq.MSets.MSetRBT BalanceProps arbt ind
R44166:44166 Coq.MSets.MSetRBT <> r var
R44164:44164 Coq.MSets.MSetRBT <> n var
R44148:44150 Coq.MSets.MSetRBT BalanceProps rbt ind
R44154:44154 Coq.MSets.MSetRBT <> l var
R44152:44152 Coq.MSets.MSetRBT <> n var
R44208:44218 Coq.MSets.MSetRBT M rbal'_match thm
R44208:44218 Coq.MSets.MSetRBT M rbal'_match thm
prf 44262:44269 BalanceProps lbalS_rb
R44290:44293 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R44305:44308 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R44317:44320 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R44321:44323 Coq.MSets.MSetRBT BalanceProps rbt ind
R44332:44336 Coq.MSets.MSetRBT M lbalS def
R44342:44342 Coq.MSets.MSetRBT <> r var
R44340:44340 Coq.MSets.MSetRBT <> x var
R44338:44338 Coq.MSets.MSetRBT <> l var
R44326:44326 Coq.Init.Datatypes <> S constr
R44328:44328 Coq.MSets.MSetRBT <> n var
R44309:44314 Coq.MSets.MSetRBT M notred def
R44316:44316 Coq.MSets.MSetRBT <> r var
R44294:44296 Coq.MSets.MSetRBT BalanceProps rbt ind
R44304:44304 Coq.MSets.MSetRBT <> r var
R44299:44299 Coq.Init.Datatypes <> S constr
R44301:44301 Coq.MSets.MSetRBT <> n var
R44282:44285 Coq.MSets.MSetRBT BalanceProps arbt ind
R44289:44289 Coq.MSets.MSetRBT <> l var
R44287:44287 Coq.MSets.MSetRBT <> n var
R44440:44450 Coq.MSets.MSetRBT M lbalS_match thm
R44440:44450 Coq.MSets.MSetRBT M lbalS_match thm
R44498:44505 Coq.MSets.MSetRBT BalanceProps rbal'_rb thm
R44498:44505 Coq.MSets.MSetRBT BalanceProps rbal'_rb thm
prf 44526:44534 BalanceProps lbalS_arb
R44555:44558 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R44570:44573 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R44574:44577 Coq.MSets.MSetRBT BalanceProps arbt ind
R44586:44590 Coq.MSets.MSetRBT M lbalS def
R44596:44596 Coq.MSets.MSetRBT <> r var
R44594:44594 Coq.MSets.MSetRBT <> x var
R44592:44592 Coq.MSets.MSetRBT <> l var
R44580:44580 Coq.Init.Datatypes <> S constr
R44582:44582 Coq.MSets.MSetRBT <> n var
R44559:44561 Coq.MSets.MSetRBT BalanceProps rbt ind
R44569:44569 Coq.MSets.MSetRBT <> r var
R44564:44564 Coq.Init.Datatypes <> S constr
R44566:44566 Coq.MSets.MSetRBT <> n var
R44547:44550 Coq.MSets.MSetRBT BalanceProps arbt ind
R44554:44554 Coq.MSets.MSetRBT <> l var
R44552:44552 Coq.MSets.MSetRBT <> n var
R44613:44623 Coq.MSets.MSetRBT M lbalS_match thm
R44613:44623 Coq.MSets.MSetRBT M lbalS_match thm
R44797:44804 Coq.MSets.MSetRBT BalanceProps rbal'_rb thm
R44807:44816 Coq.MSets.MSetRBT BalanceProps makeRed_rr thm
R44797:44804 Coq.MSets.MSetRBT BalanceProps rbal'_rb thm
R44807:44816 Coq.MSets.MSetRBT BalanceProps makeRed_rr thm
R44836:44843 Coq.MSets.MSetRBT BalanceProps rbal'_rb thm
R44836:44843 Coq.MSets.MSetRBT BalanceProps rbal'_rb thm
prf 44864:44871 BalanceProps rbalS_rb
R44895:44898 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R44907:44910 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R44919:44922 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R44923:44925 Coq.MSets.MSetRBT BalanceProps rbt ind
R44934:44938 Coq.MSets.MSetRBT M rbalS def
R44944:44944 Coq.MSets.MSetRBT <> r var
R44942:44942 Coq.MSets.MSetRBT <> x var
R44940:44940 Coq.MSets.MSetRBT <> l var
R44928:44928 Coq.Init.Datatypes <> S constr
R44930:44930 Coq.MSets.MSetRBT <> n var
R44911:44914 Coq.MSets.MSetRBT BalanceProps arbt ind
R44918:44918 Coq.MSets.MSetRBT <> r var
R44916:44916 Coq.MSets.MSetRBT <> n var
R44899:44904 Coq.MSets.MSetRBT M notred def
R44906:44906 Coq.MSets.MSetRBT <> l var
R44884:44886 Coq.MSets.MSetRBT BalanceProps rbt ind
R44894:44894 Coq.MSets.MSetRBT <> l var
R44889:44889 Coq.Init.Datatypes <> S constr
R44891:44891 Coq.MSets.MSetRBT <> n var
R45042:45052 Coq.MSets.MSetRBT M rbalS_match thm
R45042:45052 Coq.MSets.MSetRBT M rbalS_match thm
R45100:45106 Coq.MSets.MSetRBT BalanceProps lbal_rb thm
R45100:45106 Coq.MSets.MSetRBT BalanceProps lbal_rb thm
prf 45127:45135 BalanceProps rbalS_arb
R45159:45162 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R45171:45174 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R45175:45178 Coq.MSets.MSetRBT BalanceProps arbt ind
R45187:45191 Coq.MSets.MSetRBT M rbalS def
R45197:45197 Coq.MSets.MSetRBT <> r var
R45195:45195 Coq.MSets.MSetRBT <> x var
R45193:45193 Coq.MSets.MSetRBT <> l var
R45181:45181 Coq.Init.Datatypes <> S constr
R45183:45183 Coq.MSets.MSetRBT <> n var
R45163:45166 Coq.MSets.MSetRBT BalanceProps arbt ind
R45170:45170 Coq.MSets.MSetRBT <> r var
R45168:45168 Coq.MSets.MSetRBT <> n var
R45148:45150 Coq.MSets.MSetRBT BalanceProps rbt ind
R45158:45158 Coq.MSets.MSetRBT <> l var
R45153:45153 Coq.Init.Datatypes <> S constr
R45155:45155 Coq.MSets.MSetRBT <> n var
R45214:45224 Coq.MSets.MSetRBT M rbalS_match thm
R45214:45224 Coq.MSets.MSetRBT M rbalS_match thm
R45398:45404 Coq.MSets.MSetRBT BalanceProps lbal_rb thm
R45407:45416 Coq.MSets.MSetRBT BalanceProps makeRed_rr thm
R45398:45404 Coq.MSets.MSetRBT BalanceProps lbal_rb thm
R45407:45416 Coq.MSets.MSetRBT BalanceProps makeRed_rr thm
R45436:45442 Coq.MSets.MSetRBT BalanceProps lbal_rb thm
R45436:45442 Coq.MSets.MSetRBT BalanceProps lbal_rb thm
def 45628:45632 BalanceProps ifred
R45650:45654 Coq.MSets.MSetRBT M rcase def
R45686:45686 Coq.MSets.MSetRBT <> s var
R45683:45683 Coq.MSets.MSetRBT <> B var
R45670:45670 Coq.MSets.MSetRBT <> A var
prf 45696:45707 BalanceProps ifred_notred
R45725:45729 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R45747:45747 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R45741:45745 Coq.Init.Logic <> ::type_scope:x_'<->'_x not
R45730:45734 Coq.MSets.MSetRBT BalanceProps ifred def
R45740:45740 Coq.MSets.MSetRBT <> B var
R45738:45738 Coq.MSets.MSetRBT <> A var
R45736:45736 Coq.MSets.MSetRBT <> s var
R45746:45746 Coq.MSets.MSetRBT <> B var
R45717:45722 Coq.MSets.MSetRBT M notred def
R45724:45724 Coq.MSets.MSetRBT <> s var
prf 45810:45817 BalanceProps ifred_or
R45838:45841 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R45843:45844 Coq.Init.Logic <> ::type_scope:x_'\/'_x not
R45842:45842 Coq.MSets.MSetRBT <> A var
R45845:45845 Coq.MSets.MSetRBT <> B var
R45827:45831 Coq.MSets.MSetRBT BalanceProps ifred def
R45837:45837 Coq.MSets.MSetRBT <> B var
R45835:45835 Coq.MSets.MSetRBT <> A var
R45833:45833 Coq.MSets.MSetRBT <> s var
prf 45908:45916 BalanceProps ins_rr_rb
R45933:45937 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R45938:45942 Coq.MSets.MSetRBT BalanceProps ifred def
R45965:45967 Coq.MSets.MSetRBT BalanceProps rbt ind
R45972:45974 Coq.MSets.MSetRBT M ins def
R45978:45978 Coq.MSets.MSetRBT <> s var
R45976:45976 Coq.MSets.MSetRBT <> x var
R45969:45969 Coq.MSets.MSetRBT <> n var
R45947:45949 Coq.MSets.MSetRBT BalanceProps rrt ind
R45954:45956 Coq.MSets.MSetRBT M ins def
R45960:45960 Coq.MSets.MSetRBT <> s var
R45958:45958 Coq.MSets.MSetRBT <> x var
R45951:45951 Coq.MSets.MSetRBT <> n var
R45944:45944 Coq.MSets.MSetRBT <> s var
R45926:45928 Coq.MSets.MSetRBT BalanceProps rbt ind
R45932:45932 Coq.MSets.MSetRBT <> s var
R45930:45930 Coq.MSets.MSetRBT <> n var
R46076:46087 Coq.MSets.MSetRBT BalanceProps ifred_notred thm
R46076:46087 Coq.MSets.MSetRBT BalanceProps ifred_notred thm
R46076:46087 Coq.MSets.MSetRBT BalanceProps ifred_notred thm
R46142:46153 Coq.MSets.MSetRBT BalanceProps ifred_notred thm
R46142:46153 Coq.MSets.MSetRBT BalanceProps ifred_notred thm
R46142:46153 Coq.MSets.MSetRBT BalanceProps ifred_notred thm
R46176:46178 Coq.MSets.MSetRBT M ins def
R46186:46188 Coq.MSets.MSetRBT M ins def
R46186:46188 Coq.MSets.MSetRBT M ins def
R46264:46270 Coq.MSets.MSetRBT BalanceProps lbal_rb thm
R46264:46270 Coq.MSets.MSetRBT BalanceProps lbal_rb thm
R46288:46295 Coq.MSets.MSetRBT BalanceProps ifred_or thm
R46288:46295 Coq.MSets.MSetRBT BalanceProps ifred_or thm
R46326:46332 Coq.MSets.MSetRBT BalanceProps rbal_rb thm
R46326:46332 Coq.MSets.MSetRBT BalanceProps rbal_rb thm
R46350:46357 Coq.MSets.MSetRBT BalanceProps ifred_or thm
R46350:46357 Coq.MSets.MSetRBT BalanceProps ifred_or thm
prf 46390:46396 BalanceProps ins_arb
R46413:46416 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R46417:46420 Coq.MSets.MSetRBT BalanceProps arbt ind
R46425:46427 Coq.MSets.MSetRBT M ins def
R46431:46431 Coq.MSets.MSetRBT <> s var
R46429:46429 Coq.MSets.MSetRBT <> x var
R46422:46422 Coq.MSets.MSetRBT <> n var
R46406:46408 Coq.MSets.MSetRBT BalanceProps rbt ind
R46412:46412 Coq.MSets.MSetRBT <> s var
R46410:46410 Coq.MSets.MSetRBT <> n var
R46460:46468 Coq.MSets.MSetRBT BalanceProps ins_rr_rb thm
R46474:46481 Coq.MSets.MSetRBT BalanceProps ifred_or thm
R46460:46468 Coq.MSets.MSetRBT BalanceProps ins_rr_rb thm
R46474:46481 Coq.MSets.MSetRBT BalanceProps ifred_or thm
inst 46515:46520 BalanceProps add_rb
R46533:46536 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R46537:46539 Coq.MSets.MSetRBT BalanceProps Rbt class
R46542:46544 Coq.MSets.MSetRBT M add def
R46548:46548 Coq.MSets.MSetRBT <> s var
R46546:46546 Coq.MSets.MSetRBT <> x var
R46528:46530 Coq.MSets.MSetRBT BalanceProps Rbt class
R46532:46532 Coq.MSets.MSetRBT <> s var
R46581:46583 Coq.MSets.MSetRBT M add def
R46597:46608 Coq.MSets.MSetRBT BalanceProps makeBlack_rb thm
R46614:46620 Coq.MSets.MSetRBT BalanceProps ins_arb thm
R46597:46608 Coq.MSets.MSetRBT BalanceProps makeBlack_rb thm
R46614:46620 Coq.MSets.MSetRBT BalanceProps ins_arb thm
prf 46713:46725 BalanceProps append_arb_rb
R46742:46745 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R46753:46757 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R46758:46758 Coq.Init.Logic <> ::type_scope:x_'/\'_x not
R46778:46784 Coq.Init.Logic <> ::type_scope:x_'/\'_x not
R46827:46827 Coq.Init.Logic <> ::type_scope:x_'/\'_x not
R46759:46762 Coq.MSets.MSetRBT BalanceProps arbt ind
R46767:46772 Coq.MSets.MSetRBT M append def
R46776:46776 Coq.MSets.MSetRBT <> r var
R46774:46774 Coq.MSets.MSetRBT <> l var
R46764:46764 Coq.MSets.MSetRBT <> n var
R46793:46796 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R46805:46808 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R46809:46811 Coq.MSets.MSetRBT BalanceProps rbt ind
R46816:46821 Coq.MSets.MSetRBT M append def
R46825:46825 Coq.MSets.MSetRBT <> r var
R46823:46823 Coq.MSets.MSetRBT <> l var
R46813:46813 Coq.MSets.MSetRBT <> n var
R46797:46802 Coq.MSets.MSetRBT M notred def
R46804:46804 Coq.MSets.MSetRBT <> r var
R46785:46790 Coq.MSets.MSetRBT M notred def
R46792:46792 Coq.MSets.MSetRBT <> l var
R46746:46748 Coq.MSets.MSetRBT BalanceProps rbt ind
R46752:46752 Coq.MSets.MSetRBT <> r var
R46750:46750 Coq.MSets.MSetRBT <> n var
R46735:46737 Coq.MSets.MSetRBT BalanceProps rbt ind
R46741:46741 Coq.MSets.MSetRBT <> l var
R46739:46739 Coq.MSets.MSetRBT <> n var
R46974:46988 Coq.MSets.MSetRBT M append_rr_match thm
R46974:46988 Coq.MSets.MSetRBT M append_rr_match thm
R47039:47041 Coq.MSets.MSetRBT BalanceProps rbt ind
R47046:47047 Coq.MSets.MSetRBT BalanceProps Rd syndef
R47039:47041 Coq.MSets.MSetRBT BalanceProps rbt ind
R47046:47047 Coq.MSets.MSetRBT BalanceProps Rd syndef
R47358:47372 Coq.MSets.MSetRBT M append_bb_match thm
R47358:47372 Coq.MSets.MSetRBT M append_bb_match thm
R47467:47474 Coq.MSets.MSetRBT BalanceProps lbalS_rb thm
R47467:47474 Coq.MSets.MSetRBT BalanceProps lbalS_rb thm
R47467:47474 Coq.MSets.MSetRBT BalanceProps lbalS_rb thm
prf 47535:47541 BalanceProps del_arb
prf 47601:47606 BalanceProps del_rb
R47562:47565 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R47575:47578 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R47579:47582 Coq.MSets.MSetRBT BalanceProps arbt ind
R47587:47589 Coq.MSets.MSetRBT M del def
R47593:47593 Coq.MSets.MSetRBT <> s var
R47591:47591 Coq.MSets.MSetRBT <> x var
R47584:47584 Coq.MSets.MSetRBT <> n var
R47566:47572 Coq.MSets.MSetRBT M isblack def
R47574:47574 Coq.MSets.MSetRBT <> s var
R47551:47553 Coq.MSets.MSetRBT BalanceProps rbt ind
R47561:47561 Coq.MSets.MSetRBT <> s var
R47556:47556 Coq.Init.Datatypes <> S constr
R47558:47558 Coq.MSets.MSetRBT <> n var
R47623:47626 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R47637:47640 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R47641:47643 Coq.MSets.MSetRBT BalanceProps rbt ind
R47648:47650 Coq.MSets.MSetRBT M del def
R47654:47654 Coq.MSets.MSetRBT <> s var
R47652:47652 Coq.MSets.MSetRBT <> x var
R47645:47645 Coq.MSets.MSetRBT <> n var
R47627:47634 Coq.MSets.MSetRBT M notblack def
R47636:47636 Coq.MSets.MSetRBT <> s var
R47616:47618 Coq.MSets.MSetRBT BalanceProps rbt ind
R47622:47622 Coq.MSets.MSetRBT <> s var
R47620:47620 Coq.MSets.MSetRBT <> n var
R47743:47755 Coq.MSets.MSetRBT BalanceProps append_arb_rb thm
R47743:47755 Coq.MSets.MSetRBT BalanceProps append_arb_rb thm
R47891:47899 Coq.MSets.MSetRBT BalanceProps lbalS_arb thm
R47891:47899 Coq.MSets.MSetRBT BalanceProps lbalS_arb thm
R48029:48037 Coq.MSets.MSetRBT BalanceProps rbalS_arb thm
R48029:48037 Coq.MSets.MSetRBT BalanceProps rbalS_arb thm
R48142:48154 Coq.MSets.MSetRBT BalanceProps append_arb_rb thm
R48142:48154 Coq.MSets.MSetRBT BalanceProps append_arb_rb thm
R48321:48328 Coq.MSets.MSetRBT BalanceProps lbalS_rb thm
R48321:48328 Coq.MSets.MSetRBT BalanceProps lbalS_rb thm
R48321:48328 Coq.MSets.MSetRBT BalanceProps lbalS_rb thm
R48459:48466 Coq.MSets.MSetRBT BalanceProps rbalS_rb thm
R48459:48466 Coq.MSets.MSetRBT BalanceProps rbalS_rb thm
inst 48492:48500 BalanceProps remove_rb
R48513:48516 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R48517:48519 Coq.MSets.MSetRBT BalanceProps Rbt class
R48522:48527 Coq.MSets.MSetRBT M remove def
R48531:48531 Coq.MSets.MSetRBT <> s var
R48529:48529 Coq.MSets.MSetRBT <> x var
R48508:48510 Coq.MSets.MSetRBT BalanceProps Rbt class
R48512:48512 Coq.MSets.MSetRBT <> s var
R48564:48569 Coq.MSets.MSetRBT M remove def
R48611:48622 Coq.MSets.MSetRBT BalanceProps makeBlack_rb thm
R48611:48622 Coq.MSets.MSetRBT BalanceProps makeBlack_rb thm
R48644:48655 Coq.MSets.MSetRBT BalanceProps makeBlack_rb thm
R48644:48655 Coq.MSets.MSetRBT BalanceProps makeBlack_rb thm
R48673:48678 Coq.MSets.MSetRBT BalanceProps del_rb thm
R48673:48678 Coq.MSets.MSetRBT BalanceProps del_rb thm
R48715:48726 Coq.MSets.MSetRBT BalanceProps makeBlack_rb thm
R48715:48726 Coq.MSets.MSetRBT BalanceProps makeBlack_rb thm
R48738:48744 Coq.MSets.MSetRBT BalanceProps del_arb thm
R48738:48744 Coq.MSets.MSetRBT BalanceProps del_arb thm
def 48796:48815 BalanceProps treeify_rb_invariant
R48831:48839 Coq.MSets.MSetRBT M treeify_t syndef
R48877:48882 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R48906:48911 Coq.Init.Logic <> ::type_scope:x_'/\'_x not
R48883:48885 Coq.MSets.MSetRBT BalanceProps rbt ind
R48894:48896 Coq.Init.Datatypes <> fst def
R48899:48899 Coq.MSets.MSetRBT <> f var
R48901:48903 Coq.MSets.MSetRBT <> acc var
R48887:48891 Coq.MSets.MSetRBT <> depth var
R48939:48941 Coq.Init.Logic <> ::type_scope:x_'='_x not
R48916:48918 Coq.Init.Peano <> ::nat_scope:x_'+'_x not
R48912:48915 Coq.MSets.MSetRBT <> size var
R48919:48924 Coq.Init.Datatypes <> length def
R48927:48929 Coq.Init.Datatypes <> snd def
R48932:48932 Coq.MSets.MSetRBT <> f var
R48934:48936 Coq.MSets.MSetRBT <> acc var
R48942:48947 Coq.Init.Datatypes <> length def
R48949:48951 Coq.MSets.MSetRBT <> acc var
R48863:48866 Coq.Init.Peano <> ::nat_scope:x_'<='_x not
R48859:48862 Coq.MSets.MSetRBT <> size var
R48867:48872 Coq.Init.Datatypes <> length def
R48874:48876 Coq.MSets.MSetRBT <> acc var
prf 48961:48975 BalanceProps treeify_zero_rb
R48979:48998 Coq.MSets.MSetRBT BalanceProps treeify_rb_invariant def
R49004:49015 Coq.MSets.MSetRBT M treeify_zero def
prf 49065:49078 BalanceProps treeify_one_rb
R49082:49101 Coq.MSets.MSetRBT BalanceProps treeify_rb_invariant def
R49107:49117 Coq.MSets.MSetRBT M treeify_one def
prf 49183:49197 BalanceProps treeify_cont_rb
R49255:49259 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R49290:49294 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R49319:49323 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R49324:49343 Coq.MSets.MSetRBT BalanceProps treeify_rb_invariant def
R49357:49368 Coq.MSets.MSetRBT M treeify_cont def
R49372:49372 Coq.MSets.MSetRBT <> g var
R49370:49370 Coq.MSets.MSetRBT <> f var
R49351:49351 Coq.Init.Datatypes <> S constr
R49353:49353 Coq.MSets.MSetRBT <> d var
R49345:49348 Coq.MSets.MSetRBT <> size var
R49299:49301 Coq.Init.Logic <> ::type_scope:x_'='_x not
R49295:49298 Coq.MSets.MSetRBT <> size var
R49302:49302 Coq.Init.Datatypes <> S constr
R49310:49312 Coq.Init.Peano <> ::nat_scope:x_'+'_x not
R49305:49309 Coq.MSets.MSetRBT <> size1 var
R49313:49317 Coq.MSets.MSetRBT <> size2 var
R49260:49279 Coq.MSets.MSetRBT BalanceProps treeify_rb_invariant def
R49289:49289 Coq.MSets.MSetRBT <> g var
R49287:49287 Coq.MSets.MSetRBT <> d var
R49281:49285 Coq.MSets.MSetRBT <> size2 var
R49225:49244 Coq.MSets.MSetRBT BalanceProps treeify_rb_invariant def
R49254:49254 Coq.MSets.MSetRBT <> f var
R49252:49252 Coq.MSets.MSetRBT <> d var
R49246:49250 Coq.MSets.MSetRBT <> size1 var
R49417:49428 Coq.MSets.MSetRBT M treeify_cont def
R49626:49635 Coq.Arith.PeanoNat Nat lt_nge thm
R49626:49635 Coq.Arith.PeanoNat Nat lt_nge thm
R49821:49834 Coq.Arith.PeanoNat Nat add_succ_r thm
R49840:49855 Coq.Arith.PeanoNat Nat succ_le_mono thm
R49821:49834 Coq.Arith.PeanoNat Nat add_succ_r thm
R49821:49834 Coq.Arith.PeanoNat Nat add_succ_r thm
R49840:49855 Coq.Arith.PeanoNat Nat succ_le_mono thm
R49840:49855 Coq.Arith.PeanoNat Nat succ_le_mono thm
R49869:49885 Coq.Arith.PeanoNat Nat add_le_mono_l thm
R49869:49885 Coq.Arith.PeanoNat Nat add_le_mono_l thm
R49940:49953 Coq.Arith.PeanoNat Nat add_succ_r thm
R49956:49968 Coq.Arith.PeanoNat Nat add_assoc thm
R49940:49953 Coq.Arith.PeanoNat Nat add_succ_r thm
R49940:49953 Coq.Arith.PeanoNat Nat add_succ_r thm
R49956:49968 Coq.Arith.PeanoNat Nat add_assoc thm
R49956:49968 Coq.Arith.PeanoNat Nat add_assoc thm
prf 49983:49996 BalanceProps treeify_aux_rb
R50003:50009 Coq.Init.Logic <> ::type_scope:'exists'_x_'..'_x_','_x not
R50011:50012 Coq.Init.Logic <> ::type_scope:'exists'_x_'..'_x_','_x not
R50023:50026 Coq.Init.Datatypes <> bool ind
R50032:50051 Coq.MSets.MSetRBT BalanceProps treeify_rb_invariant def
R50082:50092 Coq.MSets.MSetRBT M treeify_aux def
R50096:50096 Coq.MSets.MSetRBT <> n var
R50094:50094 Coq.MSets.MSetRBT <> b var
R50079:50079 Coq.MSets.MSetRBT <> d var
R50054:50059 Coq.MSets.MSetRBT M ifpred syndef
R50064:50073 Coq.PArith.BinPos Pos to_nat def
R50075:50075 Coq.MSets.MSetRBT <> n var
R50064:50073 Coq.PArith.BinPos Pos to_nat def
R50075:50075 Coq.MSets.MSetRBT <> n var
R50061:50061 Coq.MSets.MSetRBT <> b var
R50159:50159 Coq.Init.Datatypes <> S constr
R50159:50159 Coq.Init.Datatypes <> S constr
R50185:50199 Coq.MSets.MSetRBT BalanceProps treeify_cont_rb thm
R50215:50219 Coq.Init.Datatypes <> false constr
R50185:50199 Coq.MSets.MSetRBT BalanceProps treeify_cont_rb thm
R50215:50219 Coq.Init.Datatypes <> false constr
R50254:50267 Coq.PArith.Pnat Pos2Nat inj_xI thm
R50254:50267 Coq.PArith.Pnat Pos2Nat inj_xI thm
R50254:50267 Coq.PArith.Pnat Pos2Nat inj_xI thm
R50286:50299 Coq.PArith.Pnat Pos2Nat is_pos thm
R50286:50299 Coq.PArith.Pnat Pos2Nat is_pos thm
R50311:50324 Coq.Arith.PeanoNat Nat neq_0_lt_0 thm
R50311:50324 Coq.Arith.PeanoNat Nat neq_0_lt_0 thm
R50370:50380 Coq.Arith.PeanoNat Nat add_0_r thm
R50370:50380 Coq.Arith.PeanoNat Nat add_0_r thm
R50370:50380 Coq.Arith.PeanoNat Nat add_0_r thm
R50370:50380 Coq.Arith.PeanoNat Nat add_0_r thm
R50370:50380 Coq.Arith.PeanoNat Nat add_0_r thm
R50410:50423 Coq.Arith.PeanoNat Nat add_succ_r thm
R50426:50438 Coq.Arith.PeanoNat Nat succ_pred thm
R50410:50423 Coq.Arith.PeanoNat Nat add_succ_r thm
R50410:50423 Coq.Arith.PeanoNat Nat add_succ_r thm
R50426:50438 Coq.Arith.PeanoNat Nat succ_pred thm
R50426:50438 Coq.Arith.PeanoNat Nat succ_pred thm
R50426:50438 Coq.Arith.PeanoNat Nat succ_pred thm
R50461:50461 Coq.Init.Datatypes <> S constr
R50461:50461 Coq.Init.Datatypes <> S constr
R50487:50501 Coq.MSets.MSetRBT BalanceProps treeify_cont_rb thm
R50533:50536 Coq.Init.Datatypes <> true constr
R50487:50501 Coq.MSets.MSetRBT BalanceProps treeify_cont_rb thm
R50533:50536 Coq.Init.Datatypes <> true constr
R50555:50568 Coq.PArith.Pnat Pos2Nat inj_xO thm
R50555:50568 Coq.PArith.Pnat Pos2Nat inj_xO thm
R50555:50568 Coq.PArith.Pnat Pos2Nat inj_xO thm
R50587:50600 Coq.PArith.Pnat Pos2Nat is_pos thm
R50587:50600 Coq.PArith.Pnat Pos2Nat is_pos thm
R50612:50625 Coq.Arith.PeanoNat Nat neq_0_lt_0 thm
R50612:50625 Coq.Arith.PeanoNat Nat neq_0_lt_0 thm
R50647:50660 Coq.Arith.PeanoNat Nat add_succ_r thm
R50663:50675 Coq.Arith.PeanoNat Nat succ_pred thm
R50647:50660 Coq.Arith.PeanoNat Nat add_succ_r thm
R50647:50660 Coq.Arith.PeanoNat Nat add_succ_r thm
R50663:50675 Coq.Arith.PeanoNat Nat succ_pred thm
R50663:50675 Coq.Arith.PeanoNat Nat succ_pred thm
R50727:50737 Coq.Arith.PeanoNat Nat add_0_r thm
R50727:50737 Coq.Arith.PeanoNat Nat add_0_r thm
R50727:50737 Coq.Arith.PeanoNat Nat add_0_r thm
R50727:50737 Coq.Arith.PeanoNat Nat add_0_r thm
R50727:50737 Coq.Arith.PeanoNat Nat add_0_r thm
R50772:50785 Coq.Arith.PeanoNat Nat add_pred_l thm
R50772:50785 Coq.Arith.PeanoNat Nat add_pred_l thm
R50825:50839 Coq.MSets.MSetRBT BalanceProps treeify_zero_rb thm
R50849:50862 Coq.MSets.MSetRBT BalanceProps treeify_one_rb thm
R50825:50839 Coq.MSets.MSetRBT BalanceProps treeify_zero_rb thm
R50849:50862 Coq.MSets.MSetRBT BalanceProps treeify_one_rb thm
inst 50980:50989 BalanceProps treeify_rb
R50995:50997 Coq.MSets.MSetRBT BalanceProps Rbt class
R51000:51006 Coq.MSets.MSetRBT M treeify def
R51008:51008 Coq.MSets.MSetRBT <> l var
R51027:51033 Coq.MSets.MSetRBT M treeify def
R51047:51060 Coq.MSets.MSetRBT BalanceProps treeify_aux_rb thm
R51063:51069 Coq.MSets.MSetRBT M plength def
R51047:51060 Coq.MSets.MSetRBT BalanceProps treeify_aux_rb thm
R51063:51069 Coq.MSets.MSetRBT M plength def
R51119:51130 Coq.MSets.MSetRBT M plength_spec thm
R51119:51130 Coq.MSets.MSetRBT M plength_spec thm
R51119:51130 Coq.MSets.MSetRBT M plength_spec thm
inst 51169:51177 BalanceProps filter_rb
R51185:51187 Coq.MSets.MSetRBT BalanceProps Rbt class
R51190:51195 Coq.MSets.MSetRBT M filter def
R51199:51199 Coq.MSets.MSetRBT <> s var
R51197:51197 Coq.MSets.MSetRBT <> f var
R51218:51223 Coq.MSets.MSetRBT M filter def
inst 51250:51262 BalanceProps partition_rb1
R51270:51272 Coq.MSets.MSetRBT BalanceProps Rbt class
R51275:51277 Coq.Init.Datatypes <> fst def
R51280:51288 Coq.MSets.MSetRBT M partition def
R51292:51292 Coq.MSets.MSetRBT <> s var
R51290:51290 Coq.MSets.MSetRBT <> f var
R51312:51320 Coq.MSets.MSetRBT M partition def
R51332:51344 Coq.MSets.MSetRBT M partition_aux def
inst 51378:51390 BalanceProps partition_rb2
R51398:51400 Coq.MSets.MSetRBT BalanceProps Rbt class
R51403:51405 Coq.Init.Datatypes <> snd def
R51408:51416 Coq.MSets.MSetRBT M partition def
R51420:51420 Coq.MSets.MSetRBT <> s var
R51418:51418 Coq.MSets.MSetRBT <> f var
R51440:51448 Coq.MSets.MSetRBT M partition def
R51460:51472 Coq.MSets.MSetRBT M partition_aux def
inst 51549:51559 BalanceProps fold_add_rb
R51575:51578 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R51579:51581 Coq.MSets.MSetRBT BalanceProps Rbt class
R51584:51587 Coq.MSets.MSetRBT M fold def
R51596:51597 Coq.MSets.MSetRBT <> s2 var
R51593:51594 Coq.MSets.MSetRBT <> s1 var
R51589:51591 Coq.MSets.MSetRBT M add def
R51569:51571 Coq.MSets.MSetRBT BalanceProps Rbt class
R51573:51574 Coq.MSets.MSetRBT <> s2 var
R51625:51633 Coq.MSets.MSetRBT M fold_spec thm
R51639:51657 Coq.Lists.List <> fold_left_rev_right thm
R51625:51633 Coq.MSets.MSetRBT M fold_spec thm
R51625:51633 Coq.MSets.MSetRBT M fold_spec thm
R51639:51657 Coq.Lists.List <> fold_left_rev_right thm
R51639:51657 Coq.Lists.List <> fold_left_rev_right thm
R51667:51669 Coq.MSets.MSetRBT M elt def
R51689:51691 Coq.Lists.List <> rev def
R51694:51701 Coq.MSets.MSetRBT M elements def
R51723:51726 Coq.Program.Basics <> flip def
R51689:51691 Coq.Lists.List <> rev def
R51694:51701 Coq.MSets.MSetRBT M elements def
inst 51758:51771 BalanceProps fold_remove_rb
R51787:51790 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R51791:51793 Coq.MSets.MSetRBT BalanceProps Rbt class
R51796:51799 Coq.MSets.MSetRBT M fold def
R51811:51812 Coq.MSets.MSetRBT <> s2 var
R51808:51809 Coq.MSets.MSetRBT <> s1 var
R51801:51806 Coq.MSets.MSetRBT M remove def
R51781:51783 Coq.MSets.MSetRBT BalanceProps Rbt class
R51785:51786 Coq.MSets.MSetRBT <> s2 var
R51840:51848 Coq.MSets.MSetRBT M fold_spec thm
R51854:51872 Coq.Lists.List <> fold_left_rev_right thm
R51840:51848 Coq.MSets.MSetRBT M fold_spec thm
R51840:51848 Coq.MSets.MSetRBT M fold_spec thm
R51854:51872 Coq.Lists.List <> fold_left_rev_right thm
R51854:51872 Coq.Lists.List <> fold_left_rev_right thm
R51882:51884 Coq.MSets.MSetRBT M elt def
R51904:51906 Coq.Lists.List <> rev def
R51909:51916 Coq.MSets.MSetRBT M elements def
R51938:51941 Coq.Program.Basics <> flip def
R51904:51906 Coq.Lists.List <> rev def
R51909:51916 Coq.MSets.MSetRBT M elements def
prf 51970:51977 BalanceProps union_rb
R51993:51996 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R52003:52006 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R52007:52009 Coq.MSets.MSetRBT BalanceProps Rbt class
R52012:52016 Coq.MSets.MSetRBT M union def
R52021:52022 Coq.MSets.MSetRBT <> s2 var
R52018:52019 Coq.MSets.MSetRBT <> s1 var
R51997:51999 Coq.MSets.MSetRBT BalanceProps Rbt class
R52001:52002 Coq.MSets.MSetRBT <> s2 var
R51987:51989 Coq.MSets.MSetRBT BalanceProps Rbt class
R51991:51992 Coq.MSets.MSetRBT <> s1 var
R52049:52053 Coq.MSets.MSetRBT M union def
R52056:52067 Coq.MSets.MSetRBT M linear_union def
R52079:52092 Coq.MSets.MSetRBT M compare_height def
prf 52116:52123 BalanceProps inter_rb
R52139:52142 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R52149:52152 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R52153:52155 Coq.MSets.MSetRBT BalanceProps Rbt class
R52158:52162 Coq.MSets.MSetRBT M inter def
R52167:52168 Coq.MSets.MSetRBT <> s2 var
R52164:52165 Coq.MSets.MSetRBT <> s1 var
R52143:52145 Coq.MSets.MSetRBT BalanceProps Rbt class
R52147:52148 Coq.MSets.MSetRBT <> s2 var
R52133:52135 Coq.MSets.MSetRBT BalanceProps Rbt class
R52137:52138 Coq.MSets.MSetRBT <> s1 var
R52195:52199 Coq.MSets.MSetRBT M inter def
R52202:52213 Coq.MSets.MSetRBT M linear_inter def
R52225:52238 Coq.MSets.MSetRBT M compare_height def
prf 52262:52268 BalanceProps diff_rb
R52284:52287 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R52294:52297 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R52298:52300 Coq.MSets.MSetRBT BalanceProps Rbt class
R52303:52306 Coq.MSets.MSetRBT M diff def
R52311:52312 Coq.MSets.MSetRBT <> s2 var
R52308:52309 Coq.MSets.MSetRBT <> s1 var
R52288:52290 Coq.MSets.MSetRBT BalanceProps Rbt class
R52292:52293 Coq.MSets.MSetRBT <> s2 var
R52278:52280 Coq.MSets.MSetRBT BalanceProps Rbt class
R52282:52283 Coq.MSets.MSetRBT <> s1 var
R52339:52342 Coq.MSets.MSetRBT M diff def
R52345:52355 Coq.MSets.MSetRBT M linear_diff def
R52367:52380 Coq.MSets.MSetRBT M compare_height def
R52402:52413 Coq.MSets.MSetRBT BalanceProps <> mod
R52821:52835 Coq.MSets.MSetInterface S <> mod
R52840:52852 Coq.MSets.MSetRBT MSetRemoveMin <> mod
modtype 52798:52816 <> MSetInterface_S_Ext
R52872:52889 Coq.Structures.Orders OrderedType <> mod
R52896:52914 Coq.MSets.MSetRBT MSetInterface_S_Ext <> mod
R52933:52933 Coq.MSets.MSetRBT X <> modtype
mod 52863:52866 <> Make
mod 52944:52946 <> Make.Raw
R52957:52963 Coq.MSets.MSetRBT MakeRaw <> mod
R52965:52965 Coq.MSets.MSetRBT X <> modtype
R52972:52974 Coq.MSets.MSetRBT Make.Raw <> mod
R52986:53007 Coq.MSets.MSetInterface Raw2Sets <> modtype
R53009:53009 Coq.MSets.MSetRBT X <> modtype
R53011:53013 Coq.MSets.MSetRBT Make.Raw <> modtype
def 53029:53034 Make opt_ok
R53039:53044 Coq.Init.Datatypes <> option ind
R53050:53052 Coq.Init.Datatypes <> ::type_scope:x_'*'_x not
R53047:53049 Coq.MSets.MSetRBT Make elt def
R53053:53057 Coq.MSets.MSetRBT Make t def
R53072:53072 Coq.MSets.MSetRBT <> x var
R53079:53082 Coq.Init.Datatypes <> Some constr
R53084:53084 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R53086:53086 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R53088:53088 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R53093:53098 Coq.MSets.MSetRBT Make Ok class
R53104:53107 Coq.Init.Datatypes <> None constr
R53112:53115 Coq.Init.Logic <> True ind
def 53135:53142 Make mk_opt_t
R53148:53153 Coq.Init.Datatypes <> option ind
R53159:53161 Coq.Init.Datatypes <> ::type_scope:x_'*'_x not
R53156:53158 Coq.MSets.MSetRBT Make elt def
R53162:53166 Coq.MSets.MSetRBT Make t def
R53173:53178 Coq.MSets.MSetRBT Make opt_ok def
R53180:53180 Coq.MSets.MSetRBT <> x var
R53188:53193 Coq.Init.Datatypes <> option ind
R53199:53201 Coq.Init.Datatypes <> ::type_scope:x_'*'_x not
R53196:53198 Coq.MSets.MSetRBT Make elt def
R53202:53202 Coq.MSets.MSetRBT Make t def
R53215:53215 Coq.MSets.MSetRBT <> x var
R53237:53240 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R53241:53246 Coq.Init.Datatypes <> option ind
R53252:53254 Coq.Init.Datatypes <> ::type_scope:x_'*'_x not
R53249:53251 Coq.MSets.MSetRBT Make elt def
R53255:53255 Coq.MSets.MSetRBT Make t def
R53229:53234 Coq.MSets.MSetRBT Make opt_ok def
R53236:53236 Coq.MSets.MSetRBT <> o var
R53266:53269 Coq.Init.Datatypes <> Some constr
R53271:53271 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R53273:53273 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R53276:53276 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R53289:53294 Coq.MSets.MSetRBT Make Ok class
R53302:53305 Coq.Init.Datatypes <> Some constr
R53307:53307 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R53309:53310 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R53317:53317 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R53311:53313 Coq.MSets.MSetRBT Make Mkt constr
R53322:53325 Coq.Init.Datatypes <> None constr
R53339:53342 Coq.Init.Datatypes <> None constr
R53349:53349 Coq.MSets.MSetRBT <> P var
def 53365:53374 Make remove_min
R53380:53385 Coq.Init.Datatypes <> option ind
R53391:53393 Coq.Init.Datatypes <> ::type_scope:x_'*'_x not
R53388:53390 Coq.MSets.MSetRBT Make elt def
R53394:53394 Coq.MSets.MSetRBT Make t def
R53402:53409 Coq.MSets.MSetRBT Make mk_opt_t def
R53438:53454 Coq.MSets.MSetRBT Make remove_min_ok thm
R53456:53456 Coq.MSets.MSetRBT <> s var
R53412:53425 Coq.MSets.MSetRBT Make remove_min def
R53428:53431 Coq.MSets.MSetRBT Make this proj
R53433:53433 Coq.MSets.MSetRBT <> s var
prf 53468:53483 Make remove_min_spec1
R53522:53528 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R53547:53550 Coq.Init.Logic <> ::type_scope:x_'/\'_x not
R53538:53540 Coq.Init.Logic <> ::type_scope:x_'='_x not
R53529:53535 Coq.MSets.MSetRBT Make min_elt def
R53537:53537 Coq.MSets.MSetRBT <> s var
R53541:53544 Coq.Init.Datatypes <> Some constr
R53546:53546 Coq.MSets.MSetRBT <> x var
R53551:53555 Coq.MSets.MSetRBT Make Equal def
R53570:53571 Coq.MSets.MSetRBT <> s' var
R53558:53563 Coq.MSets.MSetRBT Make remove def
R53567:53567 Coq.MSets.MSetRBT <> s var
R53565:53565 Coq.MSets.MSetRBT <> x var
R53508:53510 Coq.Init.Logic <> ::type_scope:x_'='_x not
R53496:53505 Coq.MSets.MSetRBT Make remove_min def
R53507:53507 Coq.MSets.MSetRBT <> s var
R53511:53514 Coq.Init.Datatypes <> Some constr
R53516:53516 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R53518:53518 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R53521:53521 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R53517:53517 Coq.MSets.MSetRBT <> x var
R53519:53520 Coq.MSets.MSetRBT <> s' var
R53613:53622 Coq.MSets.MSetRBT Make remove_min def
R53625:53632 Coq.MSets.MSetRBT Make mk_opt_t def
R53635:53641 Coq.MSets.MSetRBT Make min_elt def
R53644:53649 Coq.MSets.MSetRBT Make remove def
R53652:53656 Coq.MSets.MSetRBT Make Equal def
R53659:53660 Coq.MSets.MSetRBT Make In def
R53696:53715 Coq.MSets.MSetRBT Make remove_min_spec1 thm
R53721:53722 Coq.MSets.MSetRBT <> s' var
R53719:53719 Coq.MSets.MSetRBT <> x var
R53696:53715 Coq.MSets.MSetRBT Make remove_min_spec1 thm
R53721:53722 Coq.MSets.MSetRBT <> s' var
R53719:53719 Coq.MSets.MSetRBT <> x var
R53740:53756 Coq.MSets.MSetRBT Make remove_min_ok thm
R53740:53756 Coq.MSets.MSetRBT Make remove_min_ok thm
R53786:53799 Coq.MSets.MSetRBT Make remove_min def
R53786:53799 Coq.MSets.MSetRBT Make remove_min def
prf 53929:53944 Make remove_min_spec2
R53969:53972 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R53973:53977 Coq.MSets.MSetRBT Make Empty def
R53979:53979 Coq.MSets.MSetRBT <> s var
R53962:53964 Coq.Init.Logic <> ::type_scope:x_'='_x not
R53950:53959 Coq.MSets.MSetRBT Make remove_min def
R53961:53961 Coq.MSets.MSetRBT <> s var
R53965:53968 Coq.Init.Datatypes <> None constr
R54021:54030 Coq.MSets.MSetRBT Make remove_min def
R54033:54040 Coq.MSets.MSetRBT Make mk_opt_t def
R54043:54047 Coq.MSets.MSetRBT Make Empty def
R54050:54051 Coq.MSets.MSetRBT Make In def
R54074:54093 Coq.MSets.MSetRBT Make remove_min_spec2 thm
R54074:54093 Coq.MSets.MSetRBT Make remove_min_spec2 thm
R54110:54126 Coq.MSets.MSetRBT Make remove_min_ok thm
R54110:54126 Coq.MSets.MSetRBT Make remove_min_ok thm
R54156:54169 Coq.MSets.MSetRBT Make remove_min def
R54156:54169 Coq.MSets.MSetRBT Make remove_min def
R54215:54218 Coq.MSets.MSetRBT Make <> mod
