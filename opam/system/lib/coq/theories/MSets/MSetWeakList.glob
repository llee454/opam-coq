DIGEST 3221787f18f24ed78036e75c258f9496
FCoq.MSets.MSetWeakList
R855:867 Coq.MSets.MSetInterface <> <> lib
R1220:1232 Coq.Structures.Equalities DecidableType <> mod
R1238:1241 Coq.MSets.MSetInterface WOps <> mod
R1243:1243 Coq.MSets.MSetWeakList X <> modtype
mod 1212:1214 <> Ops
def 1260:1262 Ops elt
R1267:1269 Coq.MSets.MSetWeakList X t defax
def 1285:1285 Ops t
R1290:1293 Coq.Init.Datatypes <> list ind
R1295:1297 Coq.MSets.MSetWeakList Ops elt def
def 1314:1318 Ops empty
R1322:1322 Coq.MSets.MSetWeakList Ops t def
R1327:1329 Coq.Init.Datatypes <> nil constr
def 1346:1353 Ops is_empty
R1360:1360 Coq.MSets.MSetWeakList Ops t def
R1365:1368 Coq.Init.Datatypes <> bool ind
R1376:1376 Coq.MSets.MSetWeakList <> l var
R1393:1397 Coq.Init.Datatypes <> false constr
R1383:1386 Coq.Init.Datatypes <> true constr
def 1412:1414 Ops mem
R1421:1423 Coq.MSets.MSetWeakList Ops elt def
R1431:1431 Coq.MSets.MSetWeakList Ops t def
R1436:1439 Coq.Init.Datatypes <> bool ind
R1454:1454 Coq.MSets.MSetWeakList <> s var
R1467:1469 Coq.Init.Datatypes <> nil constr
R1474:1478 Coq.Init.Datatypes <> false constr
R1487:1490 Coq.Init.Datatypes <> ::list_scope:x_'::'_x not
R1510:1517 Coq.MSets.MSetWeakList X eq_dec defax
R1519:1519 Coq.MSets.MSetWeakList <> x var
R1538:1540 Coq.MSets.MSetWeakList <> mem def
R1542:1542 Coq.MSets.MSetWeakList <> x var
R1528:1531 Coq.Init.Datatypes <> true constr
def 1567:1569 Ops add
R1576:1578 Coq.MSets.MSetWeakList Ops elt def
R1586:1586 Coq.MSets.MSetWeakList Ops t def
R1591:1591 Coq.MSets.MSetWeakList Ops t def
R1606:1606 Coq.MSets.MSetWeakList <> s var
R1619:1621 Coq.Init.Datatypes <> nil constr
R1627:1630 Coq.Init.Datatypes <> ::list_scope:x_'::'_x not
R1626:1626 Coq.MSets.MSetWeakList <> x var
R1631:1633 Coq.Init.Datatypes <> nil constr
R1642:1645 Coq.Init.Datatypes <> ::list_scope:x_'::'_x not
R1662:1669 Coq.MSets.MSetWeakList X eq_dec defax
R1671:1671 Coq.MSets.MSetWeakList <> x var
R1688:1691 Coq.Init.Datatypes <> ::list_scope:x_'::'_x not
R1692:1694 Coq.MSets.MSetWeakList <> add def
R1696:1696 Coq.MSets.MSetWeakList <> x var
R1680:1680 Coq.MSets.MSetWeakList <> s var
def 1723:1731 Ops singleton
R1738:1740 Coq.MSets.MSetWeakList Ops elt def
R1745:1745 Coq.MSets.MSetWeakList Ops t def
R1751:1754 Coq.Init.Datatypes <> ::list_scope:x_'::'_x not
R1750:1750 Coq.MSets.MSetWeakList <> x var
R1755:1757 Coq.Init.Datatypes <> nil constr
def 1772:1777 Ops remove
R1784:1786 Coq.MSets.MSetWeakList Ops elt def
R1794:1794 Coq.MSets.MSetWeakList Ops t def
R1799:1799 Coq.MSets.MSetWeakList Ops t def
R1814:1814 Coq.MSets.MSetWeakList <> s var
R1827:1829 Coq.Init.Datatypes <> nil constr
R1834:1836 Coq.Init.Datatypes <> nil constr
R1845:1848 Coq.Init.Datatypes <> ::list_scope:x_'::'_x not
R1865:1872 Coq.MSets.MSetWeakList X eq_dec defax
R1874:1874 Coq.MSets.MSetWeakList <> x var
R1891:1894 Coq.Init.Datatypes <> ::list_scope:x_'::'_x not
R1895:1900 Coq.MSets.MSetWeakList <> remove def
R1902:1902 Coq.MSets.MSetWeakList <> x var
def 1929:1932 Ops fold
R1953:1956 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R1958:1961 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R1962:1962 Coq.MSets.MSetWeakList <> B var
R1957:1957 Coq.MSets.MSetWeakList <> B var
R1950:1952 Coq.MSets.MSetWeakList Ops elt def
R1968:1971 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R1973:1976 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R1977:1977 Coq.MSets.MSetWeakList <> B var
R1972:1972 Coq.MSets.MSetWeakList <> B var
R1967:1967 Coq.MSets.MSetWeakList Ops t def
R1986:1994 Coq.Lists.List <> fold_left def
R1997:2000 Coq.Program.Basics <> flip def
R2002:2002 Coq.MSets.MSetWeakList <> f var
def 2020:2024 Ops union
R2031:2031 Coq.MSets.MSetWeakList Ops t def
R2037:2040 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R2041:2041 Coq.MSets.MSetWeakList Ops t def
R2036:2036 Coq.MSets.MSetWeakList Ops t def
R2046:2049 Coq.MSets.MSetWeakList Ops fold def
R2055:2055 Coq.MSets.MSetWeakList <> s var
R2051:2053 Coq.MSets.MSetWeakList Ops add def
def 2072:2075 Ops diff
R2085:2085 Coq.MSets.MSetWeakList Ops t def
R2090:2090 Coq.MSets.MSetWeakList Ops t def
R2095:2098 Coq.MSets.MSetWeakList Ops fold def
R2110:2110 Coq.MSets.MSetWeakList <> s var
R2107:2108 Coq.MSets.MSetWeakList <> s' var
R2100:2105 Coq.MSets.MSetWeakList Ops remove def
def 2127:2131 Ops inter
R2140:2140 Coq.MSets.MSetWeakList Ops t def
R2145:2145 Coq.MSets.MSetWeakList Ops t def
R2154:2157 Coq.MSets.MSetWeakList Ops fold def
R2206:2208 Coq.Init.Datatypes <> nil constr
R2204:2204 Coq.MSets.MSetWeakList <> s var
R2174:2176 Coq.MSets.MSetWeakList Ops mem def
R2180:2181 Coq.MSets.MSetWeakList <> s' var
R2178:2178 Coq.MSets.MSetWeakList <> x var
R2201:2201 Coq.MSets.MSetWeakList <> s var
R2188:2190 Coq.MSets.MSetWeakList Ops add def
R2194:2194 Coq.MSets.MSetWeakList <> s var
R2192:2192 Coq.MSets.MSetWeakList <> x var
def 2225:2230 Ops subset
R2240:2240 Coq.MSets.MSetWeakList Ops t def
R2245:2248 Coq.Init.Datatypes <> bool ind
R2253:2260 Coq.MSets.MSetWeakList Ops is_empty def
R2263:2266 Coq.MSets.MSetWeakList Ops diff def
R2270:2271 Coq.MSets.MSetWeakList <> s' var
R2268:2268 Coq.MSets.MSetWeakList <> s var
def 2289:2293 Ops equal
R2303:2303 Coq.MSets.MSetWeakList Ops t def
R2308:2311 Coq.Init.Datatypes <> bool ind
R2316:2319 Coq.Init.Datatypes <> andb def
R2336:2341 Coq.MSets.MSetWeakList Ops subset def
R2346:2346 Coq.MSets.MSetWeakList <> s var
R2343:2344 Coq.MSets.MSetWeakList <> s' var
R2322:2327 Coq.MSets.MSetWeakList Ops subset def
R2331:2332 Coq.MSets.MSetWeakList <> s' var
R2329:2329 Coq.MSets.MSetWeakList <> s var
def 2362:2367 Ops filter
R2377:2380 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R2381:2384 Coq.Init.Datatypes <> bool ind
R2374:2376 Coq.MSets.MSetWeakList Ops elt def
R2392:2392 Coq.MSets.MSetWeakList Ops t def
R2397:2397 Coq.MSets.MSetWeakList Ops t def
R2412:2412 Coq.MSets.MSetWeakList <> s var
R2425:2427 Coq.Init.Datatypes <> nil constr
R2432:2434 Coq.Init.Datatypes <> nil constr
R2443:2446 Coq.Init.Datatypes <> ::list_scope:x_'::'_x not
R2455:2455 Coq.MSets.MSetWeakList <> f var
R2485:2490 Coq.MSets.MSetWeakList <> filter def
R2492:2492 Coq.MSets.MSetWeakList <> f var
R2465:2468 Coq.Init.Datatypes <> ::list_scope:x_'::'_x not
R2469:2474 Coq.MSets.MSetWeakList <> filter def
R2476:2476 Coq.MSets.MSetWeakList <> f var
def 2517:2523 Ops for_all
R2533:2536 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R2537:2540 Coq.Init.Datatypes <> bool ind
R2530:2532 Coq.MSets.MSetWeakList Ops elt def
R2548:2548 Coq.MSets.MSetWeakList Ops t def
R2553:2556 Coq.Init.Datatypes <> bool ind
R2571:2571 Coq.MSets.MSetWeakList <> s var
R2584:2586 Coq.Init.Datatypes <> nil constr
R2591:2594 Coq.Init.Datatypes <> true constr
R2603:2606 Coq.Init.Datatypes <> ::list_scope:x_'::'_x not
R2615:2615 Coq.MSets.MSetWeakList <> f var
R2641:2645 Coq.Init.Datatypes <> false constr
R2624:2630 Coq.MSets.MSetWeakList <> for_all def
R2632:2632 Coq.MSets.MSetWeakList <> f var
def 2668:2674 Ops exists_
R2684:2687 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R2688:2691 Coq.Init.Datatypes <> bool ind
R2681:2683 Coq.MSets.MSetWeakList Ops elt def
R2699:2699 Coq.MSets.MSetWeakList Ops t def
R2704:2707 Coq.Init.Datatypes <> bool ind
R2722:2722 Coq.MSets.MSetWeakList <> s var
R2735:2737 Coq.Init.Datatypes <> nil constr
R2742:2746 Coq.Init.Datatypes <> false constr
R2755:2758 Coq.Init.Datatypes <> ::list_scope:x_'::'_x not
R2767:2767 Coq.MSets.MSetWeakList <> f var
R2786:2792 Coq.MSets.MSetWeakList <> exists_ def
R2794:2794 Coq.MSets.MSetWeakList <> f var
R2776:2779 Coq.Init.Datatypes <> true constr
def 2819:2827 Ops partition
R2837:2840 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R2841:2844 Coq.Init.Datatypes <> bool ind
R2834:2836 Coq.MSets.MSetWeakList Ops elt def
R2852:2852 Coq.MSets.MSetWeakList Ops t def
R2858:2860 Coq.Init.Datatypes <> ::type_scope:x_'*'_x not
R2857:2857 Coq.MSets.MSetWeakList Ops t def
R2861:2861 Coq.MSets.MSetWeakList Ops t def
R2876:2876 Coq.MSets.MSetWeakList <> s var
R2889:2891 Coq.Init.Datatypes <> nil constr
R2896:2896 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R2900:2901 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R2905:2905 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R2897:2899 Coq.Init.Datatypes <> nil constr
R2902:2904 Coq.Init.Datatypes <> nil constr
R2914:2917 Coq.Init.Datatypes <> ::list_scope:x_'::'_x not
R2947:2955 Coq.MSets.MSetWeakList <> partition def
R2957:2957 Coq.MSets.MSetWeakList <> f var
R2975:2975 Coq.MSets.MSetWeakList <> f var
R3003:3003 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R3006:3007 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R3015:3015 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R3004:3005 Coq.MSets.MSetWeakList <> s1 var
R3009:3012 Coq.Init.Datatypes <> ::list_scope:x_'::'_x not
R3013:3014 Coq.MSets.MSetWeakList <> s2 var
R2984:2984 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R2992:2993 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R2996:2996 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R2986:2989 Coq.Init.Datatypes <> ::list_scope:x_'::'_x not
R2990:2991 Coq.MSets.MSetWeakList <> s1 var
R2994:2995 Coq.MSets.MSetWeakList <> s2 var
def 3040:3047 Ops cardinal
R3054:3054 Coq.MSets.MSetWeakList Ops t def
R3059:3061 Coq.Init.Datatypes <> nat ind
R3066:3071 Coq.Init.Datatypes <> length def
R3073:3073 Coq.MSets.MSetWeakList <> s var
def 3090:3097 Ops elements
R3104:3104 Coq.MSets.MSetWeakList Ops t def
R3109:3112 Coq.Init.Datatypes <> list ind
R3114:3116 Coq.MSets.MSetWeakList Ops elt def
R3121:3121 Coq.MSets.MSetWeakList <> s var
def 3138:3143 Ops choose
R3150:3150 Coq.MSets.MSetWeakList Ops t def
R3155:3160 Coq.Init.Datatypes <> option ind
R3162:3164 Coq.MSets.MSetWeakList Ops elt def
R3180:3180 Coq.MSets.MSetWeakList <> s var
R3195:3197 Coq.Init.Datatypes <> nil constr
R3202:3205 Coq.Init.Datatypes <> None constr
R3216:3217 Coq.Init.Datatypes <> ::list_scope:x_'::'_x not
R3223:3226 Coq.Init.Datatypes <> Some constr
R3245:3247 Coq.MSets.MSetWeakList Ops <> mod
R3320:3332 Coq.Structures.Equalities DecidableType <> mod
R3338:3345 Coq.MSets.MSetInterface WRawSets <> mod
R3347:3347 Coq.MSets.MSetWeakList X <> modtype
mod 3309:3315 <> MakeRaw
R3360:3362 Coq.MSets.MSetWeakList Ops <> modtype
R3364:3364 Coq.MSets.MSetWeakList X <> modtype
sec 3378:3389 MakeRaw ForNotations
syndef 3403:3407 MakeRaw NoDup
R3413:3418 Coq.Lists.SetoidList <> NoDupA ind
R3420:3423 Coq.MSets.MSetWeakList X eq defax
syndef 3438:3439 MakeRaw In
R3445:3447 Coq.Lists.SetoidList <> InA ind
R3449:3452 Coq.MSets.MSetWeakList X eq defax
var 3521:3523 MakeRaw.ForNotations eqr
R3529:3549 Coq.Classes.RelationClasses <> Equivalence_Reflexive meth
R3555:3564 Coq.MSets.MSetWeakList X eq_equiv prfax
var 3574:3578 MakeRaw.ForNotations eqsym
R3584:3604 Coq.Classes.RelationClasses <> Equivalence_Symmetric meth
R3610:3619 Coq.MSets.MSetWeakList X eq_equiv prfax
var 3629:3635 MakeRaw.ForNotations eqtrans
R3641:3662 Coq.Classes.RelationClasses <> Equivalence_Transitive meth
R3668:3677 Coq.MSets.MSetWeakList X eq_equiv prfax
def 3747:3750 MakeRaw IsOk
R3755:3759 Coq.MSets.MSetWeakList MakeRaw NoDup syndef
ind 3771:3772 MakeRaw Ok
constr 3790:3791 MakeRaw ok
rec 3771:3772 MakeRaw Ok
proj 3790:3791 MakeRaw ok
R3777:3777 Coq.MSets.MSetWeakList MakeRaw t def
R3795:3799 Coq.MSets.MSetWeakList MakeRaw NoDup syndef
R3801:3801 Coq.MSets.MSetWeakList <> s var
R3819:3820 Coq.MSets.MSetWeakList MakeRaw Ok class
inst 3854:3861 MakeRaw NoDup_Ok
R3871:3875 Coq.MSets.MSetWeakList MakeRaw NoDup syndef
R3877:3877 Coq.MSets.MSetWeakList <> s var
R3882:3883 Coq.MSets.MSetWeakList MakeRaw Ok class
R3885:3885 Coq.MSets.MSetWeakList <> s var
R3892:3893 Coq.MSets.MSetWeakList MakeRaw ok def
R3945:3946 Coq.MSets.MSetWeakList MakeRaw Ok class
R3950:3953 Coq.Init.Datatypes <> ::list_scope:x_'::'_x not
R3945:3946 Coq.MSets.MSetWeakList MakeRaw Ok class
R3950:3953 Coq.Init.Datatypes <> ::list_scope:x_'::'_x not
R3998:3999 Coq.MSets.MSetWeakList MakeRaw Ok class
R4001:4003 Coq.Init.Datatypes <> nil constr
R3998:3999 Coq.MSets.MSetWeakList MakeRaw Ok class
R4001:4003 Coq.Init.Datatypes <> nil constr
R4036:4040 Coq.MSets.MSetWeakList MakeRaw NoDup syndef
R4036:4040 Coq.MSets.MSetWeakList MakeRaw NoDup syndef
R4061:4062 Coq.MSets.MSetWeakList MakeRaw Ok class
def 4194:4197 MakeRaw isok
R4210:4210 Coq.MSets.MSetWeakList <> l var
R4222:4224 Coq.Init.Datatypes <> nil constr
R4229:4232 Coq.Init.Datatypes <> true constr
R4240:4241 Coq.Init.Datatypes <> ::list_scope:x_'::'_x not
R4261:4264 Coq.Init.Datatypes <> ::bool_scope:x_'&&'_x not
R4247:4250 Coq.Init.Datatypes <> negb def
R4253:4255 Coq.MSets.MSetWeakList MakeRaw mem def
R4259:4259 Coq.MSets.MSetWeakList <> l var
R4265:4268 Coq.MSets.MSetWeakList <> isok def
R4270:4270 Coq.MSets.MSetWeakList <> l var
def 4293:4297 MakeRaw Equal
R4318:4320 Coq.MSets.MSetWeakList MakeRaw elt def
R4329:4333 Coq.Init.Logic <> ::type_scope:x_'<->'_x not
R4323:4324 Coq.MSets.MSetWeakList MakeRaw In syndef
R4328:4328 Coq.MSets.MSetWeakList <> s var
R4326:4326 Coq.MSets.MSetWeakList <> a var
R4334:4335 Coq.MSets.MSetWeakList MakeRaw In syndef
R4339:4340 Coq.MSets.MSetWeakList <> s' var
R4337:4337 Coq.MSets.MSetWeakList <> a var
def 4356:4361 MakeRaw Subset
R4382:4384 Coq.MSets.MSetWeakList MakeRaw elt def
R4393:4396 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R4397:4398 Coq.MSets.MSetWeakList MakeRaw In syndef
R4402:4403 Coq.MSets.MSetWeakList <> s' var
R4400:4400 Coq.MSets.MSetWeakList <> a var
R4387:4388 Coq.MSets.MSetWeakList MakeRaw In syndef
R4392:4392 Coq.MSets.MSetWeakList <> s var
R4390:4390 Coq.MSets.MSetWeakList <> a var
def 4419:4423 MakeRaw Empty
R4441:4443 Coq.MSets.MSetWeakList MakeRaw elt def
R4446:4447 Coq.Init.Logic <> ::type_scope:'~'_x not
R4448:4449 Coq.MSets.MSetWeakList MakeRaw In syndef
R4453:4453 Coq.MSets.MSetWeakList <> s var
R4451:4451 Coq.MSets.MSetWeakList <> a var
def 4469:4475 MakeRaw For_all
R4485:4488 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R4482:4484 Coq.MSets.MSetWeakList MakeRaw elt def
R4516:4519 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R4520:4520 Coq.MSets.MSetWeakList <> P var
R4522:4522 Coq.MSets.MSetWeakList <> x var
R4510:4511 Coq.MSets.MSetWeakList MakeRaw In syndef
R4515:4515 Coq.MSets.MSetWeakList <> s var
R4513:4513 Coq.MSets.MSetWeakList <> x var
def 4538:4543 MakeRaw Exists
R4553:4556 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R4550:4552 Coq.MSets.MSetWeakList MakeRaw elt def
R4568:4574 Coq.Init.Logic <> ::type_scope:'exists'_x_'..'_x_','_x not
R4576:4577 Coq.Init.Logic <> ::type_scope:'exists'_x_'..'_x_','_x not
R4584:4587 Coq.Init.Logic <> ::type_scope:x_'/\'_x not
R4578:4579 Coq.MSets.MSetWeakList MakeRaw In syndef
R4583:4583 Coq.MSets.MSetWeakList <> s var
R4581:4581 Coq.MSets.MSetWeakList <> x var
R4588:4588 Coq.MSets.MSetWeakList <> P var
R4590:4590 Coq.MSets.MSetWeakList <> x var
prf 4602:4610 MakeRaw In_compat
R4614:4619 Coq.Classes.Morphisms <> Proper class
R4639:4640 Coq.MSets.MSetWeakList MakeRaw In syndef
R4626:4628 Coq.Classes.Morphisms ProperNotations ::signature_scope:x_'==>'_x not
R4622:4625 Coq.MSets.MSetWeakList X eq defax
R4631:4633 Coq.Classes.Morphisms ProperNotations ::signature_scope:x_'==>'_x not
R4629:4630 Coq.Init.Logic <> eq ind
R4634:4636 Coq.Init.Logic <> iff def
prf 4714:4721 MakeRaw mem_spec
R4738:4739 Coq.MSets.MSetWeakList MakeRaw Ok class
R4741:4741 Coq.MSets.MSetWeakList <> s var
R4762:4766 Coq.Init.Logic <> ::type_scope:x_'<->'_x not
R4755:4757 Coq.Init.Logic <> ::type_scope:x_'='_x not
R4748:4750 Coq.MSets.MSetWeakList MakeRaw mem def
R4754:4754 Coq.MSets.MSetWeakList <> s var
R4752:4752 Coq.MSets.MSetWeakList <> x var
R4758:4761 Coq.Init.Datatypes <> true constr
R4767:4768 Coq.MSets.MSetWeakList MakeRaw In syndef
R4772:4772 Coq.MSets.MSetWeakList <> s var
R4770:4770 Coq.MSets.MSetWeakList <> x var
R4862:4869 Coq.MSets.MSetWeakList X eq_dec defax
R4862:4869 Coq.MSets.MSetWeakList X eq_dec defax
prf 4971:4978 MakeRaw isok_iff
R4996:5000 Coq.Init.Logic <> ::type_scope:x_'<->'_x not
R4992:4993 Coq.MSets.MSetWeakList MakeRaw Ok class
R4995:4995 Coq.MSets.MSetWeakList <> l var
R5007:5009 Coq.Init.Logic <> ::type_scope:x_'='_x not
R5001:5004 Coq.MSets.MSetWeakList MakeRaw isok def
R5006:5006 Coq.MSets.MSetWeakList <> l var
R5010:5013 Coq.Init.Datatypes <> true constr
R5072:5084 Coq.Bool.Bool <> andb_true_iff thm
R5072:5084 Coq.Bool.Bool <> andb_true_iff thm
R5072:5084 Coq.Bool.Bool <> andb_true_iff thm
R5097:5109 Coq.Bool.Bool <> negb_true_iff thm
R5097:5109 Coq.Bool.Bool <> negb_true_iff thm
R5097:5109 Coq.Bool.Bool <> negb_true_iff thm
R5177:5193 Coq.Bool.Bool <> not_true_is_false thm
R5177:5193 Coq.Bool.Bool <> not_true_is_false thm
R5204:5211 Coq.MSets.MSetWeakList MakeRaw mem_spec thm
R5204:5211 Coq.MSets.MSetWeakList MakeRaw mem_spec thm
R5204:5211 Coq.MSets.MSetWeakList MakeRaw mem_spec thm
R5204:5211 Coq.MSets.MSetWeakList MakeRaw mem_spec thm
R5267:5274 Coq.MSets.MSetWeakList MakeRaw mem_spec thm
R5267:5274 Coq.MSets.MSetWeakList MakeRaw mem_spec thm
R5267:5274 Coq.MSets.MSetWeakList MakeRaw mem_spec thm
R5267:5274 Coq.MSets.MSetWeakList MakeRaw mem_spec thm
inst 5321:5327 MakeRaw isok_Ok
R5346:5349 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R5350:5351 Coq.MSets.MSetWeakList MakeRaw Ok class
R5353:5353 Coq.MSets.MSetWeakList <> l var
R5339:5341 Coq.Init.Logic <> ::type_scope:x_'='_x not
R5333:5336 Coq.MSets.MSetWeakList MakeRaw isok def
R5338:5338 Coq.MSets.MSetWeakList <> l var
R5342:5345 Coq.Init.Datatypes <> true constr
R5389:5396 Coq.MSets.MSetWeakList MakeRaw isok_iff thm
R5389:5396 Coq.MSets.MSetWeakList MakeRaw isok_iff thm
prf 5421:5428 MakeRaw add_spec
R5447:5447 Coq.MSets.MSetWeakList MakeRaw t def
R5457:5459 Coq.MSets.MSetWeakList MakeRaw elt def
R5468:5469 Coq.MSets.MSetWeakList MakeRaw Ok class
R5471:5471 Coq.MSets.MSetWeakList <> s var
R5494:5498 Coq.Init.Logic <> ::type_scope:x_'<->'_x not
R5480:5481 Coq.MSets.MSetWeakList MakeRaw In syndef
R5486:5488 Coq.MSets.MSetWeakList MakeRaw add def
R5492:5492 Coq.MSets.MSetWeakList <> s var
R5490:5490 Coq.MSets.MSetWeakList <> x var
R5483:5483 Coq.MSets.MSetWeakList <> y var
R5507:5510 Coq.Init.Logic <> ::type_scope:x_'\/'_x not
R5499:5502 Coq.MSets.MSetWeakList X eq defax
R5506:5506 Coq.MSets.MSetWeakList <> x var
R5504:5504 Coq.MSets.MSetWeakList <> y var
R5511:5512 Coq.MSets.MSetWeakList MakeRaw In syndef
R5516:5516 Coq.MSets.MSetWeakList <> s var
R5514:5514 Coq.MSets.MSetWeakList <> y var
R5593:5600 Coq.MSets.MSetWeakList X eq_dec defax
R5616:5623 Coq.Lists.SetoidList <> InA_cons thm
R5593:5600 Coq.MSets.MSetWeakList X eq_dec defax
R5616:5623 Coq.Lists.SetoidList <> InA_cons thm
R5616:5623 Coq.Lists.SetoidList <> InA_cons thm
R5616:5623 Coq.Lists.SetoidList <> InA_cons thm
R5616:5623 Coq.Lists.SetoidList <> InA_cons thm
inst 5697:5702 MakeRaw add_ok
R5710:5711 Coq.MSets.MSetWeakList MakeRaw Ok class
R5713:5713 Coq.MSets.MSetWeakList <> s var
R5718:5719 Coq.MSets.MSetWeakList MakeRaw Ok class
R5722:5724 Coq.MSets.MSetWeakList MakeRaw add def
R5728:5728 Coq.MSets.MSetWeakList <> s var
R5726:5726 Coq.MSets.MSetWeakList <> x var
R5809:5816 Coq.MSets.MSetWeakList X eq_dec defax
R5809:5816 Coq.MSets.MSetWeakList X eq_dec defax
R5877:5884 Coq.MSets.MSetWeakList MakeRaw add_spec thm
R5877:5884 Coq.MSets.MSetWeakList MakeRaw add_spec thm
R5877:5884 Coq.MSets.MSetWeakList MakeRaw add_spec thm
R5877:5884 Coq.MSets.MSetWeakList MakeRaw add_spec thm
prf 5919:5929 MakeRaw remove_spec
R5948:5948 Coq.MSets.MSetWeakList MakeRaw t def
R5958:5960 Coq.MSets.MSetWeakList MakeRaw elt def
R5969:5970 Coq.MSets.MSetWeakList MakeRaw Ok class
R5972:5972 Coq.MSets.MSetWeakList <> s var
R5998:6002 Coq.Init.Logic <> ::type_scope:x_'<->'_x not
R5981:5982 Coq.MSets.MSetWeakList MakeRaw In syndef
R5987:5992 Coq.MSets.MSetWeakList MakeRaw remove def
R5996:5996 Coq.MSets.MSetWeakList <> s var
R5994:5994 Coq.MSets.MSetWeakList <> x var
R5984:5984 Coq.MSets.MSetWeakList <> y var
R6009:6012 Coq.Init.Logic <> ::type_scope:x_'/\'_x not
R6003:6004 Coq.MSets.MSetWeakList MakeRaw In syndef
R6008:6008 Coq.MSets.MSetWeakList <> s var
R6006:6006 Coq.MSets.MSetWeakList <> y var
R6013:6013 Coq.Init.Logic <> ::type_scope:'~'_x not
R6014:6017 Coq.MSets.MSetWeakList X eq defax
R6021:6021 Coq.MSets.MSetWeakList <> x var
R6019:6019 Coq.MSets.MSetWeakList <> y var
R6098:6105 Coq.MSets.MSetWeakList X eq_dec defax
R6133:6140 Coq.Lists.SetoidList <> InA_cons thm
R6098:6105 Coq.MSets.MSetWeakList X eq_dec defax
R6133:6140 Coq.Lists.SetoidList <> InA_cons thm
R6133:6140 Coq.Lists.SetoidList <> InA_cons thm
R6133:6140 Coq.Lists.SetoidList <> InA_cons thm
R6133:6140 Coq.Lists.SetoidList <> InA_cons thm
R6133:6140 Coq.Lists.SetoidList <> InA_cons thm
R6133:6140 Coq.Lists.SetoidList <> InA_cons thm
R6133:6140 Coq.Lists.SetoidList <> InA_cons thm
inst 6291:6299 MakeRaw remove_ok
R6307:6308 Coq.MSets.MSetWeakList MakeRaw Ok class
R6310:6310 Coq.MSets.MSetWeakList <> s var
R6315:6316 Coq.MSets.MSetWeakList MakeRaw Ok class
R6319:6324 Coq.MSets.MSetWeakList MakeRaw remove def
R6328:6328 Coq.MSets.MSetWeakList <> s var
R6326:6326 Coq.MSets.MSetWeakList <> x var
R6390:6397 Coq.MSets.MSetWeakList X eq_dec defax
R6390:6397 Coq.MSets.MSetWeakList X eq_dec defax
R6443:6453 Coq.MSets.MSetWeakList MakeRaw remove_spec thm
R6443:6453 Coq.MSets.MSetWeakList MakeRaw remove_spec thm
R6443:6453 Coq.MSets.MSetWeakList MakeRaw remove_spec thm
R6443:6453 Coq.MSets.MSetWeakList MakeRaw remove_spec thm
prf 6483:6494 MakeRaw singleton_ok
R6509:6511 Coq.MSets.MSetWeakList MakeRaw elt def
R6514:6515 Coq.MSets.MSetWeakList MakeRaw Ok class
R6518:6526 Coq.MSets.MSetWeakList MakeRaw singleton def
R6528:6528 Coq.MSets.MSetWeakList <> x var
R6550:6558 Coq.MSets.MSetWeakList MakeRaw singleton def
prf 6616:6629 MakeRaw singleton_spec
R6646:6648 Coq.MSets.MSetWeakList MakeRaw elt def
R6669:6673 Coq.Init.Logic <> ::type_scope:x_'<->'_x not
R6651:6652 Coq.MSets.MSetWeakList MakeRaw In syndef
R6657:6665 Coq.MSets.MSetWeakList MakeRaw singleton def
R6667:6667 Coq.MSets.MSetWeakList <> x var
R6654:6654 Coq.MSets.MSetWeakList <> y var
R6674:6677 Coq.MSets.MSetWeakList X eq defax
R6681:6681 Coq.MSets.MSetWeakList <> x var
R6679:6679 Coq.MSets.MSetWeakList <> y var
R6702:6710 Coq.MSets.MSetWeakList MakeRaw singleton def
prf 6774:6781 MakeRaw empty_ok
R6785:6786 Coq.MSets.MSetWeakList MakeRaw Ok class
R6788:6792 Coq.MSets.MSetWeakList MakeRaw empty def
R6813:6817 Coq.MSets.MSetWeakList MakeRaw empty def
prf 6850:6859 MakeRaw empty_spec
R6863:6867 Coq.MSets.MSetWeakList MakeRaw Empty def
R6869:6873 Coq.MSets.MSetWeakList MakeRaw empty def
R6894:6898 Coq.MSets.MSetWeakList MakeRaw Empty def
R6901:6905 Coq.MSets.MSetWeakList MakeRaw empty def
prf 6942:6954 MakeRaw is_empty_spec
R6969:6969 Coq.MSets.MSetWeakList MakeRaw t def
R6989:6993 Coq.Init.Logic <> ::type_scope:x_'<->'_x not
R6982:6984 Coq.Init.Logic <> ::type_scope:x_'='_x not
R6972:6979 Coq.MSets.MSetWeakList MakeRaw is_empty def
R6981:6981 Coq.MSets.MSetWeakList <> s var
R6985:6988 Coq.Init.Datatypes <> true constr
R6994:6998 Coq.MSets.MSetWeakList MakeRaw Empty def
R7000:7000 Coq.MSets.MSetWeakList <> s var
R7021:7025 Coq.MSets.MSetWeakList MakeRaw Empty def
prf 7134:7147 MakeRaw elements_spec1
R7163:7163 Coq.MSets.MSetWeakList MakeRaw t def
R7171:7173 Coq.MSets.MSetWeakList MakeRaw elt def
R7194:7198 Coq.Init.Logic <> ::type_scope:x_'<->'_x not
R7177:7178 Coq.MSets.MSetWeakList MakeRaw In syndef
R7183:7190 Coq.MSets.MSetWeakList MakeRaw elements def
R7192:7192 Coq.MSets.MSetWeakList <> s var
R7180:7180 Coq.MSets.MSetWeakList <> x var
R7199:7200 Coq.MSets.MSetWeakList MakeRaw In syndef
R7204:7204 Coq.MSets.MSetWeakList <> s var
R7202:7202 Coq.MSets.MSetWeakList <> x var
R7225:7232 Coq.MSets.MSetWeakList MakeRaw elements def
prf 7262:7276 MakeRaw elements_spec2w
R7292:7292 Coq.MSets.MSetWeakList MakeRaw t def
R7301:7302 Coq.MSets.MSetWeakList MakeRaw Ok class
R7304:7304 Coq.MSets.MSetWeakList <> s var
R7308:7312 Coq.MSets.MSetWeakList MakeRaw NoDup syndef
R7315:7322 Coq.MSets.MSetWeakList MakeRaw elements def
R7324:7324 Coq.MSets.MSetWeakList <> s var
R7346:7353 Coq.MSets.MSetWeakList MakeRaw elements def
prf 7378:7386 MakeRaw fold_spec
R7405:7405 Coq.MSets.MSetWeakList MakeRaw t def
R7424:7424 Coq.MSets.MSetWeakList <> A var
R7435:7438 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R7440:7443 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R7444:7444 Coq.MSets.MSetWeakList <> A var
R7439:7439 Coq.MSets.MSetWeakList <> A var
R7432:7434 Coq.MSets.MSetWeakList MakeRaw elt def
R7461:7463 Coq.Init.Logic <> ::type_scope:x_'='_x not
R7451:7454 Coq.MSets.MSetWeakList MakeRaw fold def
R7460:7460 Coq.MSets.MSetWeakList <> i var
R7458:7458 Coq.MSets.MSetWeakList <> s var
R7456:7456 Coq.MSets.MSetWeakList <> f var
R7464:7472 Coq.Lists.List <> fold_left def
R7496:7496 Coq.MSets.MSetWeakList <> i var
R7484:7491 Coq.MSets.MSetWeakList MakeRaw elements def
R7493:7493 Coq.MSets.MSetWeakList <> s var
R7475:7478 Coq.Program.Basics <> flip def
R7480:7480 Coq.MSets.MSetWeakList <> f var
inst 7549:7556 MakeRaw union_ok
R7574:7575 Coq.MSets.MSetWeakList MakeRaw Ok class
R7577:7577 Coq.MSets.MSetWeakList <> s var
R7580:7581 Coq.MSets.MSetWeakList MakeRaw Ok class
R7583:7584 Coq.MSets.MSetWeakList <> s' var
R7588:7589 Coq.MSets.MSetWeakList MakeRaw Ok class
R7592:7596 Coq.MSets.MSetWeakList MakeRaw union def
R7600:7601 Coq.MSets.MSetWeakList <> s' var
R7598:7598 Coq.MSets.MSetWeakList <> s var
R7662:7665 Coq.Program.Basics <> flip def
prf 7697:7706 MakeRaw union_spec
R7728:7728 Coq.MSets.MSetWeakList MakeRaw t def
R7736:7738 Coq.MSets.MSetWeakList MakeRaw elt def
R7747:7748 Coq.MSets.MSetWeakList MakeRaw Ok class
R7750:7750 Coq.MSets.MSetWeakList <> s var
R7760:7761 Coq.MSets.MSetWeakList MakeRaw Ok class
R7763:7764 Coq.MSets.MSetWeakList <> s' var
R7788:7792 Coq.Init.Logic <> ::type_scope:x_'<->'_x not
R7771:7772 Coq.MSets.MSetWeakList MakeRaw In syndef
R7777:7781 Coq.MSets.MSetWeakList MakeRaw union def
R7785:7786 Coq.MSets.MSetWeakList <> s' var
R7783:7783 Coq.MSets.MSetWeakList <> s var
R7774:7774 Coq.MSets.MSetWeakList <> x var
R7799:7802 Coq.Init.Logic <> ::type_scope:x_'\/'_x not
R7793:7794 Coq.MSets.MSetWeakList MakeRaw In syndef
R7798:7798 Coq.MSets.MSetWeakList <> s var
R7796:7796 Coq.MSets.MSetWeakList <> x var
R7803:7804 Coq.MSets.MSetWeakList MakeRaw In syndef
R7808:7809 Coq.MSets.MSetWeakList <> s' var
R7806:7806 Coq.MSets.MSetWeakList <> x var
R7855:7858 Coq.Program.Basics <> flip def
R7913:7920 Coq.MSets.MSetWeakList MakeRaw add_spec thm
R7923:7930 Coq.Lists.SetoidList <> InA_cons thm
R7913:7920 Coq.MSets.MSetWeakList MakeRaw add_spec thm
R7913:7920 Coq.MSets.MSetWeakList MakeRaw add_spec thm
R7913:7920 Coq.MSets.MSetWeakList MakeRaw add_spec thm
R7923:7930 Coq.Lists.SetoidList <> InA_cons thm
R7923:7930 Coq.Lists.SetoidList <> InA_cons thm
inst 7970:7977 MakeRaw inter_ok
R7986:7987 Coq.MSets.MSetWeakList MakeRaw Ok class
R7989:7989 Coq.MSets.MSetWeakList <> s var
R7992:7993 Coq.MSets.MSetWeakList MakeRaw Ok class
R7995:7996 Coq.MSets.MSetWeakList <> s' var
R8001:8002 Coq.MSets.MSetWeakList MakeRaw Ok class
R8005:8009 Coq.MSets.MSetWeakList MakeRaw inter def
R8013:8014 Coq.MSets.MSetWeakList <> s' var
R8011:8011 Coq.MSets.MSetWeakList <> s var
R8036:8040 Coq.MSets.MSetWeakList MakeRaw inter def
R8043:8046 Coq.MSets.MSetWeakList MakeRaw fold def
R8049:8052 Coq.Program.Basics <> flip def
R8069:8071 Coq.Init.Datatypes <> nil constr
R8077:8079 Coq.MSets.MSetWeakList MakeRaw elt def
R8069:8071 Coq.Init.Datatypes <> nil constr
R8077:8079 Coq.MSets.MSetWeakList MakeRaw elt def
R8101:8102 Coq.MSets.MSetWeakList MakeRaw Ok class
R8101:8102 Coq.MSets.MSetWeakList MakeRaw Ok class
R8232:8234 Coq.MSets.MSetWeakList MakeRaw mem def
R8232:8234 Coq.MSets.MSetWeakList MakeRaw mem def
prf 8272:8281 MakeRaw inter_spec
R8304:8304 Coq.MSets.MSetWeakList MakeRaw t def
R8312:8314 Coq.MSets.MSetWeakList MakeRaw elt def
R8323:8324 Coq.MSets.MSetWeakList MakeRaw Ok class
R8326:8326 Coq.MSets.MSetWeakList <> s var
R8336:8337 Coq.MSets.MSetWeakList MakeRaw Ok class
R8339:8340 Coq.MSets.MSetWeakList <> s' var
R8364:8368 Coq.Init.Logic <> ::type_scope:x_'<->'_x not
R8347:8348 Coq.MSets.MSetWeakList MakeRaw In syndef
R8353:8357 Coq.MSets.MSetWeakList MakeRaw inter def
R8361:8362 Coq.MSets.MSetWeakList <> s' var
R8359:8359 Coq.MSets.MSetWeakList <> s var
R8350:8350 Coq.MSets.MSetWeakList <> x var
R8375:8378 Coq.Init.Logic <> ::type_scope:x_'/\'_x not
R8369:8370 Coq.MSets.MSetWeakList MakeRaw In syndef
R8374:8374 Coq.MSets.MSetWeakList <> s var
R8372:8372 Coq.MSets.MSetWeakList <> x var
R8379:8380 Coq.MSets.MSetWeakList MakeRaw In syndef
R8384:8385 Coq.MSets.MSetWeakList <> s' var
R8382:8382 Coq.MSets.MSetWeakList <> x var
R8406:8410 Coq.MSets.MSetWeakList MakeRaw inter def
R8413:8416 Coq.MSets.MSetWeakList MakeRaw fold def
R8419:8422 Coq.Program.Basics <> flip def
R8447:8449 Coq.Init.Datatypes <> nil constr
R8455:8457 Coq.MSets.MSetWeakList MakeRaw elt def
R8447:8449 Coq.Init.Datatypes <> nil constr
R8455:8457 Coq.MSets.MSetWeakList MakeRaw elt def
R8484:8485 Coq.MSets.MSetWeakList MakeRaw Ok class
R8484:8485 Coq.MSets.MSetWeakList MakeRaw Ok class
R8525:8525 Coq.Init.Logic <> ::type_scope:x_'<->'_x not
R8543:8548 Coq.Init.Logic <> ::type_scope:x_'<->'_x not
R8532:8535 Coq.Init.Logic <> ::type_scope:x_'/\'_x not
R8526:8527 Coq.MSets.MSetWeakList MakeRaw In syndef
R8536:8537 Coq.MSets.MSetWeakList MakeRaw In syndef
R8549:8549 Coq.Init.Logic <> ::type_scope:x_'\/'_x not
R8567:8571 Coq.Init.Logic <> ::type_scope:x_'\/'_x not
R8556:8559 Coq.Init.Logic <> ::type_scope:x_'/\'_x not
R8550:8551 Coq.MSets.MSetWeakList MakeRaw In syndef
R8560:8561 Coq.MSets.MSetWeakList MakeRaw In syndef
R8572:8573 Coq.MSets.MSetWeakList MakeRaw In syndef
R8525:8525 Coq.Init.Logic <> ::type_scope:x_'<->'_x not
R8543:8548 Coq.Init.Logic <> ::type_scope:x_'<->'_x not
R8532:8535 Coq.Init.Logic <> ::type_scope:x_'/\'_x not
R8526:8527 Coq.MSets.MSetWeakList MakeRaw In syndef
R8536:8537 Coq.MSets.MSetWeakList MakeRaw In syndef
R8549:8549 Coq.Init.Logic <> ::type_scope:x_'\/'_x not
R8567:8571 Coq.Init.Logic <> ::type_scope:x_'\/'_x not
R8556:8559 Coq.Init.Logic <> ::type_scope:x_'/\'_x not
R8550:8551 Coq.MSets.MSetWeakList MakeRaw In syndef
R8560:8561 Coq.MSets.MSetWeakList MakeRaw In syndef
R8572:8573 Coq.MSets.MSetWeakList MakeRaw In syndef
R8757:8759 Coq.MSets.MSetWeakList MakeRaw mem def
R8757:8759 Coq.MSets.MSetWeakList MakeRaw mem def
R8794:8801 Coq.MSets.MSetWeakList MakeRaw add_spec thm
R8804:8811 Coq.Lists.SetoidList <> InA_cons thm
R8794:8801 Coq.MSets.MSetWeakList MakeRaw add_spec thm
R8794:8801 Coq.MSets.MSetWeakList MakeRaw add_spec thm
R8794:8801 Coq.MSets.MSetWeakList MakeRaw add_spec thm
R8804:8811 Coq.Lists.SetoidList <> InA_cons thm
R8804:8811 Coq.Lists.SetoidList <> InA_cons thm
R8835:8842 Coq.MSets.MSetWeakList MakeRaw mem_spec thm
R8835:8842 Coq.MSets.MSetWeakList MakeRaw mem_spec thm
R8835:8842 Coq.MSets.MSetWeakList MakeRaw mem_spec thm
R8835:8842 Coq.MSets.MSetWeakList MakeRaw mem_spec thm
R8911:8918 Coq.Lists.SetoidList <> InA_cons thm
R8911:8918 Coq.Lists.SetoidList <> InA_cons thm
R8911:8918 Coq.Lists.SetoidList <> InA_cons thm
R8949:8956 Coq.MSets.MSetWeakList MakeRaw mem_spec thm
R8949:8956 Coq.MSets.MSetWeakList MakeRaw mem_spec thm
R8949:8956 Coq.MSets.MSetWeakList MakeRaw mem_spec thm
R8949:8956 Coq.MSets.MSetWeakList MakeRaw mem_spec thm
inst 9009:9015 MakeRaw diff_ok
R9033:9034 Coq.MSets.MSetWeakList MakeRaw Ok class
R9036:9036 Coq.MSets.MSetWeakList <> s var
R9039:9040 Coq.MSets.MSetWeakList MakeRaw Ok class
R9042:9043 Coq.MSets.MSetWeakList <> s' var
R9047:9048 Coq.MSets.MSetWeakList MakeRaw Ok class
R9051:9054 Coq.MSets.MSetWeakList MakeRaw diff def
R9058:9059 Coq.MSets.MSetWeakList <> s' var
R9056:9056 Coq.MSets.MSetWeakList <> s var
R9081:9084 Coq.MSets.MSetWeakList MakeRaw diff def
R9140:9143 Coq.Program.Basics <> flip def
prf 9194:9202 MakeRaw diff_spec
R9225:9225 Coq.MSets.MSetWeakList MakeRaw t def
R9233:9235 Coq.MSets.MSetWeakList MakeRaw elt def
R9244:9245 Coq.MSets.MSetWeakList MakeRaw Ok class
R9247:9247 Coq.MSets.MSetWeakList <> s var
R9257:9258 Coq.MSets.MSetWeakList MakeRaw Ok class
R9260:9261 Coq.MSets.MSetWeakList <> s' var
R9284:9288 Coq.Init.Logic <> ::type_scope:x_'<->'_x not
R9268:9269 Coq.MSets.MSetWeakList MakeRaw In syndef
R9274:9277 Coq.MSets.MSetWeakList MakeRaw diff def
R9281:9282 Coq.MSets.MSetWeakList <> s' var
R9279:9279 Coq.MSets.MSetWeakList <> s var
R9271:9271 Coq.MSets.MSetWeakList <> x var
R9295:9298 Coq.Init.Logic <> ::type_scope:x_'/\'_x not
R9289:9290 Coq.MSets.MSetWeakList MakeRaw In syndef
R9294:9294 Coq.MSets.MSetWeakList <> s var
R9292:9292 Coq.MSets.MSetWeakList <> x var
R9299:9299 Coq.Init.Logic <> ::type_scope:'~'_x not
R9300:9301 Coq.MSets.MSetWeakList MakeRaw In syndef
R9305:9306 Coq.MSets.MSetWeakList <> s' var
R9303:9303 Coq.MSets.MSetWeakList <> x var
R9327:9330 Coq.MSets.MSetWeakList MakeRaw diff def
R9386:9389 Coq.Program.Basics <> flip def
R9441:9451 Coq.MSets.MSetWeakList MakeRaw remove_spec thm
R9454:9461 Coq.Lists.SetoidList <> InA_cons thm
R9441:9451 Coq.MSets.MSetWeakList MakeRaw remove_spec thm
R9441:9451 Coq.MSets.MSetWeakList MakeRaw remove_spec thm
R9441:9451 Coq.MSets.MSetWeakList MakeRaw remove_spec thm
R9454:9461 Coq.Lists.SetoidList <> InA_cons thm
R9454:9461 Coq.Lists.SetoidList <> InA_cons thm
prf 9491:9501 MakeRaw subset_spec
R9523:9523 Coq.MSets.MSetWeakList MakeRaw t def
R9532:9533 Coq.MSets.MSetWeakList MakeRaw Ok class
R9535:9535 Coq.MSets.MSetWeakList <> s var
R9545:9546 Coq.MSets.MSetWeakList MakeRaw Ok class
R9548:9549 Coq.MSets.MSetWeakList <> s' var
R9574:9578 Coq.Init.Logic <> ::type_scope:x_'<->'_x not
R9567:9569 Coq.Init.Logic <> ::type_scope:x_'='_x not
R9556:9561 Coq.MSets.MSetWeakList MakeRaw subset def
R9565:9566 Coq.MSets.MSetWeakList <> s' var
R9563:9563 Coq.MSets.MSetWeakList <> s var
R9570:9573 Coq.Init.Datatypes <> true constr
R9579:9584 Coq.MSets.MSetWeakList MakeRaw Subset def
R9588:9589 Coq.MSets.MSetWeakList <> s' var
R9586:9586 Coq.MSets.MSetWeakList <> s var
R9610:9615 Coq.MSets.MSetWeakList MakeRaw subset def
R9618:9623 Coq.MSets.MSetWeakList MakeRaw Subset def
R9644:9656 Coq.MSets.MSetWeakList MakeRaw is_empty_spec thm
R9644:9656 Coq.MSets.MSetWeakList MakeRaw is_empty_spec thm
R9644:9656 Coq.MSets.MSetWeakList MakeRaw is_empty_spec thm
R9668:9672 Coq.MSets.MSetWeakList MakeRaw Empty def
R9724:9732 Coq.MSets.MSetWeakList MakeRaw diff_spec thm
R9724:9732 Coq.MSets.MSetWeakList MakeRaw diff_spec thm
R9724:9732 Coq.MSets.MSetWeakList MakeRaw diff_spec thm
R9724:9732 Coq.MSets.MSetWeakList MakeRaw diff_spec thm
R9724:9732 Coq.MSets.MSetWeakList MakeRaw diff_spec thm
R9765:9772 Coq.MSets.MSetWeakList MakeRaw mem_spec thm
R9765:9772 Coq.MSets.MSetWeakList MakeRaw mem_spec thm
R9765:9772 Coq.MSets.MSetWeakList MakeRaw mem_spec thm
R9798:9800 Coq.MSets.MSetWeakList MakeRaw mem def
R9798:9800 Coq.MSets.MSetWeakList MakeRaw mem def
R9830:9838 Coq.MSets.MSetWeakList MakeRaw diff_spec thm
R9830:9838 Coq.MSets.MSetWeakList MakeRaw diff_spec thm
R9830:9838 Coq.MSets.MSetWeakList MakeRaw diff_spec thm
R9830:9838 Coq.MSets.MSetWeakList MakeRaw diff_spec thm
R9830:9838 Coq.MSets.MSetWeakList MakeRaw diff_spec thm
prf 9874:9883 MakeRaw equal_spec
R9905:9905 Coq.MSets.MSetWeakList MakeRaw t def
R9914:9915 Coq.MSets.MSetWeakList MakeRaw Ok class
R9917:9917 Coq.MSets.MSetWeakList <> s var
R9927:9928 Coq.MSets.MSetWeakList MakeRaw Ok class
R9930:9931 Coq.MSets.MSetWeakList <> s' var
R9955:9959 Coq.Init.Logic <> ::type_scope:x_'<->'_x not
R9948:9950 Coq.Init.Logic <> ::type_scope:x_'='_x not
R9938:9942 Coq.MSets.MSetWeakList MakeRaw equal def
R9946:9947 Coq.MSets.MSetWeakList <> s' var
R9944:9944 Coq.MSets.MSetWeakList <> s var
R9951:9954 Coq.Init.Datatypes <> true constr
R9960:9964 Coq.MSets.MSetWeakList MakeRaw Equal def
R9968:9969 Coq.MSets.MSetWeakList <> s' var
R9966:9966 Coq.MSets.MSetWeakList <> s var
R9990:9994 Coq.MSets.MSetWeakList MakeRaw Equal def
R9997:10001 Coq.MSets.MSetWeakList MakeRaw equal def
R10022:10034 Coq.Bool.Bool <> andb_true_iff thm
R10038:10048 Coq.MSets.MSetWeakList MakeRaw subset_spec thm
R10022:10034 Coq.Bool.Bool <> andb_true_iff thm
R10022:10034 Coq.Bool.Bool <> andb_true_iff thm
R10038:10048 Coq.MSets.MSetWeakList MakeRaw subset_spec thm
R10038:10048 Coq.MSets.MSetWeakList MakeRaw subset_spec thm
R10038:10048 Coq.MSets.MSetWeakList MakeRaw subset_spec thm
R10038:10048 Coq.MSets.MSetWeakList MakeRaw subset_spec thm
R10060:10065 Coq.MSets.MSetWeakList MakeRaw Subset def
def 10137:10148 MakeRaw choose_spec1
R10168:10168 Coq.MSets.MSetWeakList MakeRaw t def
R10176:10178 Coq.MSets.MSetWeakList MakeRaw elt def
R10199:10202 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R10203:10204 Coq.MSets.MSetWeakList MakeRaw In syndef
R10208:10208 Coq.MSets.MSetWeakList <> s var
R10206:10206 Coq.MSets.MSetWeakList <> x var
R10190:10192 Coq.Init.Logic <> ::type_scope:x_'='_x not
R10182:10187 Coq.MSets.MSetWeakList MakeRaw choose def
R10189:10189 Coq.MSets.MSetWeakList <> s var
R10193:10196 Coq.Init.Datatypes <> Some constr
R10198:10198 Coq.MSets.MSetWeakList <> x var
def 10289:10300 MakeRaw choose_spec2
R10315:10315 Coq.MSets.MSetWeakList MakeRaw t def
R10333:10336 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R10337:10341 Coq.MSets.MSetWeakList MakeRaw Empty def
R10343:10343 Coq.MSets.MSetWeakList <> s var
R10326:10328 Coq.Init.Logic <> ::type_scope:x_'='_x not
R10318:10323 Coq.MSets.MSetWeakList MakeRaw choose def
R10325:10325 Coq.MSets.MSetWeakList <> s var
R10329:10332 Coq.Init.Datatypes <> None constr
prf 10444:10456 MakeRaw cardinal_spec
R10475:10475 Coq.MSets.MSetWeakList MakeRaw t def
R10484:10485 Coq.MSets.MSetWeakList MakeRaw Ok class
R10487:10487 Coq.MSets.MSetWeakList <> s var
R10501:10503 Coq.Init.Logic <> ::type_scope:x_'='_x not
R10491:10498 Coq.MSets.MSetWeakList MakeRaw cardinal def
R10500:10500 Coq.MSets.MSetWeakList <> s var
R10504:10509 Coq.Init.Datatypes <> length def
R10512:10519 Coq.MSets.MSetWeakList MakeRaw elements def
R10521:10521 Coq.MSets.MSetWeakList <> s var
prf 10558:10569 MakeRaw filter_spec'
R10607:10610 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R10611:10612 Coq.MSets.MSetWeakList MakeRaw In syndef
R10616:10616 Coq.MSets.MSetWeakList <> s var
R10614:10614 Coq.MSets.MSetWeakList <> x var
R10590:10591 Coq.MSets.MSetWeakList MakeRaw In syndef
R10596:10601 Coq.MSets.MSetWeakList MakeRaw filter def
R10605:10605 Coq.MSets.MSetWeakList <> s var
R10603:10603 Coq.MSets.MSetWeakList <> f var
R10593:10593 Coq.MSets.MSetWeakList <> x var
prf 10740:10750 MakeRaw filter_spec
R10769:10769 Coq.MSets.MSetWeakList MakeRaw t def
R10777:10779 Coq.MSets.MSetWeakList MakeRaw elt def
R10790:10793 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R10794:10797 Coq.Init.Datatypes <> bool ind
R10787:10789 Coq.MSets.MSetWeakList MakeRaw elt def
R10824:10831 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R10874:10874 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R10849:10853 Coq.Init.Logic <> ::type_scope:x_'<->'_x not
R10832:10833 Coq.MSets.MSetWeakList MakeRaw In syndef
R10838:10843 Coq.MSets.MSetWeakList MakeRaw filter def
R10847:10847 Coq.MSets.MSetWeakList <> s var
R10845:10845 Coq.MSets.MSetWeakList <> f var
R10835:10835 Coq.MSets.MSetWeakList <> x var
R10860:10863 Coq.Init.Logic <> ::type_scope:x_'/\'_x not
R10854:10855 Coq.MSets.MSetWeakList MakeRaw In syndef
R10859:10859 Coq.MSets.MSetWeakList <> s var
R10857:10857 Coq.MSets.MSetWeakList <> x var
R10867:10869 Coq.Init.Logic <> ::type_scope:x_'='_x not
R10864:10864 Coq.MSets.MSetWeakList <> f var
R10866:10866 Coq.MSets.MSetWeakList <> x var
R10870:10873 Coq.Init.Datatypes <> true constr
R10804:10809 Coq.Classes.Morphisms <> Proper class
R10823:10823 Coq.MSets.MSetWeakList <> f var
R10816:10818 Coq.Classes.Morphisms ProperNotations ::signature_scope:x_'==>'_x not
R10812:10815 Coq.MSets.MSetWeakList X eq defax
R10819:10820 Coq.Init.Logic <> eq ind
R10969:10976 Coq.Lists.SetoidList <> InA_cons thm
R10969:10976 Coq.Lists.SetoidList <> InA_cons thm
R10969:10976 Coq.Lists.SetoidList <> InA_cons thm
R10969:10976 Coq.Lists.SetoidList <> InA_cons thm
R10969:10976 Coq.Lists.SetoidList <> InA_cons thm
R10969:10976 Coq.Lists.SetoidList <> InA_cons thm
R10969:10976 Coq.Lists.SetoidList <> InA_cons thm
R10969:10976 Coq.Lists.SetoidList <> InA_cons thm
inst 11104:11112 MakeRaw filter_ok
R11120:11121 Coq.MSets.MSetWeakList MakeRaw Ok class
R11123:11123 Coq.MSets.MSetWeakList <> s var
R11128:11129 Coq.MSets.MSetWeakList MakeRaw Ok class
R11132:11137 Coq.MSets.MSetWeakList MakeRaw filter def
R11141:11141 Coq.MSets.MSetWeakList <> s var
R11139:11139 Coq.MSets.MSetWeakList <> f var
R11267:11278 Coq.MSets.MSetWeakList MakeRaw filter_spec' thm
R11267:11278 Coq.MSets.MSetWeakList MakeRaw filter_spec' thm
prf 11304:11315 MakeRaw for_all_spec
R11334:11334 Coq.MSets.MSetWeakList MakeRaw t def
R11345:11348 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R11349:11352 Coq.Init.Datatypes <> bool ind
R11342:11344 Coq.MSets.MSetWeakList MakeRaw elt def
R11379:11386 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R11441:11441 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R11405:11409 Coq.Init.Logic <> ::type_scope:x_'<->'_x not
R11398:11400 Coq.Init.Logic <> ::type_scope:x_'='_x not
R11387:11393 Coq.MSets.MSetWeakList MakeRaw for_all def
R11397:11397 Coq.MSets.MSetWeakList <> s var
R11395:11395 Coq.MSets.MSetWeakList <> f var
R11401:11404 Coq.Init.Datatypes <> true constr
R11410:11416 Coq.MSets.MSetWeakList MakeRaw For_all def
R11440:11440 Coq.MSets.MSetWeakList <> s var
R11431:11433 Coq.Init.Logic <> ::type_scope:x_'='_x not
R11428:11428 Coq.MSets.MSetWeakList <> f var
R11430:11430 Coq.MSets.MSetWeakList <> x var
R11434:11437 Coq.Init.Datatypes <> true constr
R11359:11364 Coq.Classes.Morphisms <> Proper class
R11378:11378 Coq.MSets.MSetWeakList <> f var
R11371:11373 Coq.Classes.Morphisms ProperNotations ::signature_scope:x_'==>'_x not
R11367:11370 Coq.MSets.MSetWeakList X eq defax
R11374:11375 Coq.Init.Logic <> eq ind
R11462:11468 Coq.MSets.MSetWeakList MakeRaw For_all def
prf 11715:11725 MakeRaw exists_spec
R11744:11744 Coq.MSets.MSetWeakList MakeRaw t def
R11755:11758 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R11759:11762 Coq.Init.Datatypes <> bool ind
R11752:11754 Coq.MSets.MSetWeakList MakeRaw elt def
R11789:11796 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R11850:11850 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R11815:11819 Coq.Init.Logic <> ::type_scope:x_'<->'_x not
R11808:11810 Coq.Init.Logic <> ::type_scope:x_'='_x not
R11797:11803 Coq.MSets.MSetWeakList MakeRaw exists_ def
R11807:11807 Coq.MSets.MSetWeakList <> s var
R11805:11805 Coq.MSets.MSetWeakList <> f var
R11811:11814 Coq.Init.Datatypes <> true constr
R11820:11825 Coq.MSets.MSetWeakList MakeRaw Exists def
R11849:11849 Coq.MSets.MSetWeakList <> s var
R11840:11842 Coq.Init.Logic <> ::type_scope:x_'='_x not
R11837:11837 Coq.MSets.MSetWeakList <> f var
R11839:11839 Coq.MSets.MSetWeakList <> x var
R11843:11846 Coq.Init.Datatypes <> true constr
R11769:11774 Coq.Classes.Morphisms <> Proper class
R11788:11788 Coq.MSets.MSetWeakList <> f var
R11781:11783 Coq.Classes.Morphisms ProperNotations ::signature_scope:x_'==>'_x not
R11777:11780 Coq.MSets.MSetWeakList X eq defax
R11784:11785 Coq.Init.Logic <> eq ind
R11871:11876 Coq.MSets.MSetWeakList MakeRaw Exists def
prf 12135:12149 MakeRaw partition_spec1
R12168:12168 Coq.MSets.MSetWeakList MakeRaw t def
R12179:12182 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R12183:12186 Coq.Init.Datatypes <> bool ind
R12176:12178 Coq.MSets.MSetWeakList MakeRaw elt def
R12213:12219 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R12220:12224 Coq.MSets.MSetWeakList MakeRaw Equal def
R12249:12254 Coq.MSets.MSetWeakList MakeRaw filter def
R12258:12258 Coq.MSets.MSetWeakList <> s var
R12256:12256 Coq.MSets.MSetWeakList <> f var
R12227:12229 Coq.Init.Datatypes <> fst def
R12232:12240 Coq.MSets.MSetWeakList MakeRaw partition def
R12244:12244 Coq.MSets.MSetWeakList <> s var
R12242:12242 Coq.MSets.MSetWeakList <> f var
R12193:12198 Coq.Classes.Morphisms <> Proper class
R12212:12212 Coq.MSets.MSetWeakList <> f var
R12205:12207 Coq.Classes.Morphisms ProperNotations ::signature_scope:x_'==>'_x not
R12201:12204 Coq.MSets.MSetWeakList X eq defax
R12208:12209 Coq.Init.Logic <> eq ind
R12313:12317 Coq.MSets.MSetWeakList MakeRaw Equal def
R12404:12412 Coq.MSets.MSetWeakList MakeRaw partition def
R12404:12412 Coq.MSets.MSetWeakList MakeRaw partition def
prf 12532:12546 MakeRaw partition_spec2
R12565:12565 Coq.MSets.MSetWeakList MakeRaw t def
R12576:12579 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R12580:12583 Coq.Init.Datatypes <> bool ind
R12573:12575 Coq.MSets.MSetWeakList MakeRaw elt def
R12610:12616 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R12617:12621 Coq.MSets.MSetWeakList MakeRaw Equal def
R12646:12651 Coq.MSets.MSetWeakList MakeRaw filter def
R12675:12675 Coq.MSets.MSetWeakList <> s var
R12663:12666 Coq.Init.Datatypes <> negb def
R12669:12669 Coq.MSets.MSetWeakList <> f var
R12671:12671 Coq.MSets.MSetWeakList <> x var
R12624:12626 Coq.Init.Datatypes <> snd def
R12629:12637 Coq.MSets.MSetWeakList MakeRaw partition def
R12641:12641 Coq.MSets.MSetWeakList <> s var
R12639:12639 Coq.MSets.MSetWeakList <> f var
R12590:12595 Coq.Classes.Morphisms <> Proper class
R12609:12609 Coq.MSets.MSetWeakList <> f var
R12602:12604 Coq.Classes.Morphisms ProperNotations ::signature_scope:x_'==>'_x not
R12598:12601 Coq.MSets.MSetWeakList X eq defax
R12605:12606 Coq.Init.Logic <> eq ind
R12730:12734 Coq.MSets.MSetWeakList MakeRaw Equal def
R12821:12829 Coq.MSets.MSetWeakList MakeRaw partition def
R12821:12829 Coq.MSets.MSetWeakList MakeRaw partition def
prf 12949:12962 MakeRaw partition_ok1'
R12981:12981 Coq.MSets.MSetWeakList MakeRaw t def
R12990:12991 Coq.MSets.MSetWeakList MakeRaw Ok class
R12993:12993 Coq.MSets.MSetWeakList <> s var
R13004:13007 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R13008:13011 Coq.Init.Datatypes <> bool ind
R13001:13003 Coq.MSets.MSetWeakList MakeRaw elt def
R13016:13018 Coq.MSets.MSetWeakList MakeRaw elt def
R13052:13055 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R13056:13057 Coq.MSets.MSetWeakList MakeRaw In syndef
R13061:13061 Coq.MSets.MSetWeakList <> s var
R13059:13059 Coq.MSets.MSetWeakList <> x var
R13026:13027 Coq.MSets.MSetWeakList MakeRaw In syndef
R13032:13034 Coq.Init.Datatypes <> fst def
R13037:13045 Coq.MSets.MSetWeakList MakeRaw partition def
R13049:13049 Coq.MSets.MSetWeakList <> s var
R13047:13047 Coq.MSets.MSetWeakList <> f var
R13029:13029 Coq.MSets.MSetWeakList <> x var
R13169:13177 Coq.MSets.MSetWeakList MakeRaw partition def
R13169:13177 Coq.MSets.MSetWeakList MakeRaw partition def
R13169:13177 Coq.MSets.MSetWeakList MakeRaw partition def
prf 13246:13259 MakeRaw partition_ok2'
R13278:13278 Coq.MSets.MSetWeakList MakeRaw t def
R13287:13288 Coq.MSets.MSetWeakList MakeRaw Ok class
R13290:13290 Coq.MSets.MSetWeakList <> s var
R13301:13304 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R13305:13308 Coq.Init.Datatypes <> bool ind
R13298:13300 Coq.MSets.MSetWeakList MakeRaw elt def
R13313:13315 Coq.MSets.MSetWeakList MakeRaw elt def
R13349:13352 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R13353:13354 Coq.MSets.MSetWeakList MakeRaw In syndef
R13358:13358 Coq.MSets.MSetWeakList <> s var
R13356:13356 Coq.MSets.MSetWeakList <> x var
R13323:13324 Coq.MSets.MSetWeakList MakeRaw In syndef
R13329:13331 Coq.Init.Datatypes <> snd def
R13334:13342 Coq.MSets.MSetWeakList MakeRaw partition def
R13346:13346 Coq.MSets.MSetWeakList <> s var
R13344:13344 Coq.MSets.MSetWeakList <> f var
R13326:13326 Coq.MSets.MSetWeakList <> x var
R13466:13474 Coq.MSets.MSetWeakList MakeRaw partition def
R13466:13474 Coq.MSets.MSetWeakList MakeRaw partition def
R13466:13474 Coq.MSets.MSetWeakList MakeRaw partition def
inst 13553:13565 MakeRaw partition_ok1
R13582:13583 Coq.MSets.MSetWeakList MakeRaw Ok class
R13585:13585 Coq.MSets.MSetWeakList <> s var
R13589:13590 Coq.MSets.MSetWeakList MakeRaw Ok class
R13593:13595 Coq.Init.Datatypes <> fst def
R13598:13606 Coq.MSets.MSetWeakList MakeRaw partition def
R13610:13610 Coq.MSets.MSetWeakList <> s var
R13608:13608 Coq.MSets.MSetWeakList <> f var
R13705:13718 Coq.MSets.MSetWeakList MakeRaw partition_ok1' thm
R13705:13718 Coq.MSets.MSetWeakList MakeRaw partition_ok1' thm
R13776:13784 Coq.MSets.MSetWeakList MakeRaw partition def
R13776:13784 Coq.MSets.MSetWeakList MakeRaw partition def
R13776:13784 Coq.MSets.MSetWeakList MakeRaw partition def
inst 13845:13857 MakeRaw partition_ok2
R13874:13875 Coq.MSets.MSetWeakList MakeRaw Ok class
R13877:13877 Coq.MSets.MSetWeakList <> s var
R13881:13882 Coq.MSets.MSetWeakList MakeRaw Ok class
R13885:13887 Coq.Init.Datatypes <> snd def
R13890:13898 Coq.MSets.MSetWeakList MakeRaw partition def
R13902:13902 Coq.MSets.MSetWeakList <> s var
R13900:13900 Coq.MSets.MSetWeakList <> f var
R13997:14010 Coq.MSets.MSetWeakList MakeRaw partition_ok2' thm
R13997:14010 Coq.MSets.MSetWeakList MakeRaw partition_ok2' thm
R14068:14076 Coq.MSets.MSetWeakList MakeRaw partition def
R14068:14076 Coq.MSets.MSetWeakList MakeRaw partition def
R14068:14076 Coq.MSets.MSetWeakList MakeRaw partition def
R14125:14136 Coq.MSets.MSetWeakList MakeRaw.ForNotations <> sec
def 14153:14154 MakeRaw In
R14159:14161 Coq.Lists.SetoidList <> InA ind
R14163:14166 Coq.MSets.MSetWeakList X eq defax
def 14182:14183 MakeRaw eq
R14188:14192 Coq.MSets.MSetWeakList MakeRaw Equal def
inst 14206:14213 MakeRaw eq_equiv
R14217:14227 Coq.Classes.RelationClasses <> Equivalence class
R14229:14230 Coq.MSets.MSetWeakList MakeRaw eq def
R14243:14249 Coq.MSets.MSetWeakList MakeRaw <> mod
R14435:14447 Coq.Structures.Equalities DecidableType <> mod
R14453:14457 Coq.MSets.MSetInterface WSets <> mod
R14476:14476 Coq.MSets.MSetWeakList X <> modtype
mod 14426:14429 <> Make
R14494:14500 Coq.MSets.MSetWeakList MakeRaw <> modtype
R14502:14502 Coq.MSets.MSetWeakList X <> modtype
mod 14487:14489 <> Make.Raw
R14514:14522 Coq.MSets.MSetInterface WRaw2Sets <> modtype
R14524:14524 Coq.MSets.MSetWeakList X <> modtype
R14526:14528 Coq.MSets.MSetWeakList Make.Raw <> modtype
R14535:14538 Coq.MSets.MSetWeakList Make <> mod
