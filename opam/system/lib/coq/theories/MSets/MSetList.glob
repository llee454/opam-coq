DIGEST ae8aeabf4c5205b3fdb3f5e6e1c4bd5a
FCoq.MSets.MSetList
R848:860 Coq.MSets.MSetInterface <> <> lib
R862:872 Coq.Structures.OrdersFacts <> <> lib
R874:884 Coq.Structures.OrdersLists <> <> lib
R1197:1207 Coq.Structures.Orders OrderedType <> mod
R1213:1216 Coq.MSets.MSetInterface WOps <> mod
R1218:1218 Coq.MSets.MSetList X <> modtype
mod 1190:1192 <> Ops
def 1235:1237 Ops elt
R1242:1244 Coq.MSets.MSetList X t defax
def 1260:1260 Ops t
R1265:1268 Coq.Init.Datatypes <> list ind
R1270:1272 Coq.MSets.MSetList Ops elt def
def 1289:1293 Ops empty
R1297:1297 Coq.MSets.MSetList Ops t def
R1302:1304 Coq.Init.Datatypes <> nil constr
def 1321:1328 Ops is_empty
R1335:1335 Coq.MSets.MSetList Ops t def
R1344:1344 Coq.MSets.MSetList <> l var
R1361:1365 Coq.Init.Datatypes <> false constr
R1351:1354 Coq.Init.Datatypes <> true constr
def 1413:1415 Ops mem
R1434:1434 Coq.MSets.MSetList <> s var
R1447:1449 Coq.Init.Datatypes <> nil constr
R1454:1458 Coq.Init.Datatypes <> false constr
R1467:1470 Coq.Init.Datatypes <> ::list_scope:x_'::'_x not
R1490:1498 Coq.MSets.MSetList X compare defax
R1500:1500 Coq.MSets.MSetList <> x var
R1519:1520 Coq.Init.Datatypes <> Lt constr
R1525:1529 Coq.Init.Datatypes <> false constr
R1541:1542 Coq.Init.Datatypes <> Eq constr
R1547:1550 Coq.Init.Datatypes <> true constr
R1562:1563 Coq.Init.Datatypes <> Gt constr
R1568:1570 Coq.MSets.MSetList <> mem def
R1572:1572 Coq.MSets.MSetList <> x var
def 1609:1611 Ops add
R1630:1630 Coq.MSets.MSetList <> s var
R1643:1645 Coq.Init.Datatypes <> nil constr
R1651:1654 Coq.Init.Datatypes <> ::list_scope:x_'::'_x not
R1650:1650 Coq.MSets.MSetList <> x var
R1655:1657 Coq.Init.Datatypes <> nil constr
R1666:1669 Coq.Init.Datatypes <> ::list_scope:x_'::'_x not
R1689:1697 Coq.MSets.MSetList X compare defax
R1699:1699 Coq.MSets.MSetList <> x var
R1718:1719 Coq.Init.Datatypes <> Lt constr
R1725:1728 Coq.Init.Datatypes <> ::list_scope:x_'::'_x not
R1724:1724 Coq.MSets.MSetList <> x var
R1729:1729 Coq.MSets.MSetList <> s var
R1741:1742 Coq.Init.Datatypes <> Eq constr
R1747:1747 Coq.MSets.MSetList <> s var
R1759:1760 Coq.Init.Datatypes <> Gt constr
R1766:1769 Coq.Init.Datatypes <> ::list_scope:x_'::'_x not
R1770:1772 Coq.MSets.MSetList <> add def
R1774:1774 Coq.MSets.MSetList <> x var
def 1813:1821 Ops singleton
R1828:1830 Coq.MSets.MSetList Ops elt def
R1837:1840 Coq.Init.Datatypes <> ::list_scope:x_'::'_x not
R1836:1836 Coq.MSets.MSetList <> x var
R1841:1843 Coq.Init.Datatypes <> nil constr
def 1858:1863 Ops remove
R1871:1871 Coq.MSets.MSetList Ops t def
R1886:1886 Coq.MSets.MSetList <> s var
R1899:1901 Coq.Init.Datatypes <> nil constr
R1906:1908 Coq.Init.Datatypes <> nil constr
R1917:1920 Coq.Init.Datatypes <> ::list_scope:x_'::'_x not
R1940:1948 Coq.MSets.MSetList X compare defax
R1950:1950 Coq.MSets.MSetList <> x var
R1969:1970 Coq.Init.Datatypes <> Lt constr
R1975:1975 Coq.MSets.MSetList <> s var
R1987:1988 Coq.Init.Datatypes <> Eq constr
R2005:2006 Coq.Init.Datatypes <> Gt constr
R2012:2015 Coq.Init.Datatypes <> ::list_scope:x_'::'_x not
R2016:2021 Coq.MSets.MSetList <> remove def
R2023:2023 Coq.MSets.MSetList <> x var
def 2060:2064 Ops union
R2071:2071 Coq.MSets.MSetList Ops t def
R2077:2080 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R2081:2081 Coq.MSets.MSetList Ops t def
R2076:2076 Coq.MSets.MSetList Ops t def
R2096:2096 Coq.MSets.MSetList <> s var
R2109:2111 Coq.Init.Datatypes <> nil constr
R2126:2127 Coq.MSets.MSetList <> s' var
R2136:2139 Coq.Init.Datatypes <> ::list_scope:x_'::'_x not
R2174:2174 Coq.MSets.MSetList Ops t def
R2179:2179 Coq.MSets.MSetList Ops t def
R2201:2202 Coq.MSets.MSetList <> s' var
R2222:2224 Coq.Init.Datatypes <> nil constr
R2229:2229 Coq.MSets.MSetList <> s var
R2246:2249 Coq.Init.Datatypes <> ::list_scope:x_'::'_x not
R2277:2285 Coq.MSets.MSetList X compare defax
R2314:2315 Coq.Init.Datatypes <> Lt constr
R2321:2324 Coq.Init.Datatypes <> ::list_scope:x_'::'_x not
R2325:2329 Coq.MSets.MSetList <> union def
R2333:2334 Coq.MSets.MSetList <> s' var
R2353:2354 Coq.Init.Datatypes <> Eq constr
R2360:2363 Coq.Init.Datatypes <> ::list_scope:x_'::'_x not
R2364:2368 Coq.MSets.MSetList <> union def
R2392:2393 Coq.Init.Datatypes <> Gt constr
R2400:2403 Coq.Init.Datatypes <> ::list_scope:x_'::'_x not
R2404:2412 Coq.MSets.MSetList <> union_aux var
def 2473:2477 Ops inter
R2484:2484 Coq.MSets.MSetList Ops t def
R2490:2493 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R2494:2494 Coq.MSets.MSetList Ops t def
R2489:2489 Coq.MSets.MSetList Ops t def
R2509:2509 Coq.MSets.MSetList <> s var
R2522:2524 Coq.Init.Datatypes <> nil constr
R2538:2540 Coq.Init.Datatypes <> nil constr
R2549:2552 Coq.Init.Datatypes <> ::list_scope:x_'::'_x not
R2587:2587 Coq.MSets.MSetList Ops t def
R2592:2592 Coq.MSets.MSetList Ops t def
R2614:2615 Coq.MSets.MSetList <> s' var
R2635:2637 Coq.Init.Datatypes <> nil constr
R2642:2644 Coq.Init.Datatypes <> nil constr
R2661:2664 Coq.Init.Datatypes <> ::list_scope:x_'::'_x not
R2692:2700 Coq.MSets.MSetList X compare defax
R2729:2730 Coq.Init.Datatypes <> Lt constr
R2735:2739 Coq.MSets.MSetList <> inter def
R2743:2744 Coq.MSets.MSetList <> s' var
R2763:2764 Coq.Init.Datatypes <> Eq constr
R2770:2773 Coq.Init.Datatypes <> ::list_scope:x_'::'_x not
R2774:2778 Coq.MSets.MSetList <> inter def
R2802:2803 Coq.Init.Datatypes <> Gt constr
R2808:2816 Coq.MSets.MSetList <> inter_aux var
def 2877:2880 Ops diff
R2887:2887 Coq.MSets.MSetList Ops t def
R2893:2896 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R2897:2897 Coq.MSets.MSetList Ops t def
R2892:2892 Coq.MSets.MSetList Ops t def
R2912:2912 Coq.MSets.MSetList <> s var
R2925:2927 Coq.Init.Datatypes <> nil constr
R2941:2943 Coq.Init.Datatypes <> nil constr
R2952:2955 Coq.Init.Datatypes <> ::list_scope:x_'::'_x not
R2989:2989 Coq.MSets.MSetList Ops t def
R2994:2994 Coq.MSets.MSetList Ops t def
R3016:3017 Coq.MSets.MSetList <> s' var
R3037:3039 Coq.Init.Datatypes <> nil constr
R3044:3044 Coq.MSets.MSetList <> s var
R3061:3064 Coq.Init.Datatypes <> ::list_scope:x_'::'_x not
R3092:3100 Coq.MSets.MSetList X compare defax
R3129:3130 Coq.Init.Datatypes <> Lt constr
R3136:3139 Coq.Init.Datatypes <> ::list_scope:x_'::'_x not
R3140:3143 Coq.MSets.MSetList <> diff def
R3147:3148 Coq.MSets.MSetList <> s' var
R3167:3168 Coq.Init.Datatypes <> Eq constr
R3173:3176 Coq.MSets.MSetList <> diff def
R3200:3201 Coq.Init.Datatypes <> Gt constr
R3206:3213 Coq.MSets.MSetList <> diff_aux var
def 3274:3278 Ops equal
R3285:3285 Coq.MSets.MSetList Ops t def
R3291:3294 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R3295:3298 Coq.Init.Datatypes <> bool ind
R3290:3290 Coq.MSets.MSetList Ops t def
R3316:3316 Coq.MSets.MSetList Ops t def
R3334:3335 Coq.MSets.MSetList <> s' var
R3331:3331 Coq.MSets.MSetList <> s var
R3348:3350 Coq.Init.Datatypes <> nil constr
R3353:3355 Coq.Init.Datatypes <> nil constr
R3360:3363 Coq.Init.Datatypes <> true constr
R3372:3375 Coq.Init.Datatypes <> ::list_scope:x_'::'_x not
R3381:3384 Coq.Init.Datatypes <> ::list_scope:x_'::'_x not
R3405:3413 Coq.MSets.MSetList X compare defax
R3435:3436 Coq.Init.Datatypes <> Eq constr
R3441:3445 Coq.MSets.MSetList <> equal def
R3467:3471 Coq.Init.Datatypes <> false constr
R3499:3503 Coq.Init.Datatypes <> false constr
def 3526:3531 Ops subset
R3554:3555 Coq.MSets.MSetList <> s' var
R3551:3551 Coq.MSets.MSetList <> s var
R3568:3570 Coq.Init.Datatypes <> nil constr
R3578:3581 Coq.Init.Datatypes <> true constr
R3590:3593 Coq.Init.Datatypes <> ::list_scope:x_'::'_x not
R3599:3602 Coq.Init.Datatypes <> ::list_scope:x_'::'_x not
R3623:3631 Coq.MSets.MSetList X compare defax
R3653:3654 Coq.Init.Datatypes <> Lt constr
R3659:3663 Coq.Init.Datatypes <> false constr
R3675:3676 Coq.Init.Datatypes <> Eq constr
R3681:3686 Coq.MSets.MSetList <> subset def
R3703:3704 Coq.Init.Datatypes <> Gt constr
R3709:3714 Coq.MSets.MSetList <> subset def
R3716:3716 Coq.MSets.MSetList <> s var
R3747:3751 Coq.Init.Datatypes <> false constr
def 3776:3779 Ops fold
R3800:3803 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R3805:3808 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R3809:3809 Coq.MSets.MSetList <> B var
R3804:3804 Coq.MSets.MSetList <> B var
R3797:3799 Coq.MSets.MSetList Ops elt def
R3817:3817 Coq.MSets.MSetList Ops t def
R3825:3825 Coq.MSets.MSetList <> B var
R3830:3830 Coq.MSets.MSetList <> B var
R3839:3847 Coq.Lists.List <> fold_left def
R3860:3860 Coq.MSets.MSetList <> i var
R3858:3858 Coq.MSets.MSetList <> s var
R3850:3853 Coq.Program.Basics <> flip def
R3855:3855 Coq.MSets.MSetList <> f var
def 3875:3880 Ops filter
R3890:3893 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R3894:3897 Coq.Init.Datatypes <> bool ind
R3887:3889 Coq.MSets.MSetList Ops elt def
R3905:3905 Coq.MSets.MSetList Ops t def
R3910:3910 Coq.MSets.MSetList Ops t def
R3925:3925 Coq.MSets.MSetList <> s var
R3938:3940 Coq.Init.Datatypes <> nil constr
R3945:3947 Coq.Init.Datatypes <> nil constr
R3956:3959 Coq.Init.Datatypes <> ::list_scope:x_'::'_x not
R3968:3968 Coq.MSets.MSetList <> f var
R3998:4003 Coq.MSets.MSetList <> filter def
R4005:4005 Coq.MSets.MSetList <> f var
R3978:3981 Coq.Init.Datatypes <> ::list_scope:x_'::'_x not
R3982:3987 Coq.MSets.MSetList <> filter def
R3989:3989 Coq.MSets.MSetList <> f var
def 4030:4036 Ops for_all
R4046:4049 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R4050:4053 Coq.Init.Datatypes <> bool ind
R4043:4045 Coq.MSets.MSetList Ops elt def
R4061:4061 Coq.MSets.MSetList Ops t def
R4066:4069 Coq.Init.Datatypes <> bool ind
R4084:4084 Coq.MSets.MSetList <> s var
R4097:4099 Coq.Init.Datatypes <> nil constr
R4104:4107 Coq.Init.Datatypes <> true constr
R4116:4119 Coq.Init.Datatypes <> ::list_scope:x_'::'_x not
R4128:4128 Coq.MSets.MSetList <> f var
R4154:4158 Coq.Init.Datatypes <> false constr
R4137:4143 Coq.MSets.MSetList <> for_all def
R4145:4145 Coq.MSets.MSetList <> f var
def 4181:4187 Ops exists_
R4197:4200 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R4201:4204 Coq.Init.Datatypes <> bool ind
R4194:4196 Coq.MSets.MSetList Ops elt def
R4212:4212 Coq.MSets.MSetList Ops t def
R4217:4220 Coq.Init.Datatypes <> bool ind
R4235:4235 Coq.MSets.MSetList <> s var
R4248:4250 Coq.Init.Datatypes <> nil constr
R4255:4259 Coq.Init.Datatypes <> false constr
R4268:4271 Coq.Init.Datatypes <> ::list_scope:x_'::'_x not
R4280:4280 Coq.MSets.MSetList <> f var
R4299:4305 Coq.MSets.MSetList <> exists_ def
R4307:4307 Coq.MSets.MSetList <> f var
R4289:4292 Coq.Init.Datatypes <> true constr
def 4332:4340 Ops partition
R4350:4353 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R4354:4357 Coq.Init.Datatypes <> bool ind
R4347:4349 Coq.MSets.MSetList Ops elt def
R4365:4365 Coq.MSets.MSetList Ops t def
R4371:4373 Coq.Init.Datatypes <> ::type_scope:x_'*'_x not
R4370:4370 Coq.MSets.MSetList Ops t def
R4374:4374 Coq.MSets.MSetList Ops t def
R4389:4389 Coq.MSets.MSetList <> s var
R4402:4404 Coq.Init.Datatypes <> nil constr
R4409:4409 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R4413:4414 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R4418:4418 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R4410:4412 Coq.Init.Datatypes <> nil constr
R4415:4417 Coq.Init.Datatypes <> nil constr
R4427:4430 Coq.Init.Datatypes <> ::list_scope:x_'::'_x not
R4460:4468 Coq.MSets.MSetList <> partition def
R4470:4470 Coq.MSets.MSetList <> f var
R4488:4488 Coq.MSets.MSetList <> f var
R4516:4516 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R4519:4520 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R4528:4528 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R4517:4518 Coq.MSets.MSetList <> s1 var
R4522:4525 Coq.Init.Datatypes <> ::list_scope:x_'::'_x not
R4526:4527 Coq.MSets.MSetList <> s2 var
R4497:4497 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R4505:4506 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R4509:4509 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R4499:4502 Coq.Init.Datatypes <> ::list_scope:x_'::'_x not
R4503:4504 Coq.MSets.MSetList <> s1 var
R4507:4508 Coq.MSets.MSetList <> s2 var
def 4553:4560 Ops cardinal
R4567:4567 Coq.MSets.MSetList Ops t def
R4572:4574 Coq.Init.Datatypes <> nat ind
R4579:4584 Coq.Init.Datatypes <> length def
R4586:4586 Coq.MSets.MSetList <> s var
def 4603:4610 Ops elements
R4617:4617 Coq.MSets.MSetList Ops t def
R4622:4625 Coq.Init.Datatypes <> list ind
R4627:4629 Coq.MSets.MSetList Ops elt def
R4634:4634 Coq.MSets.MSetList <> x var
def 4651:4657 Ops min_elt
R4664:4664 Coq.MSets.MSetList Ops t def
R4669:4674 Coq.Init.Datatypes <> option ind
R4676:4678 Coq.MSets.MSetList Ops elt def
R4693:4693 Coq.MSets.MSetList <> s var
R4706:4708 Coq.Init.Datatypes <> nil constr
R4713:4716 Coq.Init.Datatypes <> None constr
R4725:4728 Coq.Init.Datatypes <> ::list_scope:x_'::'_x not
R4734:4737 Coq.Init.Datatypes <> Some constr
def 4762:4768 Ops max_elt
R4775:4775 Coq.MSets.MSetList Ops t def
R4780:4785 Coq.Init.Datatypes <> option ind
R4787:4789 Coq.MSets.MSetList Ops elt def
R4804:4804 Coq.MSets.MSetList <> s var
R4817:4819 Coq.Init.Datatypes <> nil constr
R4824:4827 Coq.Init.Datatypes <> None constr
R4836:4839 Coq.Init.Datatypes <> ::list_scope:x_'::'_x not
R4840:4842 Coq.Init.Datatypes <> nil constr
R4847:4850 Coq.Init.Datatypes <> Some constr
R4861:4864 Coq.Init.Datatypes <> ::list_scope:x_'::'_x not
R4870:4876 Coq.MSets.MSetList <> max_elt def
def 4903:4908 Ops choose
R4913:4919 Coq.MSets.MSetList Ops min_elt def
def 4934:4940 Ops compare
R4962:4963 Coq.MSets.MSetList <> s' var
R4959:4959 Coq.MSets.MSetList <> s var
R4976:4978 Coq.Init.Datatypes <> nil constr
R4981:4983 Coq.Init.Datatypes <> nil constr
R4988:4989 Coq.Init.Datatypes <> Eq constr
R4997:4999 Coq.Init.Datatypes <> nil constr
R5007:5008 Coq.Init.Datatypes <> Lt constr
R5019:5021 Coq.Init.Datatypes <> nil constr
R5026:5027 Coq.Init.Datatypes <> Gt constr
R5036:5037 Coq.Init.Datatypes <> ::list_scope:x_'::'_x not
R5043:5044 Coq.Init.Datatypes <> ::list_scope:x_'::'_x not
R5063:5071 Coq.MSets.MSetList X compare defax
R5092:5093 Coq.Init.Datatypes <> Eq constr
R5098:5104 Coq.MSets.MSetList <> compare def
R5108:5109 Coq.MSets.MSetList <> s' var
R5106:5106 Coq.MSets.MSetList <> s var
R5120:5121 Coq.Init.Datatypes <> Lt constr
R5126:5127 Coq.Init.Datatypes <> Lt constr
R5138:5139 Coq.Init.Datatypes <> Gt constr
R5144:5145 Coq.Init.Datatypes <> Gt constr
R5170:5172 Coq.MSets.MSetList Ops <> mod
R5195:5205 Coq.Structures.Orders OrderedType <> mod
R5211:5217 Coq.MSets.MSetInterface RawSets <> mod
R5219:5219 Coq.MSets.MSetList X <> modtype
mod 5183:5189 <> MakeRaw
R5244:5259 Coq.Structures.OrdersFacts OrderedTypeFacts <> modtype
R5261:5261 Coq.MSets.MSetList X <> modtype
mod 5238:5239 <> MakeRaw.MX
R5286:5301 Coq.Structures.OrdersLists OrderedTypeLists <> modtype
R5303:5303 Coq.MSets.MSetList X <> modtype
mod 5280:5281 <> MakeRaw.ML
R5317:5319 Coq.MSets.MSetList Ops <> modtype
R5321:5321 Coq.MSets.MSetList X <> modtype
sec 5388:5399 MakeRaw ForNotations
def 5416:5418 MakeRaw inf
R5436:5436 Coq.MSets.MSetList <> l var
R5448:5450 Coq.Init.Datatypes <> nil constr
R5455:5458 Coq.Init.Datatypes <> true constr
R5466:5467 Coq.Init.Datatypes <> ::list_scope:x_'::'_x not
R5479:5487 Coq.MSets.MSetList X compare defax
R5489:5489 Coq.MSets.MSetList <> x var
R5498:5499 Coq.Init.Datatypes <> Lt constr
R5504:5507 Coq.Init.Datatypes <> true constr
R5516:5520 Coq.Init.Datatypes <> false constr
def 5546:5549 MakeRaw isok
R5565:5565 Coq.MSets.MSetList <> l var
R5577:5579 Coq.Init.Datatypes <> nil constr
R5584:5587 Coq.Init.Datatypes <> true constr
R5595:5596 Coq.Init.Datatypes <> ::list_scope:x_'::'_x not
R5609:5612 Coq.Init.Datatypes <> ::bool_scope:x_'&&'_x not
R5602:5604 Coq.MSets.MSetList MakeRaw inf def
R5608:5608 Coq.MSets.MSetList <> l var
R5613:5616 Coq.MSets.MSetList <> isok def
R5618:5618 Coq.MSets.MSetList <> l var
syndef 5640:5643 MakeRaw Sort
R5657:5659 Coq.Init.Logic <> ::type_scope:x_'='_x not
R5651:5654 Coq.MSets.MSetList MakeRaw isok def
R5660:5663 Coq.Init.Datatypes <> true constr
syndef 5678:5680 MakeRaw Inf
R5686:5692 Coq.Sorting.Sorted <> lelistA syndef
R5694:5697 Coq.MSets.MSetList X lt defax
syndef 5712:5713 MakeRaw In
R5719:5721 Coq.Lists.SetoidList <> InA ind
R5723:5726 Coq.MSets.MSetList X eq defax
def 5812:5815 MakeRaw IsOk
R5822:5825 Coq.MSets.MSetList MakeRaw Sort syndef
R5827:5827 Coq.MSets.MSetList <> s var
ind 5839:5840 MakeRaw Ok
constr 5858:5859 MakeRaw ok
rec 5839:5840 MakeRaw Ok
proj 5858:5859 MakeRaw ok
R5845:5845 Coq.MSets.MSetList MakeRaw t def
R5863:5866 Coq.MSets.MSetList MakeRaw Sort syndef
R5868:5868 Coq.MSets.MSetList <> s var
R5905:5906 Coq.MSets.MSetList MakeRaw Ok class
inst 5921:5927 MakeRaw Sort_Ok
R5938:5941 Coq.MSets.MSetList MakeRaw Sort syndef
R5943:5943 Coq.MSets.MSetList <> s var
R5948:5949 Coq.MSets.MSetList MakeRaw Ok class
R5951:5951 Coq.MSets.MSetList <> s var
R5958:5959 Coq.MSets.MSetList MakeRaw ok def
prf 5979:5985 MakeRaw inf_iff
R6008:6012 Coq.Init.Logic <> ::type_scope:x_'<->'_x not
R6001:6003 Coq.MSets.MSetList MakeRaw Inf syndef
R6007:6007 Coq.MSets.MSetList <> l var
R6005:6005 Coq.MSets.MSetList <> x var
R6020:6022 Coq.Init.Logic <> ::type_scope:x_'='_x not
R6013:6015 Coq.MSets.MSetList MakeRaw inf def
R6019:6019 Coq.MSets.MSetList <> l var
R6017:6017 Coq.MSets.MSetList <> x var
R6023:6026 Coq.Init.Datatypes <> true constr
R6145:6158 Coq.MSets.MSetList MakeRaw compare_lt_iff thm
R6145:6158 Coq.MSets.MSetList MakeRaw compare_lt_iff thm
R6145:6158 Coq.MSets.MSetList MakeRaw compare_lt_iff thm
R6290:6298 Coq.MSets.MSetList X compare defax
R6290:6298 Coq.MSets.MSetList X compare defax
R6357:6370 Coq.MSets.MSetList MakeRaw compare_lt_iff thm
R6357:6370 Coq.MSets.MSetList MakeRaw compare_lt_iff thm
R6357:6370 Coq.MSets.MSetList MakeRaw compare_lt_iff thm
prf 6424:6431 MakeRaw isok_iff
R6456:6460 Coq.Init.Logic <> ::type_scope:x_'<->'_x not
R6445:6448 Coq.Sorting.Sorted <> sort syndef
R6455:6455 Coq.MSets.MSetList <> l var
R6450:6453 Coq.MSets.MSetList X lt defax
R6461:6462 Coq.MSets.MSetList MakeRaw Ok class
R6464:6464 Coq.MSets.MSetList <> l var
R6612:6614 Coq.Init.Logic <> ::type_scope:x_'='_x not
R6601:6604 Coq.Init.Datatypes <> ::bool_scope:x_'&&'_x not
R6593:6595 Coq.MSets.MSetList MakeRaw inf def
R6605:6608 Coq.MSets.MSetList MakeRaw isok def
R6615:6618 Coq.Init.Datatypes <> true constr
R6612:6614 Coq.Init.Logic <> ::type_scope:x_'='_x not
R6601:6604 Coq.Init.Datatypes <> ::bool_scope:x_'&&'_x not
R6593:6595 Coq.MSets.MSetList MakeRaw inf def
R6605:6608 Coq.MSets.MSetList MakeRaw isok def
R6615:6618 Coq.Init.Datatypes <> true constr
R6634:6640 Coq.MSets.MSetList MakeRaw inf_iff thm
R6634:6640 Coq.MSets.MSetList MakeRaw inf_iff thm
R6634:6640 Coq.MSets.MSetList MakeRaw inf_iff thm
R6661:6673 Coq.Bool.Bool <> andb_true_iff thm
R6661:6673 Coq.Bool.Bool <> andb_true_iff thm
R6661:6673 Coq.Bool.Bool <> andb_true_iff thm
R6774:6776 Coq.Init.Logic <> ::type_scope:x_'='_x not
R6763:6766 Coq.Init.Datatypes <> ::bool_scope:x_'&&'_x not
R6755:6757 Coq.MSets.MSetList MakeRaw inf def
R6767:6770 Coq.MSets.MSetList MakeRaw isok def
R6777:6780 Coq.Init.Datatypes <> true constr
R6774:6776 Coq.Init.Logic <> ::type_scope:x_'='_x not
R6763:6766 Coq.Init.Datatypes <> ::bool_scope:x_'&&'_x not
R6755:6757 Coq.MSets.MSetList MakeRaw inf def
R6767:6770 Coq.MSets.MSetList MakeRaw isok def
R6777:6780 Coq.Init.Datatypes <> true constr
R6801:6813 Coq.Bool.Bool <> andb_true_iff thm
R6819:6825 Coq.MSets.MSetList MakeRaw inf_iff thm
R6801:6813 Coq.Bool.Bool <> andb_true_iff thm
R6801:6813 Coq.Bool.Bool <> andb_true_iff thm
R6819:6825 Coq.MSets.MSetList MakeRaw inf_iff thm
R6819:6825 Coq.MSets.MSetList MakeRaw inf_iff thm
R6894:6895 Coq.MSets.MSetList MakeRaw Ok class
R6914:6921 Coq.MSets.MSetList MakeRaw isok_iff thm
R6965:6968 Coq.Sorting.Sorted <> sort syndef
R6977:6980 Coq.Init.Datatypes <> ::list_scope:x_'::'_x not
R6970:6973 Coq.MSets.MSetList X lt defax
R6965:6968 Coq.Sorting.Sorted <> sort syndef
R6977:6980 Coq.Init.Datatypes <> ::list_scope:x_'::'_x not
R6970:6973 Coq.MSets.MSetList X lt defax
R7025:7028 Coq.Sorting.Sorted <> sort syndef
R7035:7037 Coq.Init.Datatypes <> nil constr
R7030:7033 Coq.MSets.MSetList X lt defax
R7025:7028 Coq.Sorting.Sorted <> sort syndef
R7035:7037 Coq.Init.Datatypes <> nil constr
R7030:7033 Coq.MSets.MSetList X lt defax
R7070:7073 Coq.Sorting.Sorted <> sort syndef
R7075:7078 Coq.MSets.MSetList X lt defax
R7070:7073 Coq.Sorting.Sorted <> sort syndef
R7075:7078 Coq.MSets.MSetList X lt defax
R7125:7126 Coq.MSets.MSetList MakeRaw Ok class
R7125:7126 Coq.MSets.MSetList MakeRaw Ok class
R7179:7180 Coq.MSets.MSetList MakeRaw Ok class
R7179:7180 Coq.MSets.MSetList MakeRaw Ok class
R7198:7205 Coq.MSets.MSetList MakeRaw isok_iff thm
R7149:7156 Coq.MSets.MSetList MakeRaw isok_iff thm
R7099:7100 Coq.MSets.MSetList MakeRaw Ok class
R7372:7374 Coq.MSets.MSetList MakeRaw Inf syndef
R7372:7374 Coq.MSets.MSetList MakeRaw Inf syndef
R7386:7387 Coq.MSets.MSetList MakeRaw In syndef
R7386:7387 Coq.MSets.MSetList MakeRaw In syndef
R7413:7416 Coq.MSets.MSetList X lt defax
R7440:7450 Coq.MSets.MSetList MakeRaw Sort_Inf_In thm
inst 7507:7513 MakeRaw isok_Ok
R7525:7527 Coq.Init.Logic <> ::type_scope:x_'='_x not
R7519:7522 Coq.MSets.MSetList MakeRaw isok def
R7524:7524 Coq.MSets.MSetList <> s var
R7528:7531 Coq.Init.Datatypes <> true constr
R7536:7537 Coq.MSets.MSetList MakeRaw Ok class
R7539:7539 Coq.MSets.MSetList <> s var
def 7599:7603 MakeRaw Equal
R7624:7626 Coq.MSets.MSetList MakeRaw elt def
R7635:7639 Coq.Init.Logic <> ::type_scope:x_'<->'_x not
R7629:7630 Coq.MSets.MSetList MakeRaw In syndef
R7634:7634 Coq.MSets.MSetList <> s var
R7632:7632 Coq.MSets.MSetList <> a var
R7640:7641 Coq.MSets.MSetList MakeRaw In syndef
R7645:7646 Coq.MSets.MSetList <> s' var
R7643:7643 Coq.MSets.MSetList <> a var
def 7662:7667 MakeRaw Subset
R7688:7690 Coq.MSets.MSetList MakeRaw elt def
R7699:7702 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R7703:7704 Coq.MSets.MSetList MakeRaw In syndef
R7708:7709 Coq.MSets.MSetList <> s' var
R7706:7706 Coq.MSets.MSetList <> a var
R7693:7694 Coq.MSets.MSetList MakeRaw In syndef
R7698:7698 Coq.MSets.MSetList <> s var
R7696:7696 Coq.MSets.MSetList <> a var
def 7725:7729 MakeRaw Empty
R7747:7749 Coq.MSets.MSetList MakeRaw elt def
R7752:7753 Coq.Init.Logic <> ::type_scope:'~'_x not
R7754:7755 Coq.MSets.MSetList MakeRaw In syndef
R7759:7759 Coq.MSets.MSetList <> s var
R7757:7757 Coq.MSets.MSetList <> a var
def 7775:7781 MakeRaw For_all
R7791:7794 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R7788:7790 Coq.MSets.MSetList MakeRaw elt def
R7822:7825 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R7826:7826 Coq.MSets.MSetList <> P var
R7828:7828 Coq.MSets.MSetList <> x var
R7816:7817 Coq.MSets.MSetList MakeRaw In syndef
R7821:7821 Coq.MSets.MSetList <> s var
R7819:7819 Coq.MSets.MSetList <> x var
def 7844:7849 MakeRaw Exists
R7859:7862 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R7856:7858 Coq.MSets.MSetList MakeRaw elt def
R7874:7874 Coq.MSets.MSetList MakeRaw t def
R7880:7886 Coq.Init.Logic <> ::type_scope:'exists'_x_'..'_x_','_x not
R7888:7889 Coq.Init.Logic <> ::type_scope:'exists'_x_'..'_x_','_x not
R7896:7899 Coq.Init.Logic <> ::type_scope:x_'/\'_x not
R7890:7891 Coq.MSets.MSetList MakeRaw In syndef
R7895:7895 Coq.MSets.MSetList <> s var
R7893:7893 Coq.MSets.MSetList <> x var
R7900:7900 Coq.MSets.MSetList <> P var
R7902:7902 Coq.MSets.MSetList <> x var
prf 7914:7921 MakeRaw mem_spec
R7940:7940 Coq.MSets.MSetList MakeRaw t def
R7948:7950 Coq.MSets.MSetList MakeRaw elt def
R7959:7960 Coq.MSets.MSetList MakeRaw Ok class
R7962:7962 Coq.MSets.MSetList <> s var
R7980:7984 Coq.Init.Logic <> ::type_scope:x_'<->'_x not
R7973:7975 Coq.Init.Logic <> ::type_scope:x_'='_x not
R7966:7968 Coq.MSets.MSetList MakeRaw mem def
R7972:7972 Coq.MSets.MSetList <> s var
R7970:7970 Coq.MSets.MSetList <> x var
R7976:7979 Coq.Init.Datatypes <> true constr
R7985:7986 Coq.MSets.MSetList MakeRaw In syndef
R7990:7990 Coq.MSets.MSetList <> s var
R7988:7988 Coq.MSets.MSetList <> x var
R8102:8109 Coq.Lists.SetoidList <> InA_cons thm
R8102:8109 Coq.Lists.SetoidList <> InA_cons thm
R8102:8109 Coq.Lists.SetoidList <> InA_cons thm
R8102:8109 Coq.Lists.SetoidList <> InA_cons thm
R8102:8109 Coq.Lists.SetoidList <> InA_cons thm
R8102:8109 Coq.Lists.SetoidList <> InA_cons thm
R8102:8109 Coq.Lists.SetoidList <> InA_cons thm
prf 8233:8239 MakeRaw add_inf
R8258:8258 Coq.MSets.MSetList MakeRaw t def
R8268:8270 Coq.MSets.MSetList MakeRaw elt def
R8281:8284 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R8293:8296 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R8297:8299 Coq.MSets.MSetList MakeRaw Inf syndef
R8304:8306 Coq.MSets.MSetList MakeRaw add def
R8310:8310 Coq.MSets.MSetList <> s var
R8308:8308 Coq.MSets.MSetList <> x var
R8301:8301 Coq.MSets.MSetList <> a var
R8285:8288 Coq.MSets.MSetList X lt defax
R8292:8292 Coq.MSets.MSetList <> x var
R8290:8290 Coq.MSets.MSetList <> a var
R8274:8276 Coq.MSets.MSetList MakeRaw Inf syndef
R8280:8280 Coq.MSets.MSetList <> s var
R8278:8278 Coq.MSets.MSetList <> a var
inst 8459:8464 MakeRaw add_ok
R8481:8482 Coq.MSets.MSetList MakeRaw Ok class
R8484:8484 Coq.MSets.MSetList <> s var
R8488:8489 Coq.MSets.MSetList MakeRaw Ok class
R8492:8494 Coq.MSets.MSetList MakeRaw add def
R8498:8498 Coq.MSets.MSetList <> s var
R8496:8496 Coq.MSets.MSetList <> x var
R8531:8538 Coq.MSets.MSetList MakeRaw isok_iff thm
R8531:8538 Coq.MSets.MSetList MakeRaw isok_iff thm
R8531:8538 Coq.MSets.MSetList MakeRaw isok_iff thm
R8531:8538 Coq.MSets.MSetList MakeRaw isok_iff thm
R8531:8538 Coq.MSets.MSetList MakeRaw isok_iff thm
R8531:8538 Coq.MSets.MSetList MakeRaw isok_iff thm
prf 8650:8657 MakeRaw add_spec
R8676:8676 Coq.MSets.MSetList MakeRaw t def
R8686:8688 Coq.MSets.MSetList MakeRaw elt def
R8697:8698 Coq.MSets.MSetList MakeRaw Ok class
R8700:8700 Coq.MSets.MSetList <> s var
R8722:8726 Coq.Init.Logic <> ::type_scope:x_'<->'_x not
R8708:8709 Coq.MSets.MSetList MakeRaw In syndef
R8714:8716 Coq.MSets.MSetList MakeRaw add def
R8720:8720 Coq.MSets.MSetList <> s var
R8718:8718 Coq.MSets.MSetList <> x var
R8711:8711 Coq.MSets.MSetList <> y var
R8735:8738 Coq.Init.Logic <> ::type_scope:x_'\/'_x not
R8727:8730 Coq.MSets.MSetList X eq defax
R8734:8734 Coq.MSets.MSetList <> x var
R8732:8732 Coq.MSets.MSetList <> y var
R8739:8740 Coq.MSets.MSetList MakeRaw In syndef
R8744:8744 Coq.MSets.MSetList <> s var
R8742:8742 Coq.MSets.MSetList <> y var
R8844:8851 Coq.Lists.SetoidList <> InA_cons thm
R8844:8851 Coq.Lists.SetoidList <> InA_cons thm
R8844:8851 Coq.Lists.SetoidList <> InA_cons thm
R8844:8851 Coq.Lists.SetoidList <> InA_cons thm
R8844:8851 Coq.Lists.SetoidList <> InA_cons thm
R8844:8851 Coq.Lists.SetoidList <> InA_cons thm
R8844:8851 Coq.Lists.SetoidList <> InA_cons thm
R8844:8851 Coq.Lists.SetoidList <> InA_cons thm
R8844:8851 Coq.Lists.SetoidList <> InA_cons thm
R8844:8851 Coq.Lists.SetoidList <> InA_cons thm
R8844:8851 Coq.Lists.SetoidList <> InA_cons thm
R8844:8851 Coq.Lists.SetoidList <> InA_cons thm
prf 8887:8896 MakeRaw remove_inf
R8915:8915 Coq.MSets.MSetList MakeRaw t def
R8925:8927 Coq.MSets.MSetList MakeRaw elt def
R8936:8937 Coq.MSets.MSetList MakeRaw Ok class
R8939:8939 Coq.MSets.MSetList <> s var
R8950:8953 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R8954:8956 Coq.MSets.MSetList MakeRaw Inf syndef
R8961:8966 Coq.MSets.MSetList MakeRaw remove def
R8970:8970 Coq.MSets.MSetList <> s var
R8968:8968 Coq.MSets.MSetList <> x var
R8958:8958 Coq.MSets.MSetList <> a var
R8943:8945 Coq.MSets.MSetList MakeRaw Inf syndef
R8949:8949 Coq.MSets.MSetList <> s var
R8947:8947 Coq.MSets.MSetList <> a var
R9065:9070 Coq.MSets.MSetList MakeRaw Inf_lt thm
R9065:9070 Coq.MSets.MSetList MakeRaw Inf_lt thm
inst 9139:9147 MakeRaw remove_ok
R9164:9165 Coq.MSets.MSetList MakeRaw Ok class
R9167:9167 Coq.MSets.MSetList <> s var
R9171:9172 Coq.MSets.MSetList MakeRaw Ok class
R9175:9180 Coq.MSets.MSetList MakeRaw remove def
R9184:9184 Coq.MSets.MSetList <> s var
R9182:9182 Coq.MSets.MSetList <> x var
R9217:9224 Coq.MSets.MSetList MakeRaw isok_iff thm
R9217:9224 Coq.MSets.MSetList MakeRaw isok_iff thm
R9217:9224 Coq.MSets.MSetList MakeRaw isok_iff thm
R9217:9224 Coq.MSets.MSetList MakeRaw isok_iff thm
R9217:9224 Coq.MSets.MSetList MakeRaw isok_iff thm
R9217:9224 Coq.MSets.MSetList MakeRaw isok_iff thm
prf 9329:9339 MakeRaw remove_spec
R9358:9358 Coq.MSets.MSetList MakeRaw t def
R9368:9370 Coq.MSets.MSetList MakeRaw elt def
R9379:9380 Coq.MSets.MSetList MakeRaw Ok class
R9382:9382 Coq.MSets.MSetList <> s var
R9407:9411 Coq.Init.Logic <> ::type_scope:x_'<->'_x not
R9390:9391 Coq.MSets.MSetList MakeRaw In syndef
R9396:9401 Coq.MSets.MSetList MakeRaw remove def
R9405:9405 Coq.MSets.MSetList <> s var
R9403:9403 Coq.MSets.MSetList <> x var
R9393:9393 Coq.MSets.MSetList <> y var
R9418:9421 Coq.Init.Logic <> ::type_scope:x_'/\'_x not
R9412:9413 Coq.MSets.MSetList MakeRaw In syndef
R9417:9417 Coq.MSets.MSetList <> s var
R9415:9415 Coq.MSets.MSetList <> y var
R9422:9422 Coq.Init.Logic <> ::type_scope:'~'_x not
R9423:9426 Coq.MSets.MSetList X eq defax
R9430:9430 Coq.MSets.MSetList <> x var
R9428:9428 Coq.MSets.MSetList <> y var
R9530:9537 Coq.Lists.SetoidList <> InA_cons thm
R9530:9537 Coq.Lists.SetoidList <> InA_cons thm
R9530:9537 Coq.Lists.SetoidList <> InA_cons thm
R9530:9537 Coq.Lists.SetoidList <> InA_cons thm
R9530:9537 Coq.Lists.SetoidList <> InA_cons thm
R9530:9537 Coq.Lists.SetoidList <> InA_cons thm
R9530:9537 Coq.Lists.SetoidList <> InA_cons thm
R9530:9537 Coq.Lists.SetoidList <> InA_cons thm
R9530:9537 Coq.Lists.SetoidList <> InA_cons thm
R9530:9537 Coq.Lists.SetoidList <> InA_cons thm
R9530:9537 Coq.Lists.SetoidList <> InA_cons thm
inst 9614:9625 MakeRaw singleton_ok
R9631:9632 Coq.MSets.MSetList MakeRaw Ok class
R9635:9643 Coq.MSets.MSetList MakeRaw singleton def
R9645:9645 Coq.MSets.MSetList <> x var
R9667:9675 Coq.MSets.MSetList MakeRaw singleton def
prf 9707:9720 MakeRaw singleton_spec
R9737:9739 Coq.MSets.MSetList MakeRaw elt def
R9760:9764 Coq.Init.Logic <> ::type_scope:x_'<->'_x not
R9742:9743 Coq.MSets.MSetList MakeRaw In syndef
R9748:9756 Coq.MSets.MSetList MakeRaw singleton def
R9758:9758 Coq.MSets.MSetList <> x var
R9745:9745 Coq.MSets.MSetList <> y var
R9765:9768 Coq.MSets.MSetList X eq defax
R9772:9772 Coq.MSets.MSetList <> x var
R9770:9770 Coq.MSets.MSetList <> y var
R9793:9801 Coq.MSets.MSetList MakeRaw singleton def
prf 10117:10125 MakeRaw union_inf
R10147:10147 Coq.MSets.MSetList MakeRaw t def
R10155:10157 Coq.MSets.MSetList MakeRaw elt def
R10166:10167 Coq.MSets.MSetList MakeRaw Ok class
R10169:10169 Coq.MSets.MSetList <> s var
R10179:10180 Coq.MSets.MSetList MakeRaw Ok class
R10182:10183 Coq.MSets.MSetList <> s' var
R10197:10200 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R10209:10212 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R10213:10215 Coq.MSets.MSetList MakeRaw Inf syndef
R10220:10224 Coq.MSets.MSetList MakeRaw union def
R10228:10229 Coq.MSets.MSetList <> s' var
R10226:10226 Coq.MSets.MSetList <> s var
R10217:10217 Coq.MSets.MSetList <> a var
R10201:10203 Coq.MSets.MSetList MakeRaw Inf syndef
R10207:10208 Coq.MSets.MSetList <> s' var
R10205:10205 Coq.MSets.MSetList <> a var
R10190:10192 Coq.MSets.MSetList MakeRaw Inf syndef
R10196:10196 Coq.MSets.MSetList <> s var
R10194:10194 Coq.MSets.MSetList <> a var
inst 10308:10315 MakeRaw union_ok
R10333:10334 Coq.MSets.MSetList MakeRaw Ok class
R10336:10336 Coq.MSets.MSetList <> s var
R10339:10340 Coq.MSets.MSetList MakeRaw Ok class
R10342:10343 Coq.MSets.MSetList <> s' var
R10347:10348 Coq.MSets.MSetList MakeRaw Ok class
R10351:10355 Coq.MSets.MSetList MakeRaw union def
R10359:10360 Coq.MSets.MSetList <> s' var
R10357:10357 Coq.MSets.MSetList <> s var
R10393:10400 Coq.MSets.MSetList MakeRaw isok_iff thm
R10393:10400 Coq.MSets.MSetList MakeRaw isok_iff thm
R10393:10400 Coq.MSets.MSetList MakeRaw isok_iff thm
R10393:10400 Coq.MSets.MSetList MakeRaw isok_iff thm
R10393:10400 Coq.MSets.MSetList MakeRaw isok_iff thm
R10393:10400 Coq.MSets.MSetList MakeRaw isok_iff thm
R10393:10400 Coq.MSets.MSetList MakeRaw isok_iff thm
R10393:10400 Coq.MSets.MSetList MakeRaw isok_iff thm
R10455:10456 Coq.MSets.MSetList MakeRaw ok def
R10455:10456 Coq.MSets.MSetList MakeRaw ok def
R10455:10456 Coq.MSets.MSetList MakeRaw ok def
R10455:10456 Coq.MSets.MSetList MakeRaw ok def
R10455:10456 Coq.MSets.MSetList MakeRaw ok def
R10474:10479 Coq.MSets.MSetList MakeRaw Inf_eq thm
R10502:10510 Coq.MSets.MSetList MakeRaw union_inf thm
R10525:10530 Coq.MSets.MSetList MakeRaw Inf_eq thm
R10474:10479 Coq.MSets.MSetList MakeRaw Inf_eq thm
R10502:10510 Coq.MSets.MSetList MakeRaw union_inf thm
R10525:10530 Coq.MSets.MSetList MakeRaw Inf_eq thm
R10563:10565 Coq.MSets.MSetList MakeRaw Inf syndef
R10571:10575 Coq.MSets.MSetList MakeRaw union def
R10579:10582 Coq.Init.Datatypes <> ::list_scope:x_'::'_x not
R10563:10565 Coq.MSets.MSetList MakeRaw Inf syndef
R10571:10575 Coq.MSets.MSetList MakeRaw union def
R10579:10582 Coq.Init.Datatypes <> ::list_scope:x_'::'_x not
prf 10614:10623 MakeRaw union_spec
R10645:10645 Coq.MSets.MSetList MakeRaw t def
R10653:10655 Coq.MSets.MSetList MakeRaw elt def
R10664:10665 Coq.MSets.MSetList MakeRaw Ok class
R10667:10667 Coq.MSets.MSetList <> s var
R10677:10678 Coq.MSets.MSetList MakeRaw Ok class
R10680:10681 Coq.MSets.MSetList <> s' var
R10705:10709 Coq.Init.Logic <> ::type_scope:x_'<->'_x not
R10688:10689 Coq.MSets.MSetList MakeRaw In syndef
R10694:10698 Coq.MSets.MSetList MakeRaw union def
R10702:10703 Coq.MSets.MSetList <> s' var
R10700:10700 Coq.MSets.MSetList <> s var
R10691:10691 Coq.MSets.MSetList <> x var
R10716:10719 Coq.Init.Logic <> ::type_scope:x_'\/'_x not
R10710:10711 Coq.MSets.MSetList MakeRaw In syndef
R10715:10715 Coq.MSets.MSetList <> s var
R10713:10713 Coq.MSets.MSetList <> x var
R10720:10721 Coq.MSets.MSetList MakeRaw In syndef
R10725:10726 Coq.MSets.MSetList <> s' var
R10723:10723 Coq.MSets.MSetList <> x var
R10765:10772 Coq.Lists.SetoidList <> InA_cons thm
R10765:10772 Coq.Lists.SetoidList <> InA_cons thm
R10765:10772 Coq.Lists.SetoidList <> InA_cons thm
R10765:10772 Coq.Lists.SetoidList <> InA_cons thm
R10765:10772 Coq.Lists.SetoidList <> InA_cons thm
R10765:10772 Coq.Lists.SetoidList <> InA_cons thm
R10765:10772 Coq.Lists.SetoidList <> InA_cons thm
R10765:10772 Coq.Lists.SetoidList <> InA_cons thm
R10765:10772 Coq.Lists.SetoidList <> InA_cons thm
R10765:10772 Coq.Lists.SetoidList <> InA_cons thm
R10765:10772 Coq.Lists.SetoidList <> InA_cons thm
R10765:10772 Coq.Lists.SetoidList <> InA_cons thm
R10765:10772 Coq.Lists.SetoidList <> InA_cons thm
R10765:10772 Coq.Lists.SetoidList <> InA_cons thm
R10765:10772 Coq.Lists.SetoidList <> InA_cons thm
R10765:10772 Coq.Lists.SetoidList <> InA_cons thm
R10765:10772 Coq.Lists.SetoidList <> InA_cons thm
R10765:10772 Coq.Lists.SetoidList <> InA_cons thm
R10765:10772 Coq.Lists.SetoidList <> InA_cons thm
R10765:10772 Coq.Lists.SetoidList <> InA_cons thm
prf 10828:10836 MakeRaw inter_inf
R10858:10858 Coq.MSets.MSetList MakeRaw t def
R10866:10868 Coq.MSets.MSetList MakeRaw elt def
R10877:10878 Coq.MSets.MSetList MakeRaw Ok class
R10880:10880 Coq.MSets.MSetList <> s var
R10890:10891 Coq.MSets.MSetList MakeRaw Ok class
R10893:10894 Coq.MSets.MSetList <> s' var
R10908:10911 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R10920:10923 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R10924:10926 Coq.MSets.MSetList MakeRaw Inf syndef
R10931:10935 Coq.MSets.MSetList MakeRaw inter def
R10939:10940 Coq.MSets.MSetList <> s' var
R10937:10937 Coq.MSets.MSetList <> s var
R10928:10928 Coq.MSets.MSetList <> a var
R10912:10914 Coq.MSets.MSetList MakeRaw Inf syndef
R10918:10919 Coq.MSets.MSetList <> s' var
R10916:10916 Coq.MSets.MSetList <> a var
R10901:10903 Coq.MSets.MSetList MakeRaw Inf syndef
R10907:10907 Coq.MSets.MSetList <> s var
R10905:10905 Coq.MSets.MSetList <> a var
R10975:10980 Coq.MSets.MSetList MakeRaw Inf_lt thm
R10975:10980 Coq.MSets.MSetList MakeRaw Inf_lt thm
R11025:11030 Coq.MSets.MSetList MakeRaw Inf_lt thm
R11025:11030 Coq.MSets.MSetList MakeRaw Inf_lt thm
inst 11099:11106 MakeRaw inter_ok
R11124:11125 Coq.MSets.MSetList MakeRaw Ok class
R11127:11127 Coq.MSets.MSetList <> s var
R11130:11131 Coq.MSets.MSetList MakeRaw Ok class
R11133:11134 Coq.MSets.MSetList <> s' var
R11138:11139 Coq.MSets.MSetList MakeRaw Ok class
R11142:11146 Coq.MSets.MSetList MakeRaw inter def
R11150:11151 Coq.MSets.MSetList <> s' var
R11148:11148 Coq.MSets.MSetList <> s var
R11184:11191 Coq.MSets.MSetList MakeRaw isok_iff thm
R11184:11191 Coq.MSets.MSetList MakeRaw isok_iff thm
R11184:11191 Coq.MSets.MSetList MakeRaw isok_iff thm
R11184:11191 Coq.MSets.MSetList MakeRaw isok_iff thm
R11184:11191 Coq.MSets.MSetList MakeRaw isok_iff thm
R11184:11191 Coq.MSets.MSetList MakeRaw isok_iff thm
R11184:11191 Coq.MSets.MSetList MakeRaw isok_iff thm
R11184:11191 Coq.MSets.MSetList MakeRaw isok_iff thm
R11251:11256 Coq.MSets.MSetList MakeRaw Inf_eq thm
R11279:11287 Coq.MSets.MSetList MakeRaw inter_inf thm
R11302:11307 Coq.MSets.MSetList MakeRaw Inf_eq thm
R11251:11256 Coq.MSets.MSetList MakeRaw Inf_eq thm
R11279:11287 Coq.MSets.MSetList MakeRaw inter_inf thm
R11302:11307 Coq.MSets.MSetList MakeRaw Inf_eq thm
prf 11339:11348 MakeRaw inter_spec
R11370:11370 Coq.MSets.MSetList MakeRaw t def
R11378:11380 Coq.MSets.MSetList MakeRaw elt def
R11389:11390 Coq.MSets.MSetList MakeRaw Ok class
R11392:11392 Coq.MSets.MSetList <> s var
R11402:11403 Coq.MSets.MSetList MakeRaw Ok class
R11405:11406 Coq.MSets.MSetList <> s' var
R11430:11434 Coq.Init.Logic <> ::type_scope:x_'<->'_x not
R11413:11414 Coq.MSets.MSetList MakeRaw In syndef
R11419:11423 Coq.MSets.MSetList MakeRaw inter def
R11427:11428 Coq.MSets.MSetList <> s' var
R11425:11425 Coq.MSets.MSetList <> s var
R11416:11416 Coq.MSets.MSetList <> x var
R11441:11444 Coq.Init.Logic <> ::type_scope:x_'/\'_x not
R11435:11436 Coq.MSets.MSetList MakeRaw In syndef
R11440:11440 Coq.MSets.MSetList <> s var
R11438:11438 Coq.MSets.MSetList <> x var
R11445:11446 Coq.MSets.MSetList MakeRaw In syndef
R11450:11451 Coq.MSets.MSetList <> s' var
R11448:11448 Coq.MSets.MSetList <> x var
R11490:11497 Coq.Lists.SetoidList <> InA_cons thm
R11490:11497 Coq.Lists.SetoidList <> InA_cons thm
R11490:11497 Coq.Lists.SetoidList <> InA_cons thm
R11490:11497 Coq.Lists.SetoidList <> InA_cons thm
R11490:11497 Coq.Lists.SetoidList <> InA_cons thm
R11490:11497 Coq.Lists.SetoidList <> InA_cons thm
R11490:11497 Coq.Lists.SetoidList <> InA_cons thm
R11490:11497 Coq.Lists.SetoidList <> InA_cons thm
R11490:11497 Coq.Lists.SetoidList <> InA_cons thm
R11490:11497 Coq.Lists.SetoidList <> InA_cons thm
R11490:11497 Coq.Lists.SetoidList <> InA_cons thm
R11490:11497 Coq.Lists.SetoidList <> InA_cons thm
R11490:11497 Coq.Lists.SetoidList <> InA_cons thm
R11490:11497 Coq.Lists.SetoidList <> InA_cons thm
R11490:11497 Coq.Lists.SetoidList <> InA_cons thm
R11490:11497 Coq.Lists.SetoidList <> InA_cons thm
R11490:11497 Coq.Lists.SetoidList <> InA_cons thm
R11490:11497 Coq.Lists.SetoidList <> InA_cons thm
prf 11584:11591 MakeRaw diff_inf
R11613:11613 Coq.MSets.MSetList MakeRaw t def
R11622:11623 Coq.MSets.MSetList MakeRaw Ok class
R11625:11625 Coq.MSets.MSetList <> s var
R11635:11636 Coq.MSets.MSetList MakeRaw Ok class
R11638:11639 Coq.MSets.MSetList <> s' var
R11647:11649 Coq.MSets.MSetList MakeRaw elt def
R11663:11666 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R11675:11678 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R11679:11681 Coq.MSets.MSetList MakeRaw Inf syndef
R11686:11689 Coq.MSets.MSetList MakeRaw diff def
R11693:11694 Coq.MSets.MSetList <> s' var
R11691:11691 Coq.MSets.MSetList <> s var
R11683:11683 Coq.MSets.MSetList <> a var
R11667:11669 Coq.MSets.MSetList MakeRaw Inf syndef
R11673:11674 Coq.MSets.MSetList <> s' var
R11671:11671 Coq.MSets.MSetList <> a var
R11656:11658 Coq.MSets.MSetList MakeRaw Inf syndef
R11662:11662 Coq.MSets.MSetList <> s var
R11660:11660 Coq.MSets.MSetList <> a var
R11740:11747 Coq.MSets.MSetList MakeRaw isok_iff thm
R11740:11747 Coq.MSets.MSetList MakeRaw isok_iff thm
R11740:11747 Coq.MSets.MSetList MakeRaw isok_iff thm
R11740:11747 Coq.MSets.MSetList MakeRaw isok_iff thm
R11740:11747 Coq.MSets.MSetList MakeRaw isok_iff thm
R11740:11747 Coq.MSets.MSetList MakeRaw isok_iff thm
R11808:11813 Coq.MSets.MSetList MakeRaw Inf_lt thm
R11808:11813 Coq.MSets.MSetList MakeRaw Inf_lt thm
R11837:11842 Coq.MSets.MSetList MakeRaw Inf_lt thm
R11837:11842 Coq.MSets.MSetList MakeRaw Inf_lt thm
R11888:11893 Coq.MSets.MSetList MakeRaw Inf_lt thm
R11888:11893 Coq.MSets.MSetList MakeRaw Inf_lt thm
inst 11961:11967 MakeRaw diff_ok
R11985:11986 Coq.MSets.MSetList MakeRaw Ok class
R11988:11988 Coq.MSets.MSetList <> s var
R11991:11992 Coq.MSets.MSetList MakeRaw Ok class
R11994:11995 Coq.MSets.MSetList <> s' var
R11999:12000 Coq.MSets.MSetList MakeRaw Ok class
R12003:12006 Coq.MSets.MSetList MakeRaw diff def
R12010:12011 Coq.MSets.MSetList <> s' var
R12008:12008 Coq.MSets.MSetList <> s var
R12044:12051 Coq.MSets.MSetList MakeRaw isok_iff thm
R12044:12051 Coq.MSets.MSetList MakeRaw isok_iff thm
R12044:12051 Coq.MSets.MSetList MakeRaw isok_iff thm
R12044:12051 Coq.MSets.MSetList MakeRaw isok_iff thm
R12044:12051 Coq.MSets.MSetList MakeRaw isok_iff thm
R12044:12051 Coq.MSets.MSetList MakeRaw isok_iff thm
R12044:12051 Coq.MSets.MSetList MakeRaw isok_iff thm
R12044:12051 Coq.MSets.MSetList MakeRaw isok_iff thm
prf 12097:12105 MakeRaw diff_spec
R12127:12127 Coq.MSets.MSetList MakeRaw t def
R12135:12137 Coq.MSets.MSetList MakeRaw elt def
R12146:12147 Coq.MSets.MSetList MakeRaw Ok class
R12149:12149 Coq.MSets.MSetList <> s var
R12159:12160 Coq.MSets.MSetList MakeRaw Ok class
R12162:12163 Coq.MSets.MSetList <> s' var
R12186:12190 Coq.Init.Logic <> ::type_scope:x_'<->'_x not
R12170:12171 Coq.MSets.MSetList MakeRaw In syndef
R12176:12179 Coq.MSets.MSetList MakeRaw diff def
R12183:12184 Coq.MSets.MSetList <> s' var
R12181:12181 Coq.MSets.MSetList <> s var
R12173:12173 Coq.MSets.MSetList <> x var
R12197:12200 Coq.Init.Logic <> ::type_scope:x_'/\'_x not
R12191:12192 Coq.MSets.MSetList MakeRaw In syndef
R12196:12196 Coq.MSets.MSetList <> s var
R12194:12194 Coq.MSets.MSetList <> x var
R12201:12201 Coq.Init.Logic <> ::type_scope:'~'_x not
R12202:12203 Coq.MSets.MSetList MakeRaw In syndef
R12207:12208 Coq.MSets.MSetList <> s' var
R12205:12205 Coq.MSets.MSetList <> x var
R12247:12254 Coq.Lists.SetoidList <> InA_cons thm
R12247:12254 Coq.Lists.SetoidList <> InA_cons thm
R12247:12254 Coq.Lists.SetoidList <> InA_cons thm
R12247:12254 Coq.Lists.SetoidList <> InA_cons thm
R12247:12254 Coq.Lists.SetoidList <> InA_cons thm
R12247:12254 Coq.Lists.SetoidList <> InA_cons thm
R12247:12254 Coq.Lists.SetoidList <> InA_cons thm
R12247:12254 Coq.Lists.SetoidList <> InA_cons thm
R12247:12254 Coq.Lists.SetoidList <> InA_cons thm
R12247:12254 Coq.Lists.SetoidList <> InA_cons thm
R12247:12254 Coq.Lists.SetoidList <> InA_cons thm
R12247:12254 Coq.Lists.SetoidList <> InA_cons thm
R12247:12254 Coq.Lists.SetoidList <> InA_cons thm
R12247:12254 Coq.Lists.SetoidList <> InA_cons thm
R12247:12254 Coq.Lists.SetoidList <> InA_cons thm
R12247:12254 Coq.Lists.SetoidList <> InA_cons thm
R12247:12254 Coq.Lists.SetoidList <> InA_cons thm
R12247:12254 Coq.Lists.SetoidList <> InA_cons thm
prf 12372:12381 MakeRaw equal_spec
R12403:12403 Coq.MSets.MSetList MakeRaw t def
R12412:12413 Coq.MSets.MSetList MakeRaw Ok class
R12415:12415 Coq.MSets.MSetList <> s var
R12425:12426 Coq.MSets.MSetList MakeRaw Ok class
R12428:12429 Coq.MSets.MSetList <> s' var
R12453:12457 Coq.Init.Logic <> ::type_scope:x_'<->'_x not
R12446:12448 Coq.Init.Logic <> ::type_scope:x_'='_x not
R12436:12440 Coq.MSets.MSetList MakeRaw equal def
R12444:12445 Coq.MSets.MSetList <> s' var
R12442:12442 Coq.MSets.MSetList <> s var
R12449:12452 Coq.Init.Datatypes <> true constr
R12458:12462 Coq.MSets.MSetList MakeRaw Equal def
R12466:12467 Coq.MSets.MSetList <> s' var
R12464:12464 Coq.MSets.MSetList <> s var
R12609:12610 Coq.MSets.MSetList MakeRaw In syndef
R12615:12617 Coq.Init.Datatypes <> nil constr
R12609:12610 Coq.MSets.MSetList MakeRaw In syndef
R12615:12617 Coq.Init.Datatypes <> nil constr
R12688:12689 Coq.MSets.MSetList MakeRaw In syndef
R12693:12695 Coq.Init.Datatypes <> nil constr
R12688:12689 Coq.MSets.MSetList MakeRaw In syndef
R12693:12695 Coq.Init.Datatypes <> nil constr
R12861:12868 Coq.Lists.SetoidList <> InA_cons thm
R12861:12868 Coq.Lists.SetoidList <> InA_cons thm
R12861:12868 Coq.Lists.SetoidList <> InA_cons thm
R12861:12868 Coq.Lists.SetoidList <> InA_cons thm
R12861:12868 Coq.Lists.SetoidList <> InA_cons thm
R12899:12906 Coq.Lists.SetoidList <> InA_cons thm
R12899:12906 Coq.Lists.SetoidList <> InA_cons thm
R12899:12906 Coq.Lists.SetoidList <> InA_cons thm
R12899:12906 Coq.Lists.SetoidList <> InA_cons thm
R12899:12906 Coq.Lists.SetoidList <> InA_cons thm
R13008:13009 Coq.MSets.MSetList MakeRaw In syndef
R13016:13017 Coq.Init.Datatypes <> ::list_scope:x_'::'_x not
R13008:13009 Coq.MSets.MSetList MakeRaw In syndef
R13016:13017 Coq.Init.Datatypes <> ::list_scope:x_'::'_x not
R13135:13136 Coq.MSets.MSetList MakeRaw In syndef
R13143:13144 Coq.Init.Datatypes <> ::list_scope:x_'::'_x not
R13135:13136 Coq.MSets.MSetList MakeRaw In syndef
R13143:13144 Coq.Init.Datatypes <> ::list_scope:x_'::'_x not
prf 13218:13228 MakeRaw subset_spec
R13250:13250 Coq.MSets.MSetList MakeRaw t def
R13259:13260 Coq.MSets.MSetList MakeRaw Ok class
R13262:13262 Coq.MSets.MSetList <> s var
R13272:13273 Coq.MSets.MSetList MakeRaw Ok class
R13275:13276 Coq.MSets.MSetList <> s' var
R13301:13305 Coq.Init.Logic <> ::type_scope:x_'<->'_x not
R13294:13296 Coq.Init.Logic <> ::type_scope:x_'='_x not
R13283:13288 Coq.MSets.MSetList MakeRaw subset def
R13292:13293 Coq.MSets.MSetList <> s' var
R13290:13290 Coq.MSets.MSetList <> s var
R13297:13300 Coq.Init.Datatypes <> true constr
R13306:13311 Coq.MSets.MSetList MakeRaw Subset def
R13315:13316 Coq.MSets.MSetList <> s' var
R13313:13313 Coq.MSets.MSetList <> s var
R13496:13497 Coq.MSets.MSetList MakeRaw In syndef
R13501:13503 Coq.Init.Datatypes <> nil constr
R13496:13497 Coq.MSets.MSetList MakeRaw In syndef
R13501:13503 Coq.Init.Datatypes <> nil constr
R13682:13689 Coq.Lists.SetoidList <> InA_cons thm
R13682:13689 Coq.Lists.SetoidList <> InA_cons thm
R13682:13689 Coq.Lists.SetoidList <> InA_cons thm
R13682:13689 Coq.Lists.SetoidList <> InA_cons thm
R13682:13689 Coq.Lists.SetoidList <> InA_cons thm
R13717:13724 Coq.Lists.SetoidList <> InA_cons thm
R13717:13724 Coq.Lists.SetoidList <> InA_cons thm
R13717:13724 Coq.Lists.SetoidList <> InA_cons thm
R13717:13724 Coq.Lists.SetoidList <> InA_cons thm
R13717:13724 Coq.Lists.SetoidList <> InA_cons thm
R13826:13827 Coq.MSets.MSetList MakeRaw In syndef
R13834:13835 Coq.Init.Datatypes <> ::list_scope:x_'::'_x not
R13826:13827 Coq.MSets.MSetList MakeRaw In syndef
R13834:13835 Coq.Init.Datatypes <> ::list_scope:x_'::'_x not
R13975:13982 Coq.Lists.SetoidList <> InA_cons thm
R13975:13982 Coq.Lists.SetoidList <> InA_cons thm
R13975:13982 Coq.Lists.SetoidList <> InA_cons thm
R13975:13982 Coq.Lists.SetoidList <> InA_cons thm
R13975:13982 Coq.Lists.SetoidList <> InA_cons thm
R14007:14014 Coq.Lists.SetoidList <> InA_cons thm
R14007:14014 Coq.Lists.SetoidList <> InA_cons thm
R14007:14014 Coq.Lists.SetoidList <> InA_cons thm
R14007:14014 Coq.Lists.SetoidList <> InA_cons thm
R14007:14014 Coq.Lists.SetoidList <> InA_cons thm
R14031:14038 Coq.Lists.SetoidList <> InA_cons thm
R14031:14038 Coq.Lists.SetoidList <> InA_cons thm
R14031:14038 Coq.Lists.SetoidList <> InA_cons thm
R14031:14038 Coq.Lists.SetoidList <> InA_cons thm
inst 14102:14109 MakeRaw empty_ok
R14113:14114 Coq.MSets.MSetList MakeRaw Ok class
R14116:14120 Coq.MSets.MSetList MakeRaw empty def
prf 14164:14173 MakeRaw empty_spec
R14177:14181 Coq.MSets.MSetList MakeRaw Empty def
R14183:14187 Coq.MSets.MSetList MakeRaw empty def
R14208:14212 Coq.MSets.MSetList MakeRaw Empty def
R14215:14219 Coq.MSets.MSetList MakeRaw empty def
prf 14254:14266 MakeRaw is_empty_spec
R14281:14281 Coq.MSets.MSetList MakeRaw t def
R14301:14305 Coq.Init.Logic <> ::type_scope:x_'<->'_x not
R14294:14296 Coq.Init.Logic <> ::type_scope:x_'='_x not
R14284:14291 Coq.MSets.MSetList MakeRaw is_empty def
R14293:14293 Coq.MSets.MSetList <> s var
R14297:14300 Coq.Init.Datatypes <> true constr
R14306:14310 Coq.MSets.MSetList MakeRaw Empty def
R14312:14312 Coq.MSets.MSetList <> s var
prf 14451:14464 MakeRaw elements_spec1
R14480:14480 Coq.MSets.MSetList MakeRaw t def
R14488:14490 Coq.MSets.MSetList MakeRaw elt def
R14511:14515 Coq.Init.Logic <> ::type_scope:x_'<->'_x not
R14494:14495 Coq.MSets.MSetList MakeRaw In syndef
R14500:14507 Coq.MSets.MSetList MakeRaw elements def
R14509:14509 Coq.MSets.MSetList <> s var
R14497:14497 Coq.MSets.MSetList <> x var
R14516:14517 Coq.MSets.MSetList MakeRaw In syndef
R14521:14521 Coq.MSets.MSetList <> s var
R14519:14519 Coq.MSets.MSetList <> x var
prf 14562:14575 MakeRaw elements_spec2
R14591:14591 Coq.MSets.MSetList MakeRaw t def
R14600:14601 Coq.MSets.MSetList MakeRaw Ok class
R14603:14603 Coq.MSets.MSetList <> s var
R14607:14610 Coq.Sorting.Sorted <> sort syndef
R14618:14625 Coq.MSets.MSetList MakeRaw elements def
R14627:14627 Coq.MSets.MSetList <> s var
R14612:14615 Coq.MSets.MSetList X lt defax
R14669:14676 Coq.MSets.MSetList MakeRaw isok_iff thm
R14669:14676 Coq.MSets.MSetList MakeRaw isok_iff thm
R14669:14676 Coq.MSets.MSetList MakeRaw isok_iff thm
R14669:14676 Coq.MSets.MSetList MakeRaw isok_iff thm
prf 14701:14715 MakeRaw elements_spec2w
R14731:14731 Coq.MSets.MSetList MakeRaw t def
R14740:14741 Coq.MSets.MSetList MakeRaw Ok class
R14743:14743 Coq.MSets.MSetList <> s var
R14747:14752 Coq.Lists.SetoidList <> NoDupA ind
R14760:14767 Coq.MSets.MSetList MakeRaw elements def
R14769:14769 Coq.MSets.MSetList <> s var
R14754:14757 Coq.MSets.MSetList X eq defax
R14811:14818 Coq.MSets.MSetList MakeRaw isok_iff thm
R14811:14818 Coq.MSets.MSetList MakeRaw isok_iff thm
R14811:14818 Coq.MSets.MSetList MakeRaw isok_iff thm
R14811:14818 Coq.MSets.MSetList MakeRaw isok_iff thm
prf 14843:14855 MakeRaw min_elt_spec1
R14871:14871 Coq.MSets.MSetList MakeRaw t def
R14879:14881 Coq.MSets.MSetList MakeRaw elt def
R14903:14906 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R14907:14908 Coq.MSets.MSetList MakeRaw In syndef
R14912:14912 Coq.MSets.MSetList <> s var
R14910:14910 Coq.MSets.MSetList <> x var
R14894:14896 Coq.Init.Logic <> ::type_scope:x_'='_x not
R14885:14891 Coq.MSets.MSetList MakeRaw min_elt def
R14893:14893 Coq.MSets.MSetList <> s var
R14897:14900 Coq.Init.Datatypes <> Some constr
R14902:14902 Coq.MSets.MSetList <> x var
prf 14980:14992 MakeRaw min_elt_spec2
R15011:15011 Coq.MSets.MSetList MakeRaw t def
R15021:15023 Coq.MSets.MSetList MakeRaw elt def
R15032:15033 Coq.MSets.MSetList MakeRaw Ok class
R15035:15035 Coq.MSets.MSetList <> s var
R15060:15063 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R15070:15073 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R15074:15075 Coq.Init.Logic <> ::type_scope:'~'_x not
R15076:15079 Coq.MSets.MSetList X lt defax
R15083:15083 Coq.MSets.MSetList <> x var
R15081:15081 Coq.MSets.MSetList <> y var
R15064:15065 Coq.MSets.MSetList MakeRaw In syndef
R15069:15069 Coq.MSets.MSetList <> s var
R15067:15067 Coq.MSets.MSetList <> y var
R15051:15053 Coq.Init.Logic <> ::type_scope:x_'='_x not
R15042:15048 Coq.MSets.MSetList MakeRaw min_elt def
R15050:15050 Coq.MSets.MSetList <> s var
R15054:15057 Coq.Init.Datatypes <> Some constr
R15059:15059 Coq.MSets.MSetList <> x var
prf 15207:15219 MakeRaw min_elt_spec3
R15234:15234 Coq.MSets.MSetList MakeRaw t def
R15253:15256 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R15257:15261 Coq.MSets.MSetList MakeRaw Empty def
R15263:15263 Coq.MSets.MSetList <> s var
R15246:15248 Coq.Init.Logic <> ::type_scope:x_'='_x not
R15237:15243 Coq.MSets.MSetList MakeRaw min_elt def
R15245:15245 Coq.MSets.MSetList <> s var
R15249:15252 Coq.Init.Datatypes <> None constr
prf 15347:15359 MakeRaw max_elt_spec1
R15375:15375 Coq.MSets.MSetList MakeRaw t def
R15383:15385 Coq.MSets.MSetList MakeRaw elt def
R15407:15410 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R15411:15412 Coq.MSets.MSetList MakeRaw In syndef
R15416:15416 Coq.MSets.MSetList <> s var
R15414:15414 Coq.MSets.MSetList <> x var
R15398:15400 Coq.Init.Logic <> ::type_scope:x_'='_x not
R15389:15395 Coq.MSets.MSetList MakeRaw max_elt def
R15397:15397 Coq.MSets.MSetList <> s var
R15401:15404 Coq.Init.Datatypes <> Some constr
R15406:15406 Coq.MSets.MSetList <> x var
prf 15571:15583 MakeRaw max_elt_spec2
R15602:15602 Coq.MSets.MSetList MakeRaw t def
R15612:15614 Coq.MSets.MSetList MakeRaw elt def
R15623:15624 Coq.MSets.MSetList MakeRaw Ok class
R15626:15626 Coq.MSets.MSetList <> s var
R15651:15654 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R15661:15664 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R15665:15666 Coq.Init.Logic <> ::type_scope:'~'_x not
R15667:15670 Coq.MSets.MSetList X lt defax
R15674:15674 Coq.MSets.MSetList <> y var
R15672:15672 Coq.MSets.MSetList <> x var
R15655:15656 Coq.MSets.MSetList MakeRaw In syndef
R15660:15660 Coq.MSets.MSetList <> s var
R15658:15658 Coq.MSets.MSetList <> y var
R15642:15644 Coq.Init.Logic <> ::type_scope:x_'='_x not
R15633:15639 Coq.MSets.MSetList MakeRaw max_elt def
R15641:15641 Coq.MSets.MSetList <> s var
R15645:15648 Coq.Init.Datatypes <> Some constr
R15650:15650 Coq.MSets.MSetList <> x var
R15826:15826 Coq.Init.Logic <> ::type_scope:'~'_x not
R15827:15830 Coq.MSets.MSetList X lt defax
R15826:15826 Coq.Init.Logic <> ::type_scope:'~'_x not
R15827:15830 Coq.MSets.MSetList X lt defax
R15868:15871 Coq.MSets.MSetList X lt defax
R15868:15871 Coq.MSets.MSetList X lt defax
prf 15912:15924 MakeRaw max_elt_spec3
R15939:15939 Coq.MSets.MSetList MakeRaw t def
R15958:15961 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R15962:15966 Coq.MSets.MSetList MakeRaw Empty def
R15968:15968 Coq.MSets.MSetList <> s var
R15951:15953 Coq.Init.Logic <> ::type_scope:x_'='_x not
R15942:15948 Coq.MSets.MSetList MakeRaw max_elt def
R15950:15950 Coq.MSets.MSetList <> s var
R15954:15957 Coq.Init.Datatypes <> None constr
def 16123:16134 MakeRaw choose_spec1
R16154:16154 Coq.MSets.MSetList MakeRaw t def
R16162:16164 Coq.MSets.MSetList MakeRaw elt def
R16185:16188 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R16189:16190 Coq.MSets.MSetList MakeRaw In syndef
R16194:16194 Coq.MSets.MSetList <> s var
R16192:16192 Coq.MSets.MSetList <> x var
R16176:16178 Coq.Init.Logic <> ::type_scope:x_'='_x not
R16168:16173 Coq.MSets.MSetList MakeRaw choose def
R16175:16175 Coq.MSets.MSetList <> s var
R16179:16182 Coq.Init.Datatypes <> Some constr
R16184:16184 Coq.MSets.MSetList <> x var
R16199:16211 Coq.MSets.MSetList MakeRaw min_elt_spec1 thm
def 16228:16239 MakeRaw choose_spec2
R16258:16258 Coq.MSets.MSetList MakeRaw t def
R16276:16279 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R16280:16284 Coq.MSets.MSetList MakeRaw Empty def
R16286:16286 Coq.MSets.MSetList <> s var
R16269:16271 Coq.Init.Logic <> ::type_scope:x_'='_x not
R16261:16266 Coq.MSets.MSetList MakeRaw choose def
R16268:16268 Coq.MSets.MSetList <> s var
R16272:16275 Coq.Init.Datatypes <> None constr
R16291:16303 Coq.MSets.MSetList MakeRaw min_elt_spec3 thm
prf 16315:16326 MakeRaw choose_spec3
R16351:16354 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R16360:16366 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R16384:16387 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R16407:16410 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R16421:16424 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R16425:16428 Coq.MSets.MSetList X eq defax
R16432:16433 Coq.MSets.MSetList <> x' var
R16430:16430 Coq.MSets.MSetList <> x var
R16411:16415 Coq.MSets.MSetList MakeRaw Equal def
R16419:16420 Coq.MSets.MSetList <> s' var
R16417:16417 Coq.MSets.MSetList <> s var
R16397:16399 Coq.Init.Logic <> ::type_scope:x_'='_x not
R16388:16393 Coq.MSets.MSetList MakeRaw choose def
R16395:16396 Coq.MSets.MSetList <> s' var
R16400:16403 Coq.Init.Datatypes <> Some constr
R16405:16406 Coq.MSets.MSetList <> x' var
R16375:16377 Coq.Init.Logic <> ::type_scope:x_'='_x not
R16367:16372 Coq.MSets.MSetList MakeRaw choose def
R16374:16374 Coq.MSets.MSetList <> s var
R16378:16381 Coq.Init.Datatypes <> Some constr
R16383:16383 Coq.MSets.MSetList <> x var
R16355:16356 Coq.MSets.MSetList MakeRaw Ok class
R16358:16359 Coq.MSets.MSetList <> s' var
R16347:16348 Coq.MSets.MSetList MakeRaw Ok class
R16350:16350 Coq.MSets.MSetList <> s var
R16455:16460 Coq.MSets.MSetList MakeRaw choose def
R16508:16508 Coq.Init.Logic <> ::type_scope:'~'_x not
R16509:16512 Coq.MSets.MSetList X lt defax
R16508:16508 Coq.Init.Logic <> ::type_scope:'~'_x not
R16509:16512 Coq.MSets.MSetList X lt defax
R16531:16543 Coq.MSets.MSetList MakeRaw min_elt_spec2 thm
R16531:16543 Coq.MSets.MSetList MakeRaw min_elt_spec2 thm
R16588:16600 Coq.MSets.MSetList MakeRaw min_elt_spec1 thm
R16588:16600 Coq.MSets.MSetList MakeRaw min_elt_spec1 thm
R16614:16614 Coq.Init.Logic <> ::type_scope:'~'_x not
R16615:16618 Coq.MSets.MSetList X lt defax
R16614:16614 Coq.Init.Logic <> ::type_scope:'~'_x not
R16615:16618 Coq.MSets.MSetList X lt defax
R16637:16649 Coq.MSets.MSetList MakeRaw min_elt_spec2 thm
R16637:16649 Coq.MSets.MSetList MakeRaw min_elt_spec2 thm
R16691:16703 Coq.MSets.MSetList MakeRaw min_elt_spec1 thm
R16691:16703 Coq.MSets.MSetList MakeRaw min_elt_spec1 thm
prf 16732:16740 MakeRaw fold_spec
R16759:16759 Coq.MSets.MSetList MakeRaw t def
R16778:16778 Coq.MSets.MSetList <> A var
R16789:16792 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R16794:16797 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R16798:16798 Coq.MSets.MSetList <> A var
R16793:16793 Coq.MSets.MSetList <> A var
R16786:16788 Coq.MSets.MSetList MakeRaw elt def
R16815:16817 Coq.Init.Logic <> ::type_scope:x_'='_x not
R16805:16808 Coq.MSets.MSetList MakeRaw fold def
R16814:16814 Coq.MSets.MSetList <> i var
R16812:16812 Coq.MSets.MSetList <> s var
R16810:16810 Coq.MSets.MSetList <> f var
R16818:16826 Coq.Lists.List <> fold_left def
R16850:16850 Coq.MSets.MSetList <> i var
R16838:16845 Coq.MSets.MSetList MakeRaw elements def
R16847:16847 Coq.MSets.MSetList <> s var
R16829:16832 Coq.Program.Basics <> flip def
R16834:16834 Coq.MSets.MSetList <> f var
prf 16893:16905 MakeRaw cardinal_spec
R16924:16924 Coq.MSets.MSetList MakeRaw t def
R16933:16934 Coq.MSets.MSetList MakeRaw Ok class
R16936:16936 Coq.MSets.MSetList <> s var
R16953:16955 Coq.Init.Logic <> ::type_scope:x_'='_x not
R16943:16950 Coq.MSets.MSetList MakeRaw cardinal def
R16952:16952 Coq.MSets.MSetList <> s var
R16956:16961 Coq.Init.Datatypes <> length def
R16964:16971 Coq.MSets.MSetList MakeRaw elements def
R16973:16973 Coq.MSets.MSetList <> s var
prf 17010:17019 MakeRaw filter_inf
R17038:17038 Coq.MSets.MSetList MakeRaw t def
R17046:17048 Coq.MSets.MSetList MakeRaw elt def
R17059:17062 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R17063:17066 Coq.Init.Datatypes <> bool ind
R17056:17058 Coq.MSets.MSetList MakeRaw elt def
R17075:17076 Coq.MSets.MSetList MakeRaw Ok class
R17078:17078 Coq.MSets.MSetList <> s var
R17092:17095 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R17096:17098 Coq.MSets.MSetList MakeRaw Inf syndef
R17103:17108 Coq.MSets.MSetList MakeRaw filter def
R17112:17112 Coq.MSets.MSetList <> s var
R17110:17110 Coq.MSets.MSetList <> f var
R17100:17100 Coq.MSets.MSetList <> x var
R17085:17087 Coq.MSets.MSetList MakeRaw Inf syndef
R17091:17091 Coq.MSets.MSetList <> s var
R17089:17089 Coq.MSets.MSetList <> x var
R17249:17254 Coq.MSets.MSetList MakeRaw Inf_lt thm
R17249:17254 Coq.MSets.MSetList MakeRaw Inf_lt thm
inst 17296:17304 MakeRaw filter_ok
R17321:17322 Coq.MSets.MSetList MakeRaw Ok class
R17324:17324 Coq.MSets.MSetList <> s var
R17328:17329 Coq.MSets.MSetList MakeRaw Ok class
R17332:17337 Coq.MSets.MSetList MakeRaw filter def
R17341:17341 Coq.MSets.MSetList <> s var
R17339:17339 Coq.MSets.MSetList <> f var
R17374:17381 Coq.MSets.MSetList MakeRaw isok_iff thm
R17374:17381 Coq.MSets.MSetList MakeRaw isok_iff thm
R17374:17381 Coq.MSets.MSetList MakeRaw isok_iff thm
R17374:17381 Coq.MSets.MSetList MakeRaw isok_iff thm
R17374:17381 Coq.MSets.MSetList MakeRaw isok_iff thm
R17374:17381 Coq.MSets.MSetList MakeRaw isok_iff thm
R17512:17521 Coq.MSets.MSetList MakeRaw filter_inf thm
R17512:17521 Coq.MSets.MSetList MakeRaw filter_inf thm
prf 17546:17556 MakeRaw filter_spec
R17575:17575 Coq.MSets.MSetList MakeRaw t def
R17583:17585 Coq.MSets.MSetList MakeRaw elt def
R17596:17599 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R17600:17603 Coq.Init.Datatypes <> bool ind
R17593:17595 Coq.MSets.MSetList MakeRaw elt def
R17630:17637 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R17680:17680 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R17655:17659 Coq.Init.Logic <> ::type_scope:x_'<->'_x not
R17638:17639 Coq.MSets.MSetList MakeRaw In syndef
R17644:17649 Coq.MSets.MSetList MakeRaw filter def
R17653:17653 Coq.MSets.MSetList <> s var
R17651:17651 Coq.MSets.MSetList <> f var
R17641:17641 Coq.MSets.MSetList <> x var
R17666:17669 Coq.Init.Logic <> ::type_scope:x_'/\'_x not
R17660:17661 Coq.MSets.MSetList MakeRaw In syndef
R17665:17665 Coq.MSets.MSetList <> s var
R17663:17663 Coq.MSets.MSetList <> x var
R17673:17675 Coq.Init.Logic <> ::type_scope:x_'='_x not
R17670:17670 Coq.MSets.MSetList <> f var
R17672:17672 Coq.MSets.MSetList <> x var
R17676:17679 Coq.Init.Datatypes <> true constr
R17610:17615 Coq.Classes.Morphisms <> Proper class
R17629:17629 Coq.MSets.MSetList <> f var
R17622:17624 Coq.Classes.Morphisms ProperNotations ::signature_scope:x_'==>'_x not
R17618:17621 Coq.MSets.MSetList X eq defax
R17625:17626 Coq.Init.Logic <> eq ind
R17780:17787 Coq.Lists.SetoidList <> InA_cons thm
R17780:17787 Coq.Lists.SetoidList <> InA_cons thm
R17780:17787 Coq.Lists.SetoidList <> InA_cons thm
R17780:17787 Coq.Lists.SetoidList <> InA_cons thm
R17780:17787 Coq.Lists.SetoidList <> InA_cons thm
R17780:17787 Coq.Lists.SetoidList <> InA_cons thm
R17780:17787 Coq.Lists.SetoidList <> InA_cons thm
R17780:17787 Coq.Lists.SetoidList <> InA_cons thm
prf 17906:17917 MakeRaw for_all_spec
R17936:17936 Coq.MSets.MSetList MakeRaw t def
R17947:17950 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R17951:17954 Coq.Init.Datatypes <> bool ind
R17944:17946 Coq.MSets.MSetList MakeRaw elt def
R17981:17988 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R18043:18043 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R18007:18011 Coq.Init.Logic <> ::type_scope:x_'<->'_x not
R18000:18002 Coq.Init.Logic <> ::type_scope:x_'='_x not
R17989:17995 Coq.MSets.MSetList MakeRaw for_all def
R17999:17999 Coq.MSets.MSetList <> s var
R17997:17997 Coq.MSets.MSetList <> f var
R18003:18006 Coq.Init.Datatypes <> true constr
R18012:18018 Coq.MSets.MSetList MakeRaw For_all def
R18042:18042 Coq.MSets.MSetList <> s var
R18033:18035 Coq.Init.Logic <> ::type_scope:x_'='_x not
R18030:18030 Coq.MSets.MSetList <> f var
R18032:18032 Coq.MSets.MSetList <> x var
R18036:18039 Coq.Init.Datatypes <> true constr
R17961:17966 Coq.Classes.Morphisms <> Proper class
R17980:17980 Coq.MSets.MSetList <> f var
R17973:17975 Coq.Classes.Morphisms ProperNotations ::signature_scope:x_'==>'_x not
R17969:17972 Coq.MSets.MSetList X eq defax
R17976:17977 Coq.Init.Logic <> eq ind
R18064:18070 Coq.MSets.MSetList MakeRaw For_all def
prf 18305:18315 MakeRaw exists_spec
R18334:18334 Coq.MSets.MSetList MakeRaw t def
R18345:18348 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R18349:18352 Coq.Init.Datatypes <> bool ind
R18342:18344 Coq.MSets.MSetList MakeRaw elt def
R18379:18386 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R18440:18440 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R18405:18409 Coq.Init.Logic <> ::type_scope:x_'<->'_x not
R18398:18400 Coq.Init.Logic <> ::type_scope:x_'='_x not
R18387:18393 Coq.MSets.MSetList MakeRaw exists_ def
R18397:18397 Coq.MSets.MSetList <> s var
R18395:18395 Coq.MSets.MSetList <> f var
R18401:18404 Coq.Init.Datatypes <> true constr
R18410:18415 Coq.MSets.MSetList MakeRaw Exists def
R18439:18439 Coq.MSets.MSetList <> s var
R18430:18432 Coq.Init.Logic <> ::type_scope:x_'='_x not
R18427:18427 Coq.MSets.MSetList <> f var
R18429:18429 Coq.MSets.MSetList <> x var
R18433:18436 Coq.Init.Datatypes <> true constr
R18359:18364 Coq.Classes.Morphisms <> Proper class
R18378:18378 Coq.MSets.MSetList <> f var
R18371:18373 Coq.Classes.Morphisms ProperNotations ::signature_scope:x_'==>'_x not
R18367:18370 Coq.MSets.MSetList X eq defax
R18374:18375 Coq.Init.Logic <> eq ind
R18461:18466 Coq.MSets.MSetList MakeRaw Exists def
prf 18694:18707 MakeRaw partition_inf1
R18726:18726 Coq.MSets.MSetList MakeRaw t def
R18737:18740 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R18741:18744 Coq.Init.Datatypes <> bool ind
R18734:18736 Coq.MSets.MSetList MakeRaw elt def
R18752:18754 Coq.MSets.MSetList MakeRaw elt def
R18763:18764 Coq.MSets.MSetList MakeRaw Ok class
R18766:18766 Coq.MSets.MSetList <> s var
R18780:18783 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R18784:18786 Coq.MSets.MSetList MakeRaw Inf syndef
R18791:18793 Coq.Init.Datatypes <> fst def
R18796:18804 Coq.MSets.MSetList MakeRaw partition def
R18808:18808 Coq.MSets.MSetList <> s var
R18806:18806 Coq.MSets.MSetList <> f var
R18788:18788 Coq.MSets.MSetList <> x var
R18773:18775 Coq.MSets.MSetList MakeRaw Inf syndef
R18779:18779 Coq.MSets.MSetList <> s var
R18777:18777 Coq.MSets.MSetList <> x var
R18856:18863 Coq.MSets.MSetList MakeRaw isok_iff thm
R18856:18863 Coq.MSets.MSetList MakeRaw isok_iff thm
R18856:18863 Coq.MSets.MSetList MakeRaw isok_iff thm
R18856:18863 Coq.MSets.MSetList MakeRaw isok_iff thm
R19003:19011 Coq.MSets.MSetList MakeRaw partition def
R19003:19011 Coq.MSets.MSetList MakeRaw partition def
R19003:19011 Coq.MSets.MSetList MakeRaw partition def
R19060:19065 Coq.MSets.MSetList MakeRaw Inf_lt thm
R19060:19065 Coq.MSets.MSetList MakeRaw Inf_lt thm
prf 19097:19110 MakeRaw partition_inf2
R19129:19129 Coq.MSets.MSetList MakeRaw t def
R19140:19143 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R19144:19147 Coq.Init.Datatypes <> bool ind
R19137:19139 Coq.MSets.MSetList MakeRaw elt def
R19155:19157 Coq.MSets.MSetList MakeRaw elt def
R19166:19167 Coq.MSets.MSetList MakeRaw Ok class
R19169:19169 Coq.MSets.MSetList <> s var
R19183:19186 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R19187:19189 Coq.MSets.MSetList MakeRaw Inf syndef
R19194:19196 Coq.Init.Datatypes <> snd def
R19199:19207 Coq.MSets.MSetList MakeRaw partition def
R19211:19211 Coq.MSets.MSetList <> s var
R19209:19209 Coq.MSets.MSetList <> f var
R19191:19191 Coq.MSets.MSetList <> x var
R19176:19178 Coq.MSets.MSetList MakeRaw Inf syndef
R19182:19182 Coq.MSets.MSetList <> s var
R19180:19180 Coq.MSets.MSetList <> x var
R19259:19266 Coq.MSets.MSetList MakeRaw isok_iff thm
R19259:19266 Coq.MSets.MSetList MakeRaw isok_iff thm
R19259:19266 Coq.MSets.MSetList MakeRaw isok_iff thm
R19259:19266 Coq.MSets.MSetList MakeRaw isok_iff thm
R19406:19414 Coq.MSets.MSetList MakeRaw partition def
R19406:19414 Coq.MSets.MSetList MakeRaw partition def
R19406:19414 Coq.MSets.MSetList MakeRaw partition def
R19455:19460 Coq.MSets.MSetList MakeRaw Inf_lt thm
R19455:19460 Coq.MSets.MSetList MakeRaw Inf_lt thm
inst 19510:19522 MakeRaw partition_ok1
R19539:19540 Coq.MSets.MSetList MakeRaw Ok class
R19542:19542 Coq.MSets.MSetList <> s var
R19546:19547 Coq.MSets.MSetList MakeRaw Ok class
R19550:19552 Coq.Init.Datatypes <> fst def
R19555:19563 Coq.MSets.MSetList MakeRaw partition def
R19567:19567 Coq.MSets.MSetList <> s var
R19565:19565 Coq.MSets.MSetList <> f var
R19601:19608 Coq.MSets.MSetList MakeRaw isok_iff thm
R19601:19608 Coq.MSets.MSetList MakeRaw isok_iff thm
R19601:19608 Coq.MSets.MSetList MakeRaw isok_iff thm
R19601:19608 Coq.MSets.MSetList MakeRaw isok_iff thm
R19601:19608 Coq.MSets.MSetList MakeRaw isok_iff thm
R19601:19608 Coq.MSets.MSetList MakeRaw isok_iff thm
R19727:19740 Coq.MSets.MSetList MakeRaw partition_inf1 thm
R19727:19740 Coq.MSets.MSetList MakeRaw partition_inf1 thm
R19770:19778 Coq.MSets.MSetList MakeRaw partition def
R19770:19778 Coq.MSets.MSetList MakeRaw partition def
R19770:19778 Coq.MSets.MSetList MakeRaw partition def
inst 19825:19837 MakeRaw partition_ok2
R19854:19855 Coq.MSets.MSetList MakeRaw Ok class
R19857:19857 Coq.MSets.MSetList <> s var
R19861:19862 Coq.MSets.MSetList MakeRaw Ok class
R19865:19867 Coq.Init.Datatypes <> snd def
R19870:19878 Coq.MSets.MSetList MakeRaw partition def
R19882:19882 Coq.MSets.MSetList <> s var
R19880:19880 Coq.MSets.MSetList <> f var
R19916:19923 Coq.MSets.MSetList MakeRaw isok_iff thm
R19916:19923 Coq.MSets.MSetList MakeRaw isok_iff thm
R19916:19923 Coq.MSets.MSetList MakeRaw isok_iff thm
R19916:19923 Coq.MSets.MSetList MakeRaw isok_iff thm
R19916:19923 Coq.MSets.MSetList MakeRaw isok_iff thm
R19916:19923 Coq.MSets.MSetList MakeRaw isok_iff thm
R20042:20055 Coq.MSets.MSetList MakeRaw partition_inf2 thm
R20042:20055 Coq.MSets.MSetList MakeRaw partition_inf2 thm
R20085:20093 Coq.MSets.MSetList MakeRaw partition def
R20085:20093 Coq.MSets.MSetList MakeRaw partition def
R20085:20093 Coq.MSets.MSetList MakeRaw partition def
prf 20130:20144 MakeRaw partition_spec1
R20163:20163 Coq.MSets.MSetList MakeRaw t def
R20174:20177 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R20178:20181 Coq.Init.Datatypes <> bool ind
R20171:20173 Coq.MSets.MSetList MakeRaw elt def
R20208:20211 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R20212:20216 Coq.MSets.MSetList MakeRaw Equal def
R20241:20246 Coq.MSets.MSetList MakeRaw filter def
R20250:20250 Coq.MSets.MSetList <> s var
R20248:20248 Coq.MSets.MSetList <> f var
R20219:20221 Coq.Init.Datatypes <> fst def
R20224:20232 Coq.MSets.MSetList MakeRaw partition def
R20236:20236 Coq.MSets.MSetList <> s var
R20234:20234 Coq.MSets.MSetList <> f var
R20188:20193 Coq.Classes.Morphisms <> Proper class
R20207:20207 Coq.MSets.MSetList <> f var
R20200:20202 Coq.Classes.Morphisms ProperNotations ::signature_scope:x_'==>'_x not
R20196:20199 Coq.MSets.MSetList X eq defax
R20203:20204 Coq.Init.Logic <> eq ind
R20305:20309 Coq.MSets.MSetList MakeRaw Equal def
R20401:20409 Coq.MSets.MSetList MakeRaw partition def
R20401:20409 Coq.MSets.MSetList MakeRaw partition def
prf 20591:20605 MakeRaw partition_spec2
R20624:20624 Coq.MSets.MSetList MakeRaw t def
R20635:20638 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R20639:20642 Coq.Init.Datatypes <> bool ind
R20632:20634 Coq.MSets.MSetList MakeRaw elt def
R20669:20675 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R20676:20680 Coq.MSets.MSetList MakeRaw Equal def
R20705:20710 Coq.MSets.MSetList MakeRaw filter def
R20734:20734 Coq.MSets.MSetList <> s var
R20722:20725 Coq.Init.Datatypes <> negb def
R20728:20728 Coq.MSets.MSetList <> f var
R20730:20730 Coq.MSets.MSetList <> x var
R20683:20685 Coq.Init.Datatypes <> snd def
R20688:20696 Coq.MSets.MSetList MakeRaw partition def
R20700:20700 Coq.MSets.MSetList <> s var
R20698:20698 Coq.MSets.MSetList <> f var
R20649:20654 Coq.Classes.Morphisms <> Proper class
R20668:20668 Coq.MSets.MSetList <> f var
R20661:20663 Coq.Classes.Morphisms ProperNotations ::signature_scope:x_'==>'_x not
R20657:20660 Coq.MSets.MSetList X eq defax
R20664:20665 Coq.Init.Logic <> eq ind
R20789:20793 Coq.MSets.MSetList MakeRaw Equal def
R20885:20893 Coq.MSets.MSetList MakeRaw partition def
R20885:20893 Coq.MSets.MSetList MakeRaw partition def
R21073:21084 Coq.MSets.MSetList MakeRaw.ForNotations <> sec
def 21101:21102 MakeRaw In
R21107:21109 Coq.Lists.SetoidList <> InA ind
R21111:21114 Coq.MSets.MSetList X eq defax
inst 21128:21136 MakeRaw In_compat
R21140:21145 Coq.Classes.Morphisms <> Proper class
R21166:21167 Coq.MSets.MSetList MakeRaw In def
R21152:21154 Coq.Classes.Morphisms ProperNotations ::signature_scope:x_'==>'_x not
R21148:21151 Coq.MSets.MSetList X eq defax
R21157:21160 Coq.Classes.Morphisms ProperNotations ::signature_scope:x_'==>'_x not
R21155:21156 Coq.Init.Logic <> eq ind
R21161:21163 Coq.Init.Logic <> iff def
R21240:21255 Coq.MSets.MSetInterface MakeListOrdering <> modtype
R21257:21257 Coq.MSets.MSetList X <> modtype
mod 21235:21235 <> MakeRaw.L
def 21273:21274 MakeRaw eq
R21279:21282 Coq.MSets.MSetList MakeRaw eq def
def 21298:21305 MakeRaw eq_equiv
R21310:21319 Coq.MSets.MSetList MakeRaw eq_equiv inst
def 21335:21336 MakeRaw lt
R21351:21357 Coq.Init.Logic <> ::type_scope:'exists'_x_'..'_x_','_x not
R21365:21366 Coq.Init.Logic <> ::type_scope:'exists'_x_'..'_x_','_x not
R21373:21376 Coq.Init.Logic <> ::type_scope:x_'/\'_x not
R21367:21368 Coq.MSets.MSetList MakeRaw Ok class
R21370:21372 Coq.MSets.MSetList <> l1' var
R21383:21386 Coq.Init.Logic <> ::type_scope:x_'/\'_x not
R21377:21378 Coq.MSets.MSetList MakeRaw Ok class
R21380:21382 Coq.MSets.MSetList <> l2' var
R21396:21399 Coq.Init.Logic <> ::type_scope:x_'/\'_x not
R21387:21388 Coq.MSets.MSetList MakeRaw eq def
R21393:21395 Coq.MSets.MSetList <> l1' var
R21390:21391 Coq.MSets.MSetList <> l1 var
R21409:21412 Coq.Init.Logic <> ::type_scope:x_'/\'_x not
R21400:21401 Coq.MSets.MSetList MakeRaw eq def
R21406:21408 Coq.MSets.MSetList <> l2' var
R21403:21404 Coq.MSets.MSetList <> l2 var
R21413:21416 Coq.MSets.MSetList MakeRaw lt def
R21422:21424 Coq.MSets.MSetList <> l2' var
R21418:21420 Coq.MSets.MSetList <> l1' var
inst 21439:21449 MakeRaw lt_strorder
R21453:21463 Coq.Classes.RelationClasses <> StrictOrder class
R21465:21466 Coq.MSets.MSetList MakeRaw lt def
R21553:21560 Coq.MSets.MSetList MakeRaw isok_iff thm
R21553:21560 Coq.MSets.MSetList MakeRaw isok_iff thm
R21553:21560 Coq.MSets.MSetList MakeRaw isok_iff thm
R21553:21560 Coq.MSets.MSetList MakeRaw isok_iff thm
R21578:21584 Coq.Lists.SetoidList <> eqlistA ind
R21586:21589 Coq.MSets.MSetList X eq defax
R21578:21584 Coq.Lists.SetoidList <> eqlistA ind
R21586:21589 Coq.MSets.MSetList X eq defax
R21644:21647 Coq.MSets.MSetList X lt defax
R21608:21631 Coq.Lists.SetoidList <> SortA_equivlistA_eqlistA thm
R21663:21664 Coq.MSets.MSetList MakeRaw ok def
R21644:21647 Coq.MSets.MSetList X lt defax
R21608:21631 Coq.Lists.SetoidList <> SortA_equivlistA_eqlistA thm
R21663:21664 Coq.MSets.MSetList MakeRaw ok def
R21663:21664 Coq.MSets.MSetList MakeRaw ok def
R21663:21664 Coq.MSets.MSetList MakeRaw ok def
R21663:21664 Coq.MSets.MSetList MakeRaw ok def
R21663:21664 Coq.MSets.MSetList MakeRaw ok def
R21663:21664 Coq.MSets.MSetList MakeRaw ok def
R21742:21764 Coq.Classes.RelationClasses <> StrictOrder_Irreflexive meth
R21742:21764 Coq.Classes.RelationClasses <> StrictOrder_Irreflexive meth
R21932:21939 Coq.MSets.MSetList MakeRaw isok_iff thm
R21932:21939 Coq.MSets.MSetList MakeRaw isok_iff thm
R21932:21939 Coq.MSets.MSetList MakeRaw isok_iff thm
R21932:21939 Coq.MSets.MSetList MakeRaw isok_iff thm
R21932:21939 Coq.MSets.MSetList MakeRaw isok_iff thm
R21932:21939 Coq.MSets.MSetList MakeRaw isok_iff thm
R21982:21988 Coq.Lists.SetoidList <> eqlistA ind
R21990:21993 Coq.MSets.MSetList X eq defax
R21982:21988 Coq.Lists.SetoidList <> eqlistA ind
R21990:21993 Coq.MSets.MSetList X eq defax
R22051:22054 Coq.MSets.MSetList X lt defax
R22015:22038 Coq.Lists.SetoidList <> SortA_equivlistA_eqlistA thm
R22070:22071 Coq.MSets.MSetList MakeRaw ok def
R22051:22054 Coq.MSets.MSetList X lt defax
R22015:22038 Coq.Lists.SetoidList <> SortA_equivlistA_eqlistA thm
R22070:22071 Coq.MSets.MSetList MakeRaw ok def
R22070:22071 Coq.MSets.MSetList MakeRaw ok def
R22070:22071 Coq.MSets.MSetList MakeRaw ok def
R22070:22071 Coq.MSets.MSetList MakeRaw ok def
R22070:22071 Coq.MSets.MSetList MakeRaw ok def
R22070:22071 Coq.MSets.MSetList MakeRaw ok def
inst 22187:22195 MakeRaw lt_compat
R22199:22204 Coq.Classes.Morphisms <> Proper class
R22222:22223 Coq.MSets.MSetList MakeRaw lt def
R22209:22211 Coq.Classes.Morphisms ProperNotations ::signature_scope:x_'==>'_x not
R22207:22208 Coq.MSets.MSetList MakeRaw eq def
R22214:22216 Coq.Classes.Morphisms ProperNotations ::signature_scope:x_'==>'_x not
R22212:22213 Coq.MSets.MSetList MakeRaw eq def
R22217:22219 Coq.Init.Logic <> iff def
prf 22642:22657 MakeRaw compare_spec_aux
R22674:22681 Coq.Init.Datatypes <> CompSpec def
R22697:22703 Coq.MSets.MSetList MakeRaw compare def
R22707:22708 Coq.MSets.MSetList <> s' var
R22705:22705 Coq.MSets.MSetList <> s var
R22693:22694 Coq.MSets.MSetList <> s' var
R22691:22691 Coq.MSets.MSetList <> s var
R22686:22689 Coq.MSets.MSetList MakeRaw lt def
R22683:22684 Coq.MSets.MSetList MakeRaw eq def
prf 22828:22839 MakeRaw compare_spec
R22860:22863 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R22869:22875 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R22876:22883 Coq.Init.Datatypes <> CompSpec def
R22897:22903 Coq.MSets.MSetList MakeRaw compare def
R22907:22908 Coq.MSets.MSetList <> s' var
R22905:22905 Coq.MSets.MSetList <> s var
R22893:22894 Coq.MSets.MSetList <> s' var
R22891:22891 Coq.MSets.MSetList <> s var
R22888:22889 Coq.MSets.MSetList MakeRaw lt def
R22885:22886 Coq.MSets.MSetList MakeRaw eq def
R22864:22865 Coq.MSets.MSetList MakeRaw Ok class
R22867:22868 Coq.MSets.MSetList <> s' var
R22856:22857 Coq.MSets.MSetList MakeRaw Ok class
R22859:22859 Coq.MSets.MSetList <> s var
R22955:22970 Coq.MSets.MSetList MakeRaw compare_spec_aux thm
R22955:22970 Coq.MSets.MSetList MakeRaw compare_spec_aux thm
R23040:23041 Coq.MSets.MSetList MakeRaw ok def
R23040:23041 Coq.MSets.MSetList MakeRaw ok def
R23040:23041 Coq.MSets.MSetList MakeRaw ok def
R23040:23041 Coq.MSets.MSetList MakeRaw ok def
R23040:23041 Coq.MSets.MSetList MakeRaw ok def
R23040:23041 Coq.MSets.MSetList MakeRaw ok def
R23040:23041 Coq.MSets.MSetList MakeRaw ok def
R23040:23041 Coq.MSets.MSetList MakeRaw ok def
R23086:23087 Coq.MSets.MSetList MakeRaw ok def
R23086:23087 Coq.MSets.MSetList MakeRaw ok def
R23086:23087 Coq.MSets.MSetList MakeRaw ok def
R23086:23087 Coq.MSets.MSetList MakeRaw ok def
R23086:23087 Coq.MSets.MSetList MakeRaw ok def
R23086:23087 Coq.MSets.MSetList MakeRaw ok def
R23086:23087 Coq.MSets.MSetList MakeRaw ok def
R23086:23087 Coq.MSets.MSetList MakeRaw ok def
R23102:23108 Coq.MSets.MSetList MakeRaw <> mod
R23292:23302 Coq.Structures.Orders OrderedType <> mod
R23308:23308 Coq.MSets.MSetInterface S <> mod
R23327:23327 Coq.MSets.MSetList X <> modtype
mod 23283:23286 <> Make
R23345:23351 Coq.MSets.MSetList MakeRaw <> modtype
R23353:23353 Coq.MSets.MSetList X <> modtype
mod 23338:23340 <> Make.Raw
R23365:23372 Coq.MSets.MSetInterface Raw2Sets <> modtype
R23374:23374 Coq.MSets.MSetList X <> modtype
R23376:23378 Coq.MSets.MSetList Make.Raw <> modtype
R23385:23388 Coq.MSets.MSetList Make <> mod
R23477:23485 Coq.Logic.Eqdep_dec <> <> lib
modtype 23501:23522 <> OrderedTypeWithLeibniz
R23535:23545 Coq.Structures.Orders OrderedType <> mod
ax 23560:23569 OrderedTypeWithLeibniz eq_leibniz
R23591:23594 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R23596:23598 Coq.Init.Logic <> ::type_scope:x_'='_x not
R23595:23595 Coq.MSets.MSetList <> x var
R23599:23599 Coq.MSets.MSetList <> y var
R23585:23586 Coq.MSets.MSetList OrderedTypeWithLeibniz eq defax
R23590:23590 Coq.MSets.MSetList <> y var
R23588:23588 Coq.MSets.MSetList <> x var
R23606:23627 Coq.MSets.MSetList OrderedTypeWithLeibniz <> modtype
modtype 23643:23654 <> SWithLeibniz
R23678:23699 Coq.MSets.MSetList OrderedTypeWithLeibniz <> mod
mod 23674:23674 <> SWithLeibniz.E
R23712:23717 Coq.MSets.MSetInterface SetsOn <> mod
R23719:23719 Coq.MSets.MSetList SWithLeibniz.E <> modtype
ax 23734:23743 SWithLeibniz eq_leibniz
R23765:23768 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R23770:23772 Coq.Init.Logic <> ::type_scope:x_'='_x not
R23769:23769 Coq.MSets.MSetList <> x var
R23773:23773 Coq.MSets.MSetList <> y var
R23759:23760 Coq.MSets.MSetList SWithLeibniz eq def
R23764:23764 Coq.MSets.MSetList <> y var
R23762:23762 Coq.MSets.MSetList <> x var
R23780:23791 Coq.MSets.MSetList SWithLeibniz <> modtype
R23822:23843 Coq.MSets.MSetList OrderedTypeWithLeibniz <> mod
R23849:23860 Coq.MSets.MSetList SWithLeibniz <> mod
R23879:23879 Coq.MSets.MSetList X <> modtype
mod 23802:23816 <> MakeWithLeibniz
R23896:23896 Coq.MSets.MSetList X <> modtype
mod 23891:23891 <> MakeWithLeibniz.E
R23915:23921 Coq.MSets.MSetList MakeRaw <> modtype
R23923:23923 Coq.MSets.MSetList X <> modtype
mod 23908:23910 <> MakeWithLeibniz.Raw
R23936:23945 Coq.MSets.MSetInterface Raw2SetsOn <> modtype
R23947:23947 Coq.MSets.MSetList X <> modtype
R23949:23951 Coq.MSets.MSetList MakeWithLeibniz.Raw <> modtype
prf 23963:23977 MakeWithLeibniz eq_leibniz_list
R24013:24016 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R24019:24021 Coq.Init.Logic <> ::type_scope:x_'='_x not
R24017:24018 Coq.MSets.MSetList <> xs var
R24022:24023 Coq.MSets.MSetList <> ys var
R23995:24001 Coq.Lists.SetoidList <> eqlistA ind
R24011:24012 Coq.MSets.MSetList <> ys var
R24008:24009 Coq.MSets.MSetList <> xs var
R24003:24006 Coq.MSets.MSetList X eq defax
R24142:24153 Coq.MSets.MSetList X eq_leibniz defax
R24142:24153 Coq.MSets.MSetList X eq_leibniz defax
prf 24219:24228 MakeWithLeibniz eq_leibniz
R24252:24255 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R24257:24259 Coq.Init.Logic <> ::type_scope:x_'='_x not
R24256:24256 Coq.MSets.MSetList <> s var
R24260:24261 Coq.MSets.MSetList <> s' var
R24245:24246 Coq.MSets.MSetList MakeWithLeibniz eq def
R24250:24251 Coq.MSets.MSetList <> s' var
R24248:24248 Coq.MSets.MSetList <> s var
R24319:24328 Coq.Lists.SetoidList <> equivlistA def
R24330:24333 Coq.MSets.MSetList X eq defax
R24319:24328 Coq.Lists.SetoidList <> equivlistA def
R24330:24333 Coq.MSets.MSetList X eq defax
R24366:24372 Coq.Lists.SetoidList <> eqlistA ind
R24374:24377 Coq.MSets.MSetList X eq defax
R24366:24372 Coq.Lists.SetoidList <> eqlistA ind
R24374:24377 Coq.MSets.MSetList X eq defax
R24404:24415 Coq.MSets.MSetList MakeWithLeibniz isok_iff thm
R24404:24415 Coq.MSets.MSetList MakeWithLeibniz isok_iff thm
R24404:24415 Coq.MSets.MSetList MakeWithLeibniz isok_iff thm
R24472:24475 Coq.MSets.MSetList X lt defax
R24442:24465 Coq.Lists.SetoidList <> SortA_equivlistA_eqlistA thm
R24472:24475 Coq.MSets.MSetList X lt defax
R24442:24465 Coq.Lists.SetoidList <> SortA_equivlistA_eqlistA thm
R24501:24515 Coq.MSets.MSetList MakeWithLeibniz eq_leibniz_list thm
R24501:24515 Coq.MSets.MSetList MakeWithLeibniz eq_leibniz_list thm
R24560:24586 Coq.Logic.Eqdep_dec <> eq_proofs_unicity thm
R24560:24586 Coq.Logic.Eqdep_dec <> eq_proofs_unicity thm
R24615:24622 Coq.Bool.Bool <> bool_dec thm
R24615:24622 Coq.Bool.Bool <> bool_dec thm
R24649:24663 Coq.MSets.MSetList MakeWithLeibniz <> mod
