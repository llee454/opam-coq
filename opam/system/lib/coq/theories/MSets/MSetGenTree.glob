DIGEST 489bab18d8b3604db58fa773bad48fd1
FCoq.MSets.MSetGenTree
R1442:1447 Coq.funind.FunInd <> <> lib
R1449:1454 Coq.Structures.Orders <> <> lib
R1456:1466 Coq.Structures.OrdersFacts <> <> lib
R1468:1480 Coq.MSets.MSetInterface <> <> lib
R1482:1489 Coq.Arith.PeanoNat <> <> lib
modtype 1681:1687 <> InfoTyp
ax 1701:1701 InfoTyp t
R1714:1720 Coq.MSets.MSetGenTree InfoTyp <> modtype
R1778:1788 Coq.Structures.Orders OrderedType <> mod
R1796:1802 Coq.MSets.MSetGenTree InfoTyp <> mod
modtype 1771:1773 <> Ops
def 1818:1820 Ops elt
R1825:1827 Coq.MSets.MSetGenTree X t defax
R1847:1849 Coq.MSets.MSetGenTree Ops elt def
ind 1863:1866 Ops tree
constr 1881:1884 Ops Leaf
constr 1895:1898 Ops Node
R1888:1891 Coq.MSets.MSetGenTree <> tree ind
R1908:1911 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R1916:1919 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R1923:1926 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R1931:1934 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R1935:1938 Coq.MSets.MSetGenTree <> tree ind
R1927:1930 Coq.MSets.MSetGenTree <> tree ind
R1920:1922 Coq.MSets.MSetGenTree X t defax
R1912:1915 Coq.MSets.MSetGenTree <> tree ind
R1902:1907 Coq.MSets.MSetGenTree Info t defax
def 1997:2001 Ops empty
R2006:2009 Coq.MSets.MSetGenTree Ops Leaf constr
def 2024:2031 Ops is_empty
R2045:2045 Coq.MSets.MSetGenTree <> t var
R2055:2058 Coq.MSets.MSetGenTree Ops Leaf constr
R2063:2066 Coq.Init.Datatypes <> true constr
R2076:2080 Coq.Init.Datatypes <> false constr
def 2260:2262 Ops mem
R2278:2278 Coq.MSets.MSetGenTree <> t var
R2288:2291 Coq.MSets.MSetGenTree Ops Leaf constr
R2296:2300 Coq.Init.Datatypes <> false constr
R2305:2308 Coq.MSets.MSetGenTree Ops Node constr
R2330:2338 Coq.MSets.MSetGenTree X compare defax
R2340:2340 Coq.MSets.MSetGenTree <> x var
R2356:2357 Coq.Init.Datatypes <> Lt constr
R2362:2364 Coq.MSets.MSetGenTree <> mem def
R2366:2366 Coq.MSets.MSetGenTree <> x var
R2377:2378 Coq.Init.Datatypes <> Eq constr
R2383:2386 Coq.Init.Datatypes <> true constr
R2395:2396 Coq.Init.Datatypes <> Gt constr
R2401:2403 Coq.MSets.MSetGenTree <> mem def
R2405:2405 Coq.MSets.MSetGenTree <> x var
def 2480:2486 Ops min_elt
R2493:2496 Coq.MSets.MSetGenTree Ops tree ind
R2501:2506 Coq.Init.Datatypes <> option ind
R2508:2510 Coq.MSets.MSetGenTree Ops elt def
R2522:2522 Coq.MSets.MSetGenTree <> t var
R2532:2535 Coq.MSets.MSetGenTree Ops Leaf constr
R2540:2543 Coq.Init.Datatypes <> None constr
R2548:2551 Coq.MSets.MSetGenTree Ops Node constr
R2555:2558 Coq.MSets.MSetGenTree Ops Leaf constr
R2567:2570 Coq.Init.Datatypes <> Some constr
R2577:2580 Coq.MSets.MSetGenTree Ops Node constr
R2593:2599 Coq.MSets.MSetGenTree <> min_elt def
def 2619:2625 Ops max_elt
R2632:2635 Coq.MSets.MSetGenTree Ops tree ind
R2640:2645 Coq.Init.Datatypes <> option ind
R2647:2649 Coq.MSets.MSetGenTree Ops elt def
R2662:2662 Coq.MSets.MSetGenTree <> t var
R2673:2676 Coq.MSets.MSetGenTree Ops Leaf constr
R2681:2684 Coq.Init.Datatypes <> None constr
R2690:2693 Coq.MSets.MSetGenTree Ops Node constr
R2701:2704 Coq.MSets.MSetGenTree Ops Leaf constr
R2709:2712 Coq.Init.Datatypes <> Some constr
R2720:2723 Coq.MSets.MSetGenTree Ops Node constr
R2736:2742 Coq.MSets.MSetGenTree <> max_elt def
def 2765:2770 Ops choose
R2775:2781 Coq.MSets.MSetGenTree Ops min_elt def
def 2827:2830 Ops fold
R2849:2852 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R2854:2857 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R2858:2858 Coq.MSets.MSetGenTree <> A var
R2853:2853 Coq.MSets.MSetGenTree <> A var
R2846:2848 Coq.MSets.MSetGenTree Ops elt def
R2865:2868 Coq.MSets.MSetGenTree Ops tree ind
R2878:2878 Coq.MSets.MSetGenTree <> A var
R2883:2883 Coq.MSets.MSetGenTree <> A var
R2896:2896 Coq.MSets.MSetGenTree <> t var
R2907:2910 Coq.MSets.MSetGenTree Ops Leaf constr
R2915:2918 Coq.MSets.MSetGenTree <> base var
R2924:2927 Coq.MSets.MSetGenTree Ops Node constr
R2940:2943 Coq.MSets.MSetGenTree <> fold def
R2950:2950 Coq.MSets.MSetGenTree <> f var
R2955:2958 Coq.MSets.MSetGenTree <> fold def
R2964:2967 Coq.MSets.MSetGenTree <> base var
R2960:2960 Coq.MSets.MSetGenTree <> f var
R2945:2945 Coq.MSets.MSetGenTree <> f var
def 2987:2998 Ops elements_aux
R3017:3017 Coq.MSets.MSetGenTree <> s var
R3029:3032 Coq.MSets.MSetGenTree Ops Leaf constr
R3037:3039 Coq.MSets.MSetGenTree <> acc var
R3046:3049 Coq.MSets.MSetGenTree Ops Node constr
R3062:3073 Coq.MSets.MSetGenTree <> elements_aux def
R3077:3080 Coq.Init.Datatypes <> ::list_scope:x_'::'_x not
R3081:3092 Coq.MSets.MSetGenTree <> elements_aux def
R3094:3096 Coq.MSets.MSetGenTree <> acc var
def 3122:3129 Ops elements
R3134:3145 Coq.MSets.MSetGenTree Ops elements_aux def
R3147:3149 Coq.Init.Datatypes <> nil constr
def 3162:3177 Ops rev_elements_aux
R3196:3196 Coq.MSets.MSetGenTree <> s var
R3208:3211 Coq.MSets.MSetGenTree Ops Leaf constr
R3216:3218 Coq.MSets.MSetGenTree <> acc var
R3225:3228 Coq.MSets.MSetGenTree Ops Node constr
R3241:3256 Coq.MSets.MSetGenTree <> rev_elements_aux def
R3260:3263 Coq.Init.Datatypes <> ::list_scope:x_'::'_x not
R3264:3279 Coq.MSets.MSetGenTree <> rev_elements_aux def
R3281:3283 Coq.MSets.MSetGenTree <> acc var
def 3309:3320 Ops rev_elements
R3325:3340 Coq.MSets.MSetGenTree Ops rev_elements_aux def
R3342:3344 Coq.Init.Datatypes <> nil constr
def 3357:3364 Ops cardinal
R3371:3374 Coq.MSets.MSetGenTree Ops tree ind
R3379:3381 Coq.Init.Datatypes <> nat ind
R3394:3394 Coq.MSets.MSetGenTree <> s var
R3406:3409 Coq.MSets.MSetGenTree Ops Leaf constr
R3421:3424 Coq.MSets.MSetGenTree Ops Node constr
R3437:3437 Coq.Init.Datatypes <> S constr
R3450:3452 Coq.Init.Peano <> ::nat_scope:x_'+'_x not
R3440:3447 Coq.MSets.MSetGenTree <> cardinal def
R3453:3460 Coq.MSets.MSetGenTree <> cardinal def
def 3482:3489 Ops maxdepth
R3503:3503 Coq.MSets.MSetGenTree <> s var
R3513:3516 Coq.MSets.MSetGenTree Ops Leaf constr
R3526:3529 Coq.MSets.MSetGenTree Ops Node constr
R3542:3542 Coq.Init.Datatypes <> S constr
R3545:3547 Coq.Init.Peano <> max syndef
R3563:3570 Coq.MSets.MSetGenTree <> maxdepth def
R3550:3557 Coq.MSets.MSetGenTree <> maxdepth def
def 3592:3599 Ops mindepth
R3613:3613 Coq.MSets.MSetGenTree <> s var
R3623:3626 Coq.MSets.MSetGenTree Ops Leaf constr
R3636:3639 Coq.MSets.MSetGenTree Ops Node constr
R3652:3652 Coq.Init.Datatypes <> S constr
R3655:3657 Coq.Init.Peano <> min syndef
R3673:3680 Coq.MSets.MSetGenTree <> mindepth def
R3660:3667 Coq.MSets.MSetGenTree <> mindepth def
def 3838:3844 Ops for_all
R3852:3853 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R3854:3857 Coq.Init.Datatypes <> bool ind
R3849:3851 Coq.MSets.MSetGenTree Ops elt def
R3871:3871 Coq.MSets.MSetGenTree <> s var
R3882:3885 Coq.MSets.MSetGenTree Ops Leaf constr
R3890:3893 Coq.Init.Datatypes <> true constr
R3899:3902 Coq.MSets.MSetGenTree Ops Node constr
R3934:3938 Coq.Bool.Bool <> ::lazy_bool_scope:x_'&&&'_x not
R3939:3945 Coq.MSets.MSetGenTree <> for_all def
R3947:3947 Coq.MSets.MSetGenTree <> f var
R3918:3922 Coq.Bool.Bool <> ::lazy_bool_scope:x_'&&&'_x not
R3923:3929 Coq.MSets.MSetGenTree <> for_all def
R3931:3931 Coq.MSets.MSetGenTree <> f var
R3915:3915 Coq.MSets.MSetGenTree <> f var
def 3966:3972 Ops exists_
R3980:3981 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R3982:3985 Coq.Init.Datatypes <> bool ind
R3977:3979 Coq.MSets.MSetGenTree Ops elt def
R3999:3999 Coq.MSets.MSetGenTree <> s var
R4010:4013 Coq.MSets.MSetGenTree Ops Leaf constr
R4018:4022 Coq.Init.Datatypes <> false constr
R4028:4031 Coq.MSets.MSetGenTree Ops Node constr
R4063:4067 Coq.Bool.Bool <> ::lazy_bool_scope:x_'|||'_x not
R4068:4074 Coq.MSets.MSetGenTree <> exists_ def
R4076:4076 Coq.MSets.MSetGenTree <> f var
R4047:4051 Coq.Bool.Bool <> ::lazy_bool_scope:x_'|||'_x not
R4052:4058 Coq.MSets.MSetGenTree <> exists_ def
R4060:4060 Coq.MSets.MSetGenTree <> f var
R4044:4044 Coq.MSets.MSetGenTree <> f var
ind 4662:4672 Ops enumeration
constr 4680:4682 Ops End
constr 4701:4704 Ops More
R4686:4696 Coq.MSets.MSetGenTree <> enumeration ind
R4711:4714 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R4719:4722 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R4734:4737 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R4738:4748 Coq.MSets.MSetGenTree <> enumeration ind
R4723:4733 Coq.MSets.MSetGenTree <> enumeration ind
R4715:4718 Coq.MSets.MSetGenTree Ops tree ind
R4708:4710 Coq.MSets.MSetGenTree Ops elt def
def 4847:4850 Ops cons
R4858:4868 Coq.MSets.MSetGenTree Ops enumeration ind
R4880:4880 Coq.MSets.MSetGenTree <> s var
R4891:4894 Coq.MSets.MSetGenTree Ops Leaf constr
R4899:4899 Coq.MSets.MSetGenTree <> e var
R4905:4908 Coq.MSets.MSetGenTree Ops Node constr
R4921:4924 Coq.MSets.MSetGenTree <> cons def
R4929:4932 Coq.MSets.MSetGenTree Ops More constr
R4938:4938 Coq.MSets.MSetGenTree <> e var
def 5002:5013 Ops compare_more
R5035:5036 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R5037:5046 Coq.Init.Datatypes <> comparison ind
R5024:5034 Coq.MSets.MSetGenTree Ops enumeration ind
R5062:5063 Coq.MSets.MSetGenTree <> e2 var
R5073:5075 Coq.MSets.MSetGenTree Ops End constr
R5080:5081 Coq.Init.Datatypes <> Gt constr
R5086:5089 Coq.MSets.MSetGenTree Ops More constr
R5114:5122 Coq.MSets.MSetGenTree X compare defax
R5124:5125 Coq.MSets.MSetGenTree <> x1 var
R5143:5144 Coq.Init.Datatypes <> Eq constr
R5149:5152 Coq.MSets.MSetGenTree <> cont var
R5155:5158 Coq.MSets.MSetGenTree Ops cons def
R5163:5164 Coq.MSets.MSetGenTree <> e2 var
R5175:5176 Coq.Init.Datatypes <> Lt constr
R5181:5182 Coq.Init.Datatypes <> Lt constr
R5192:5193 Coq.Init.Datatypes <> Gt constr
R5198:5199 Coq.Init.Datatypes <> Gt constr
def 5291:5302 Ops compare_cont
R5324:5325 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R5326:5335 Coq.Init.Datatypes <> comparison ind
R5313:5323 Coq.MSets.MSetGenTree Ops enumeration ind
R5351:5352 Coq.MSets.MSetGenTree <> s1 var
R5363:5366 Coq.MSets.MSetGenTree Ops Leaf constr
R5371:5374 Coq.MSets.MSetGenTree <> cont var
R5376:5377 Coq.MSets.MSetGenTree <> e2 var
R5383:5386 Coq.MSets.MSetGenTree Ops Node constr
R5407:5418 Coq.MSets.MSetGenTree <> compare_cont def
R5464:5465 Coq.MSets.MSetGenTree <> e2 var
R5424:5435 Coq.MSets.MSetGenTree Ops compare_more def
R5441:5452 Coq.MSets.MSetGenTree <> compare_cont def
R5457:5460 Coq.MSets.MSetGenTree <> cont var
def 5515:5525 Ops compare_end
R5540:5541 Coq.MSets.MSetGenTree <> e2 var
R5548:5550 Coq.MSets.MSetGenTree Ops End constr
R5555:5556 Coq.Init.Datatypes <> Eq constr
R5565:5566 Coq.Init.Datatypes <> Lt constr
def 5617:5623 Ops compare
R5634:5645 Coq.MSets.MSetGenTree Ops compare_cont def
R5663:5666 Coq.MSets.MSetGenTree Ops cons def
R5671:5673 Coq.MSets.MSetGenTree Ops End constr
R5668:5669 Coq.MSets.MSetGenTree <> s2 var
R5650:5660 Coq.MSets.MSetGenTree Ops compare_end def
R5647:5648 Coq.MSets.MSetGenTree <> s1 var
def 5689:5693 Ops equal
R5711:5717 Coq.MSets.MSetGenTree Ops compare def
R5722:5723 Coq.MSets.MSetGenTree <> s2 var
R5719:5720 Coq.MSets.MSetGenTree <> s1 var
R5730:5731 Coq.Init.Datatypes <> Eq constr
R5736:5739 Coq.Init.Datatypes <> true constr
R5748:5752 Coq.Init.Datatypes <> false constr
def 6281:6287 Ops subsetl
R6306:6309 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R6310:6313 Coq.Init.Datatypes <> bool ind
R6302:6305 Coq.MSets.MSetGenTree Ops tree ind
R6324:6327 Coq.Init.Datatypes <> bool ind
R6339:6340 Coq.MSets.MSetGenTree <> s2 var
R6351:6354 Coq.MSets.MSetGenTree Ops Leaf constr
R6359:6363 Coq.Init.Datatypes <> false constr
R6369:6372 Coq.MSets.MSetGenTree Ops Node constr
R6399:6407 Coq.MSets.MSetGenTree X compare defax
R6409:6410 Coq.MSets.MSetGenTree <> x1 var
R6428:6429 Coq.Init.Datatypes <> Eq constr
R6434:6442 Coq.MSets.MSetGenTree <> subset_l1 var
R6455:6456 Coq.Init.Datatypes <> Lt constr
R6461:6467 Coq.MSets.MSetGenTree <> subsetl def
R6479:6480 Coq.MSets.MSetGenTree <> x1 var
R6469:6477 Coq.MSets.MSetGenTree <> subset_l1 var
R6493:6494 Coq.Init.Datatypes <> Gt constr
R6508:6512 Coq.Bool.Bool <> ::lazy_bool_scope:x_'&&&'_x not
R6513:6521 Coq.MSets.MSetGenTree <> subset_l1 var
R6523:6524 Coq.MSets.MSetGenTree <> s2 var
R6499:6501 Coq.MSets.MSetGenTree Ops mem def
R6503:6504 Coq.MSets.MSetGenTree <> x1 var
def 6551:6557 Ops subsetr
R6576:6579 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R6580:6583 Coq.Init.Datatypes <> bool ind
R6572:6575 Coq.MSets.MSetGenTree Ops tree ind
R6594:6597 Coq.Init.Datatypes <> bool ind
R6609:6610 Coq.MSets.MSetGenTree <> s2 var
R6621:6624 Coq.MSets.MSetGenTree Ops Leaf constr
R6629:6633 Coq.Init.Datatypes <> false constr
R6639:6642 Coq.MSets.MSetGenTree Ops Node constr
R6669:6677 Coq.MSets.MSetGenTree X compare defax
R6679:6680 Coq.MSets.MSetGenTree <> x1 var
R6698:6699 Coq.Init.Datatypes <> Eq constr
R6704:6712 Coq.MSets.MSetGenTree <> subset_r1 var
R6725:6726 Coq.Init.Datatypes <> Lt constr
R6740:6744 Coq.Bool.Bool <> ::lazy_bool_scope:x_'&&&'_x not
R6745:6753 Coq.MSets.MSetGenTree <> subset_r1 var
R6755:6756 Coq.MSets.MSetGenTree <> s2 var
R6731:6733 Coq.MSets.MSetGenTree Ops mem def
R6735:6736 Coq.MSets.MSetGenTree <> x1 var
R6766:6767 Coq.Init.Datatypes <> Gt constr
R6772:6778 Coq.MSets.MSetGenTree <> subsetr def
R6790:6791 Coq.MSets.MSetGenTree <> x1 var
R6780:6788 Coq.MSets.MSetGenTree <> subset_r1 var
def 6821:6826 Ops subset
R6836:6839 Coq.Init.Datatypes <> bool ind
R6854:6855 Coq.MSets.MSetGenTree <> s2 var
R6850:6851 Coq.MSets.MSetGenTree <> s1 var
R6866:6869 Coq.MSets.MSetGenTree Ops Leaf constr
R6877:6880 Coq.Init.Datatypes <> true constr
R6886:6889 Coq.MSets.MSetGenTree Ops Node constr
R6900:6903 Coq.MSets.MSetGenTree Ops Leaf constr
R6908:6912 Coq.Init.Datatypes <> false constr
R6918:6921 Coq.MSets.MSetGenTree Ops Node constr
R6935:6938 Coq.MSets.MSetGenTree Ops Node constr
R6965:6973 Coq.MSets.MSetGenTree X compare defax
R6994:6995 Coq.Init.Datatypes <> Eq constr
R7012:7016 Coq.Bool.Bool <> ::lazy_bool_scope:x_'&&&'_x not
R7017:7022 Coq.MSets.MSetGenTree <> subset def
R7000:7005 Coq.MSets.MSetGenTree <> subset def
R7038:7039 Coq.Init.Datatypes <> Lt constr
R7069:7073 Coq.Bool.Bool <> ::lazy_bool_scope:x_'&&&'_x not
R7074:7079 Coq.MSets.MSetGenTree <> subset def
R7084:7085 Coq.MSets.MSetGenTree <> s2 var
R7044:7050 Coq.MSets.MSetGenTree Ops subsetl def
R7053:7058 Coq.MSets.MSetGenTree <> subset def
R7095:7096 Coq.Init.Datatypes <> Gt constr
R7126:7130 Coq.Bool.Bool <> ::lazy_bool_scope:x_'&&&'_x not
R7131:7136 Coq.MSets.MSetGenTree <> subset def
R7141:7142 Coq.MSets.MSetGenTree <> s2 var
R7101:7107 Coq.MSets.MSetGenTree Ops subsetr def
R7110:7115 Coq.MSets.MSetGenTree <> subset def
R7164:7166 Coq.MSets.MSetGenTree Ops <> modtype
R7256:7266 Coq.Structures.Orders OrderedType <> mod
R7274:7280 Coq.MSets.MSetGenTree InfoTyp <> mod
R7292:7294 Coq.MSets.MSetGenTree Ops <> mod
R7296:7296 Coq.MSets.MSetGenTree X <> modtype
R7298:7301 Coq.MSets.MSetGenTree Info <> modtype
modtype 7247:7251 <> Props
ind 7348:7350 Props InT
constr 7384:7389 Props IsRoot
constr 7446:7451 Props InLeft
constr 7507:7513 Props InRight
R7357:7359 Coq.MSets.MSetGenTree M elt def
R7368:7371 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R7364:7367 Coq.MSets.MSetGenTree M tree ind
R7417:7420 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R7421:7423 Coq.MSets.MSetGenTree <> InT ind
R7428:7431 Coq.MSets.MSetGenTree M Node constr
R7439:7439 Coq.MSets.MSetGenTree <> r var
R7437:7437 Coq.MSets.MSetGenTree <> y var
R7435:7435 Coq.MSets.MSetGenTree <> l var
R7433:7433 Coq.MSets.MSetGenTree <> c var
R7425:7425 Coq.MSets.MSetGenTree <> x var
R7409:7412 Coq.MSets.MSetGenTree X eq defax
R7416:7416 Coq.MSets.MSetGenTree <> y var
R7414:7414 Coq.MSets.MSetGenTree <> x var
R7478:7481 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R7482:7484 Coq.MSets.MSetGenTree <> InT ind
R7489:7492 Coq.MSets.MSetGenTree M Node constr
R7500:7500 Coq.MSets.MSetGenTree <> r var
R7498:7498 Coq.MSets.MSetGenTree <> y var
R7496:7496 Coq.MSets.MSetGenTree <> l var
R7494:7494 Coq.MSets.MSetGenTree <> c var
R7486:7486 Coq.MSets.MSetGenTree <> x var
R7471:7473 Coq.MSets.MSetGenTree <> InT ind
R7477:7477 Coq.MSets.MSetGenTree <> l var
R7475:7475 Coq.MSets.MSetGenTree <> x var
R7540:7543 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R7544:7546 Coq.MSets.MSetGenTree <> InT ind
R7551:7554 Coq.MSets.MSetGenTree M Node constr
R7562:7562 Coq.MSets.MSetGenTree <> r var
R7560:7560 Coq.MSets.MSetGenTree <> y var
R7558:7558 Coq.MSets.MSetGenTree <> l var
R7556:7556 Coq.MSets.MSetGenTree <> c var
R7548:7548 Coq.MSets.MSetGenTree <> x var
R7533:7535 Coq.MSets.MSetGenTree <> InT ind
R7539:7539 Coq.MSets.MSetGenTree <> r var
R7537:7537 Coq.MSets.MSetGenTree <> x var
def 7578:7579 Props In
R7584:7586 Coq.MSets.MSetGenTree Props InT ind
def 7627:7631 Props Equal
R7652:7654 Coq.MSets.MSetGenTree M elt def
R7664:7668 Coq.Init.Logic <> ::type_scope:x_'<->'_x not
R7657:7659 Coq.MSets.MSetGenTree Props InT ind
R7663:7663 Coq.MSets.MSetGenTree <> s var
R7661:7661 Coq.MSets.MSetGenTree <> a var
R7669:7671 Coq.MSets.MSetGenTree Props InT ind
R7675:7676 Coq.MSets.MSetGenTree <> s' var
R7673:7673 Coq.MSets.MSetGenTree <> a var
def 7690:7695 Props Subset
R7716:7718 Coq.MSets.MSetGenTree M elt def
R7728:7731 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R7732:7734 Coq.MSets.MSetGenTree Props InT ind
R7738:7739 Coq.MSets.MSetGenTree <> s' var
R7736:7736 Coq.MSets.MSetGenTree <> a var
R7721:7723 Coq.MSets.MSetGenTree Props InT ind
R7727:7727 Coq.MSets.MSetGenTree <> s var
R7725:7725 Coq.MSets.MSetGenTree <> a var
def 7753:7757 Props Empty
R7775:7777 Coq.MSets.MSetGenTree M elt def
R7780:7781 Coq.Init.Logic <> ::type_scope:'~'_x not
R7782:7784 Coq.MSets.MSetGenTree Props InT ind
R7788:7788 Coq.MSets.MSetGenTree <> s var
R7786:7786 Coq.MSets.MSetGenTree <> a var
def 7802:7808 Props For_all
R7818:7821 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R7815:7817 Coq.MSets.MSetGenTree M elt def
R7850:7853 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R7854:7854 Coq.MSets.MSetGenTree <> P var
R7856:7856 Coq.MSets.MSetGenTree <> x var
R7843:7845 Coq.MSets.MSetGenTree Props InT ind
R7849:7849 Coq.MSets.MSetGenTree <> s var
R7847:7847 Coq.MSets.MSetGenTree <> x var
def 7870:7875 Props Exists
R7885:7888 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R7882:7884 Coq.MSets.MSetGenTree M elt def
R7900:7906 Coq.Init.Logic <> ::type_scope:'exists'_x_'..'_x_','_x not
R7908:7909 Coq.Init.Logic <> ::type_scope:'exists'_x_'..'_x_','_x not
R7917:7920 Coq.Init.Logic <> ::type_scope:x_'/\'_x not
R7910:7912 Coq.MSets.MSetGenTree Props InT ind
R7916:7916 Coq.MSets.MSetGenTree <> s var
R7914:7914 Coq.MSets.MSetGenTree <> x var
R7921:7921 Coq.MSets.MSetGenTree <> P var
R7923:7923 Coq.MSets.MSetGenTree <> x var
def 8066:8072 Props lt_tree
R8098:8101 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R8102:8105 Coq.MSets.MSetGenTree X lt defax
R8109:8109 Coq.MSets.MSetGenTree <> x var
R8107:8107 Coq.MSets.MSetGenTree <> y var
R8091:8093 Coq.MSets.MSetGenTree Props InT ind
R8097:8097 Coq.MSets.MSetGenTree <> s var
R8095:8095 Coq.MSets.MSetGenTree <> y var
def 8123:8129 Props gt_tree
R8155:8158 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R8159:8162 Coq.MSets.MSetGenTree X lt defax
R8166:8166 Coq.MSets.MSetGenTree <> y var
R8164:8164 Coq.MSets.MSetGenTree <> x var
R8148:8150 Coq.MSets.MSetGenTree Props InT ind
R8154:8154 Coq.MSets.MSetGenTree <> s var
R8152:8152 Coq.MSets.MSetGenTree <> y var
ind 8226:8228 Props bst
constr 8252:8257 Props BSLeaf
constr 8274:8279 Props BSNode
R8236:8239 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R8232:8235 Coq.MSets.MSetGenTree M tree ind
R8261:8263 Coq.MSets.MSetGenTree <> bst ind
R8265:8268 Coq.MSets.MSetGenTree M Leaf constr
R8304:8307 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R8313:8321 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R8333:8336 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R8348:8351 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R8352:8354 Coq.MSets.MSetGenTree <> bst ind
R8357:8360 Coq.MSets.MSetGenTree M Node constr
R8368:8368 Coq.MSets.MSetGenTree <> r var
R8366:8366 Coq.MSets.MSetGenTree <> x var
R8364:8364 Coq.MSets.MSetGenTree <> l var
R8362:8362 Coq.MSets.MSetGenTree <> c var
R8337:8343 Coq.MSets.MSetGenTree Props gt_tree def
R8347:8347 Coq.MSets.MSetGenTree <> r var
R8345:8345 Coq.MSets.MSetGenTree <> x var
R8322:8328 Coq.MSets.MSetGenTree Props lt_tree def
R8332:8332 Coq.MSets.MSetGenTree <> l var
R8330:8330 Coq.MSets.MSetGenTree <> x var
R8308:8310 Coq.MSets.MSetGenTree <> bst ind
R8312:8312 Coq.MSets.MSetGenTree <> r var
R8299:8301 Coq.MSets.MSetGenTree <> bst ind
R8303:8303 Coq.MSets.MSetGenTree <> l var
def 8459:8462 Props IsOk
R8467:8469 Coq.MSets.MSetGenTree Props bst ind
ind 8479:8480 Props Ok
constr 8501:8502 Props ok
rec 8479:8480 Props Ok
proj 8501:8502 Props ok
R8485:8488 Coq.MSets.MSetGenTree M tree ind
R8506:8508 Coq.MSets.MSetGenTree Props bst ind
R8510:8510 Coq.MSets.MSetGenTree <> s var
inst 8523:8528 Props bst_Ok
R8538:8540 Coq.MSets.MSetGenTree Props bst ind
R8542:8542 Coq.MSets.MSetGenTree <> s var
R8547:8548 Coq.MSets.MSetGenTree Props Ok class
R8550:8550 Coq.MSets.MSetGenTree <> s var
R8557:8558 Coq.MSets.MSetGenTree Props ok def
def 8579:8586 Props ltb_tree
R8602:8602 Coq.MSets.MSetGenTree <> s var
R8613:8616 Coq.MSets.MSetGenTree M Leaf constr
R8621:8624 Coq.Init.Datatypes <> true constr
R8630:8633 Coq.MSets.MSetGenTree M Node constr
R8657:8665 Coq.MSets.MSetGenTree X compare defax
R8667:8667 Coq.MSets.MSetGenTree <> x var
R8684:8685 Coq.Init.Datatypes <> Gt constr
R8702:8705 Coq.Init.Datatypes <> ::bool_scope:x_'&&'_x not
R8690:8697 Coq.MSets.MSetGenTree <> ltb_tree def
R8699:8699 Coq.MSets.MSetGenTree <> x var
R8706:8713 Coq.MSets.MSetGenTree <> ltb_tree def
R8715:8715 Coq.MSets.MSetGenTree <> x var
R8732:8736 Coq.Init.Datatypes <> false constr
def 8763:8770 Props gtb_tree
R8786:8786 Coq.MSets.MSetGenTree <> s var
R8797:8800 Coq.MSets.MSetGenTree M Leaf constr
R8805:8808 Coq.Init.Datatypes <> true constr
R8814:8817 Coq.MSets.MSetGenTree M Node constr
R8841:8849 Coq.MSets.MSetGenTree X compare defax
R8851:8851 Coq.MSets.MSetGenTree <> x var
R8868:8869 Coq.Init.Datatypes <> Lt constr
R8886:8889 Coq.Init.Datatypes <> ::bool_scope:x_'&&'_x not
R8874:8881 Coq.MSets.MSetGenTree <> gtb_tree def
R8883:8883 Coq.MSets.MSetGenTree <> x var
R8890:8897 Coq.MSets.MSetGenTree <> gtb_tree def
R8899:8899 Coq.MSets.MSetGenTree <> x var
R8916:8920 Coq.Init.Datatypes <> false constr
def 8947:8950 Props isok
R8964:8964 Coq.MSets.MSetGenTree <> s var
R8975:8978 Coq.MSets.MSetGenTree M Leaf constr
R8983:8986 Coq.Init.Datatypes <> true constr
R8992:8995 Coq.MSets.MSetGenTree M Node constr
R9041:9044 Coq.Init.Datatypes <> ::bool_scope:x_'&&'_x not
R9025:9028 Coq.Init.Datatypes <> ::bool_scope:x_'&&'_x not
R9015:9018 Coq.Init.Datatypes <> ::bool_scope:x_'&&'_x not
R9009:9012 Coq.MSets.MSetGenTree <> isok def
R9019:9022 Coq.MSets.MSetGenTree <> isok def
R9029:9036 Coq.MSets.MSetGenTree Props ltb_tree def
R9045:9052 Coq.MSets.MSetGenTree Props gtb_tree def
R9129:9144 Coq.Structures.OrdersFacts OrderedTypeFacts <> modtype
R9146:9146 Coq.MSets.MSetGenTree X <> modtype
mod 9123:9124 <> Props.MX
def 9201:9208 Props tree_ind
R9227:9230 Coq.MSets.MSetGenTree M tree ind
def 9250:9256 Props bst_ind
R9275:9277 Coq.MSets.MSetGenTree Props bst ind
R9399:9400 Coq.MSets.MSetGenTree Props In def
R9402:9408 Coq.MSets.MSetGenTree Props lt_tree def
R9410:9416 Coq.MSets.MSetGenTree Props gt_tree def
R9443:9445 Coq.MSets.MSetGenTree <> InT ind
R9447:9449 Coq.MSets.MSetGenTree <> bst ind
R9470:9471 Coq.MSets.MSetGenTree Props Ok class
R9614:9615 Coq.MSets.MSetGenTree Props Ok class
R9618:9621 Coq.MSets.MSetGenTree M Node constr
R9614:9615 Coq.MSets.MSetGenTree Props Ok class
R9618:9621 Coq.MSets.MSetGenTree M Node constr
R9671:9672 Coq.MSets.MSetGenTree Props Ok class
R9674:9677 Coq.MSets.MSetGenTree M Leaf constr
R9671:9672 Coq.MSets.MSetGenTree Props Ok class
R9674:9677 Coq.MSets.MSetGenTree M Leaf constr
R9708:9710 Coq.MSets.MSetGenTree Props bst ind
R9708:9710 Coq.MSets.MSetGenTree Props bst ind
R9731:9732 Coq.MSets.MSetGenTree Props Ok class
R9909:9912 Coq.MSets.MSetGenTree M Leaf constr
R9909:9912 Coq.MSets.MSetGenTree M Leaf constr
R9928:9931 Coq.MSets.MSetGenTree M Node constr
R9928:9931 Coq.MSets.MSetGenTree M Node constr
R10417:10423 Coq.MSets.MSetGenTree Props lt_tree def
R10417:10423 Coq.MSets.MSetGenTree Props lt_tree def
R10434:10436 Coq.MSets.MSetGenTree Props InT ind
R10434:10436 Coq.MSets.MSetGenTree Props InT ind
R10492:10498 Coq.MSets.MSetGenTree Props gt_tree def
R10492:10498 Coq.MSets.MSetGenTree Props gt_tree def
R10509:10511 Coq.MSets.MSetGenTree Props InT ind
R10509:10511 Coq.MSets.MSetGenTree Props InT ind
prf 10646:10657 Props ltb_tree_iff
R10684:10688 Coq.Init.Logic <> ::type_scope:x_'<->'_x not
R10673:10679 Coq.MSets.MSetGenTree Props lt_tree def
R10683:10683 Coq.MSets.MSetGenTree <> s var
R10681:10681 Coq.MSets.MSetGenTree <> x var
R10701:10703 Coq.Init.Logic <> ::type_scope:x_'='_x not
R10689:10696 Coq.MSets.MSetGenTree Props ltb_tree def
R10700:10700 Coq.MSets.MSetGenTree <> s var
R10698:10698 Coq.MSets.MSetGenTree <> x var
R10704:10707 Coq.Init.Datatypes <> true constr
R10768:10774 Coq.MSets.MSetGenTree Props lt_tree def
R10852:10855 Coq.MSets.MSetGenTree X lt defax
R10852:10855 Coq.MSets.MSetGenTree X lt defax
R10920:10923 Coq.MSets.MSetGenTree X lt defax
R10920:10923 Coq.MSets.MSetGenTree X lt defax
R10956:10968 Coq.Bool.Bool <> andb_true_iff thm
R10956:10968 Coq.Bool.Bool <> andb_true_iff thm
R10956:10968 Coq.Bool.Bool <> andb_true_iff thm
R10956:10968 Coq.Bool.Bool <> andb_true_iff thm
R10994:11000 Coq.MSets.MSetGenTree Props lt_tree def
prf 11036:11047 Props gtb_tree_iff
R11074:11078 Coq.Init.Logic <> ::type_scope:x_'<->'_x not
R11063:11069 Coq.MSets.MSetGenTree Props gt_tree def
R11073:11073 Coq.MSets.MSetGenTree <> s var
R11071:11071 Coq.MSets.MSetGenTree <> x var
R11091:11093 Coq.Init.Logic <> ::type_scope:x_'='_x not
R11079:11086 Coq.MSets.MSetGenTree Props gtb_tree def
R11090:11090 Coq.MSets.MSetGenTree <> s var
R11088:11088 Coq.MSets.MSetGenTree <> x var
R11094:11097 Coq.Init.Datatypes <> true constr
R11158:11164 Coq.MSets.MSetGenTree Props gt_tree def
R11242:11245 Coq.MSets.MSetGenTree X lt defax
R11242:11245 Coq.MSets.MSetGenTree X lt defax
R11278:11290 Coq.Bool.Bool <> andb_true_iff thm
R11278:11290 Coq.Bool.Bool <> andb_true_iff thm
R11278:11290 Coq.Bool.Bool <> andb_true_iff thm
R11278:11290 Coq.Bool.Bool <> andb_true_iff thm
R11316:11322 Coq.MSets.MSetGenTree Props gt_tree def
R11388:11391 Coq.MSets.MSetGenTree X lt defax
R11388:11391 Coq.MSets.MSetGenTree X lt defax
prf 11426:11433 Props isok_iff
R11451:11455 Coq.Init.Logic <> ::type_scope:x_'<->'_x not
R11447:11448 Coq.MSets.MSetGenTree Props Ok class
R11450:11450 Coq.MSets.MSetGenTree <> s var
R11462:11464 Coq.Init.Logic <> ::type_scope:x_'='_x not
R11456:11459 Coq.MSets.MSetGenTree Props isok def
R11461:11461 Coq.MSets.MSetGenTree <> s var
R11465:11468 Coq.Init.Datatypes <> true constr
R11546:11558 Coq.Bool.Bool <> andb_true_iff thm
R11579:11590 Coq.MSets.MSetGenTree Props ltb_tree_iff thm
R11596:11607 Coq.MSets.MSetGenTree Props gtb_tree_iff thm
R11546:11558 Coq.Bool.Bool <> andb_true_iff thm
R11546:11558 Coq.Bool.Bool <> andb_true_iff thm
R11546:11558 Coq.Bool.Bool <> andb_true_iff thm
R11546:11558 Coq.Bool.Bool <> andb_true_iff thm
R11546:11558 Coq.Bool.Bool <> andb_true_iff thm
R11579:11590 Coq.MSets.MSetGenTree Props ltb_tree_iff thm
R11579:11590 Coq.MSets.MSetGenTree Props ltb_tree_iff thm
R11596:11607 Coq.MSets.MSetGenTree Props gtb_tree_iff thm
R11596:11607 Coq.MSets.MSetGenTree Props gtb_tree_iff thm
inst 11640:11646 Props isok_Ok
R11665:11668 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R11669:11670 Coq.MSets.MSetGenTree Props Ok class
R11672:11672 Coq.MSets.MSetGenTree <> s var
R11658:11660 Coq.Init.Logic <> ::type_scope:x_'='_x not
R11652:11655 Coq.MSets.MSetGenTree Props isok def
R11657:11657 Coq.MSets.MSetGenTree <> s var
R11661:11664 Coq.Init.Datatypes <> true constr
R11704:11711 Coq.MSets.MSetGenTree Props isok_iff thm
R11704:11711 Coq.MSets.MSetGenTree Props isok_iff thm
prf 11768:11771 Props In_1
R11798:11801 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R11809:11812 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R11813:11815 Coq.MSets.MSetGenTree Props InT ind
R11819:11819 Coq.MSets.MSetGenTree <> s var
R11817:11817 Coq.MSets.MSetGenTree <> y var
R11802:11804 Coq.MSets.MSetGenTree Props InT ind
R11808:11808 Coq.MSets.MSetGenTree <> s var
R11806:11806 Coq.MSets.MSetGenTree <> x var
R11790:11793 Coq.MSets.MSetGenTree X eq defax
R11797:11797 Coq.MSets.MSetGenTree <> y var
R11795:11795 Coq.MSets.MSetGenTree <> x var
inst 11913:11921 Props In_compat
R11925:11930 Coq.Classes.Morphisms <> Proper class
R11950:11952 Coq.MSets.MSetGenTree Props InT ind
R11937:11939 Coq.Classes.Morphisms ProperNotations ::signature_scope:x_'==>'_x not
R11933:11936 Coq.MSets.MSetGenTree X eq defax
R11942:11944 Coq.Classes.Morphisms ProperNotations ::signature_scope:x_'==>'_x not
R11940:11941 Coq.Init.Logic <> eq ind
R11945:11947 Coq.Init.Logic <> iff def
R11968:11988 Coq.Classes.Morphisms <> proper_sym_impl_iff_2 thm
R11968:11988 Coq.Classes.Morphisms <> proper_sym_impl_iff_2 thm
R12037:12040 Coq.MSets.MSetGenTree Props In_1 thm
R12037:12040 Coq.MSets.MSetGenTree Props In_1 thm
prf 12068:12078 Props In_node_iff
R12123:12127 Coq.Init.Logic <> ::type_scope:x_'<->'_x not
R12103:12105 Coq.MSets.MSetGenTree Props InT ind
R12110:12113 Coq.MSets.MSetGenTree M Node constr
R12121:12121 Coq.MSets.MSetGenTree <> r var
R12119:12119 Coq.MSets.MSetGenTree <> x var
R12117:12117 Coq.MSets.MSetGenTree <> l var
R12115:12115 Coq.MSets.MSetGenTree <> c var
R12107:12107 Coq.MSets.MSetGenTree <> y var
R12135:12138 Coq.Init.Logic <> ::type_scope:x_'\/'_x not
R12128:12130 Coq.MSets.MSetGenTree Props InT ind
R12134:12134 Coq.MSets.MSetGenTree <> l var
R12132:12132 Coq.MSets.MSetGenTree <> y var
R12147:12150 Coq.Init.Logic <> ::type_scope:x_'\/'_x not
R12139:12142 Coq.MSets.MSetGenTree X eq defax
R12146:12146 Coq.MSets.MSetGenTree <> x var
R12144:12144 Coq.MSets.MSetGenTree <> y var
R12151:12153 Coq.MSets.MSetGenTree Props InT ind
R12157:12157 Coq.MSets.MSetGenTree <> r var
R12155:12155 Coq.MSets.MSetGenTree <> y var
prf 12194:12204 Props In_leaf_iff
R12228:12232 Coq.Init.Logic <> ::type_scope:x_'<->'_x not
R12218:12220 Coq.MSets.MSetGenTree Props InT ind
R12224:12227 Coq.MSets.MSetGenTree M Leaf constr
R12222:12222 Coq.MSets.MSetGenTree <> x var
R12233:12237 Coq.Init.Logic <> False ind
prf 12320:12326 Props lt_leaf
R12341:12343 Coq.MSets.MSetGenTree M elt def
R12346:12352 Coq.MSets.MSetGenTree Props lt_tree def
R12356:12359 Coq.MSets.MSetGenTree M Leaf constr
R12354:12354 Coq.MSets.MSetGenTree <> x var
prf 12400:12406 Props gt_leaf
R12421:12423 Coq.MSets.MSetGenTree M elt def
R12426:12432 Coq.MSets.MSetGenTree Props gt_tree def
R12436:12439 Coq.MSets.MSetGenTree M Leaf constr
R12434:12434 Coq.MSets.MSetGenTree <> x var
prf 12480:12491 Props lt_tree_node
R12510:12512 Coq.MSets.MSetGenTree M elt def
R12522:12525 Coq.MSets.MSetGenTree M tree ind
R12533:12538 Coq.MSets.MSetGenTree Info t defax
R12554:12557 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R12569:12572 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R12581:12584 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R12585:12591 Coq.MSets.MSetGenTree Props lt_tree def
R12596:12599 Coq.MSets.MSetGenTree M Node constr
R12607:12607 Coq.MSets.MSetGenTree <> r var
R12605:12605 Coq.MSets.MSetGenTree <> y var
R12603:12603 Coq.MSets.MSetGenTree <> l var
R12601:12601 Coq.MSets.MSetGenTree <> i var
R12593:12593 Coq.MSets.MSetGenTree <> x var
R12573:12576 Coq.MSets.MSetGenTree X lt defax
R12580:12580 Coq.MSets.MSetGenTree <> x var
R12578:12578 Coq.MSets.MSetGenTree <> y var
R12558:12564 Coq.MSets.MSetGenTree Props lt_tree def
R12568:12568 Coq.MSets.MSetGenTree <> r var
R12566:12566 Coq.MSets.MSetGenTree <> x var
R12543:12549 Coq.MSets.MSetGenTree Props lt_tree def
R12553:12553 Coq.MSets.MSetGenTree <> l var
R12551:12551 Coq.MSets.MSetGenTree <> x var
R12626:12632 Coq.MSets.MSetGenTree Props lt_tree def
prf 12668:12679 Props gt_tree_node
R12698:12700 Coq.MSets.MSetGenTree M elt def
R12710:12713 Coq.MSets.MSetGenTree M tree ind
R12721:12726 Coq.MSets.MSetGenTree Info t defax
R12742:12745 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R12757:12760 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R12769:12772 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R12773:12779 Coq.MSets.MSetGenTree Props gt_tree def
R12784:12787 Coq.MSets.MSetGenTree M Node constr
R12795:12795 Coq.MSets.MSetGenTree <> r var
R12793:12793 Coq.MSets.MSetGenTree <> y var
R12791:12791 Coq.MSets.MSetGenTree <> l var
R12789:12789 Coq.MSets.MSetGenTree <> i var
R12781:12781 Coq.MSets.MSetGenTree <> x var
R12761:12764 Coq.MSets.MSetGenTree X lt defax
R12768:12768 Coq.MSets.MSetGenTree <> y var
R12766:12766 Coq.MSets.MSetGenTree <> x var
R12746:12752 Coq.MSets.MSetGenTree Props gt_tree def
R12756:12756 Coq.MSets.MSetGenTree <> r var
R12754:12754 Coq.MSets.MSetGenTree <> x var
R12731:12737 Coq.MSets.MSetGenTree Props gt_tree def
R12741:12741 Coq.MSets.MSetGenTree <> l var
R12739:12739 Coq.MSets.MSetGenTree <> x var
R12814:12820 Coq.MSets.MSetGenTree Props gt_tree def
prf 12919:12932 Props lt_tree_not_in
R12949:12951 Coq.MSets.MSetGenTree M elt def
R12959:12962 Coq.MSets.MSetGenTree M tree ind
R12977:12980 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R12981:12982 Coq.Init.Logic <> ::type_scope:'~'_x not
R12983:12985 Coq.MSets.MSetGenTree Props InT ind
R12989:12989 Coq.MSets.MSetGenTree <> t var
R12987:12987 Coq.MSets.MSetGenTree <> x var
R12966:12972 Coq.MSets.MSetGenTree Props lt_tree def
R12976:12976 Coq.MSets.MSetGenTree <> t var
R12974:12974 Coq.MSets.MSetGenTree <> x var
prf 13034:13046 Props lt_tree_trans
R13071:13074 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R13096:13099 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R13100:13106 Coq.MSets.MSetGenTree Props lt_tree def
R13110:13110 Coq.MSets.MSetGenTree <> t var
R13108:13108 Coq.MSets.MSetGenTree <> y var
R13085:13091 Coq.MSets.MSetGenTree Props lt_tree def
R13095:13095 Coq.MSets.MSetGenTree <> t var
R13093:13093 Coq.MSets.MSetGenTree <> x var
R13063:13066 Coq.MSets.MSetGenTree X lt defax
R13070:13070 Coq.MSets.MSetGenTree <> y var
R13068:13068 Coq.MSets.MSetGenTree <> x var
prf 13140:13153 Props gt_tree_not_in
R13170:13172 Coq.MSets.MSetGenTree M elt def
R13180:13183 Coq.MSets.MSetGenTree M tree ind
R13198:13201 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R13202:13203 Coq.Init.Logic <> ::type_scope:'~'_x not
R13204:13206 Coq.MSets.MSetGenTree Props InT ind
R13210:13210 Coq.MSets.MSetGenTree <> t var
R13208:13208 Coq.MSets.MSetGenTree <> x var
R13187:13193 Coq.MSets.MSetGenTree Props gt_tree def
R13197:13197 Coq.MSets.MSetGenTree <> t var
R13195:13195 Coq.MSets.MSetGenTree <> x var
prf 13255:13267 Props gt_tree_trans
R13292:13295 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R13317:13320 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R13321:13327 Coq.MSets.MSetGenTree Props gt_tree def
R13331:13331 Coq.MSets.MSetGenTree <> t var
R13329:13329 Coq.MSets.MSetGenTree <> y var
R13306:13312 Coq.MSets.MSetGenTree Props gt_tree def
R13316:13316 Coq.MSets.MSetGenTree <> t var
R13314:13314 Coq.MSets.MSetGenTree <> x var
R13284:13287 Coq.MSets.MSetGenTree X lt defax
R13291:13291 Coq.MSets.MSetGenTree <> x var
R13289:13289 Coq.MSets.MSetGenTree <> y var
inst 13364:13377 Props lt_tree_compat
R13381:13386 Coq.Classes.Morphisms <> Proper class
R13416:13422 Coq.MSets.MSetGenTree Props lt_tree def
R13393:13397 Coq.Classes.Morphisms ProperNotations ::signature_scope:x_'==>'_x not
R13389:13392 Coq.MSets.MSetGenTree X eq defax
R13406:13410 Coq.Classes.Morphisms ProperNotations ::signature_scope:x_'==>'_x not
R13398:13405 Coq.Init.Logic <> eq ind
R13411:13413 Coq.Init.Logic <> iff def
R13439:13459 Coq.Classes.Morphisms <> proper_sym_impl_iff_2 thm
R13439:13459 Coq.Classes.Morphisms <> proper_sym_impl_iff_2 thm
inst 13550:13563 Props gt_tree_compat
R13567:13572 Coq.Classes.Morphisms <> Proper class
R13602:13608 Coq.MSets.MSetGenTree Props gt_tree def
R13579:13583 Coq.Classes.Morphisms ProperNotations ::signature_scope:x_'==>'_x not
R13575:13578 Coq.MSets.MSetGenTree X eq defax
R13592:13596 Coq.Classes.Morphisms ProperNotations ::signature_scope:x_'==>'_x not
R13584:13591 Coq.Init.Logic <> eq ind
R13597:13599 Coq.Init.Logic <> iff def
R13625:13645 Coq.Classes.Morphisms <> proper_sym_impl_iff_2 thm
R13625:13645 Coq.Classes.Morphisms <> proper_sym_impl_iff_2 thm
R13986:13988 Coq.MSets.MSetGenTree Props bst ind
R13986:13988 Coq.MSets.MSetGenTree Props bst ind
R13995:13996 Coq.MSets.MSetGenTree Props Ok class
R14029:14030 Coq.MSets.MSetGenTree Props Ok class
R14033:14036 Coq.MSets.MSetGenTree M Node constr
R14029:14030 Coq.MSets.MSetGenTree Props Ok class
R14033:14036 Coq.MSets.MSetGenTree M Node constr
R14083:14089 Coq.MSets.MSetGenTree Props lt_tree def
R14094:14097 Coq.MSets.MSetGenTree M Node constr
R14083:14089 Coq.MSets.MSetGenTree Props lt_tree def
R14094:14097 Coq.MSets.MSetGenTree M Node constr
R14142:14148 Coq.MSets.MSetGenTree Props gt_tree def
R14153:14156 Coq.MSets.MSetGenTree M Node constr
R14142:14148 Coq.MSets.MSetGenTree Props gt_tree def
R14153:14156 Coq.MSets.MSetGenTree M Node constr
R14176:14187 Coq.MSets.MSetGenTree Props gt_tree_node thm
R14117:14128 Coq.MSets.MSetGenTree Props lt_tree_node thm
prf 14268:14277 Props empty_spec
R14281:14285 Coq.MSets.MSetGenTree Props Empty def
R14287:14291 Coq.MSets.MSetGenTree M empty def
inst 14342:14349 Props empty_ok
R14353:14354 Coq.MSets.MSetGenTree Props Ok class
R14356:14360 Coq.MSets.MSetGenTree M empty def
prf 14415:14427 Props is_empty_spec
R14458:14462 Coq.Init.Logic <> ::type_scope:x_'<->'_x not
R14451:14453 Coq.Init.Logic <> ::type_scope:x_'='_x not
R14441:14448 Coq.MSets.MSetGenTree M is_empty def
R14450:14450 Coq.MSets.MSetGenTree <> s var
R14454:14457 Coq.Init.Datatypes <> true constr
R14463:14467 Coq.MSets.MSetGenTree Props Empty def
R14469:14469 Coq.MSets.MSetGenTree <> s var
prf 14649:14656 Props mem_spec
R14673:14674 Coq.MSets.MSetGenTree Props Ok class
R14676:14676 Coq.MSets.MSetGenTree <> s var
R14694:14698 Coq.Init.Logic <> ::type_scope:x_'<->'_x not
R14687:14689 Coq.Init.Logic <> ::type_scope:x_'='_x not
R14680:14682 Coq.MSets.MSetGenTree M mem def
R14686:14686 Coq.MSets.MSetGenTree <> s var
R14684:14684 Coq.MSets.MSetGenTree <> x var
R14690:14693 Coq.Init.Datatypes <> true constr
R14699:14701 Coq.MSets.MSetGenTree Props InT ind
R14705:14705 Coq.MSets.MSetGenTree <> s var
R14703:14703 Coq.MSets.MSetGenTree <> x var
prf 14969:14981 Props min_elt_spec1
R15007:15010 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R15011:15013 Coq.MSets.MSetGenTree Props InT ind
R15017:15017 Coq.MSets.MSetGenTree <> s var
R15015:15015 Coq.MSets.MSetGenTree <> x var
R14998:15000 Coq.Init.Logic <> ::type_scope:x_'='_x not
R14989:14995 Coq.MSets.MSetGenTree M min_elt def
R14997:14997 Coq.MSets.MSetGenTree <> s var
R15001:15004 Coq.Init.Datatypes <> Some constr
R15006:15006 Coq.MSets.MSetGenTree <> x var
R15050:15056 Coq.MSets.MSetGenTree M min_elt def
R15050:15056 Coq.MSets.MSetGenTree M min_elt def
prf 15099:15111 Props min_elt_spec2
R15121:15122 Coq.MSets.MSetGenTree Props Ok class
R15124:15124 Coq.MSets.MSetGenTree <> s var
R15148:15151 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R15159:15162 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R15163:15164 Coq.Init.Logic <> ::type_scope:'~'_x not
R15165:15168 Coq.MSets.MSetGenTree X lt defax
R15172:15172 Coq.MSets.MSetGenTree <> x var
R15170:15170 Coq.MSets.MSetGenTree <> y var
R15152:15154 Coq.MSets.MSetGenTree Props InT ind
R15158:15158 Coq.MSets.MSetGenTree <> s var
R15156:15156 Coq.MSets.MSetGenTree <> y var
R15139:15141 Coq.Init.Logic <> ::type_scope:x_'='_x not
R15130:15136 Coq.MSets.MSetGenTree M min_elt def
R15138:15138 Coq.MSets.MSetGenTree <> s var
R15142:15145 Coq.Init.Datatypes <> Some constr
R15147:15147 Coq.MSets.MSetGenTree <> x var
R15216:15222 Coq.MSets.MSetGenTree M min_elt def
R15216:15222 Coq.MSets.MSetGenTree M min_elt def
R15418:15421 Coq.MSets.MSetGenTree X lt defax
R15449:15461 Coq.MSets.MSetGenTree Props min_elt_spec1 thm
R15418:15421 Coq.MSets.MSetGenTree X lt defax
R15449:15461 Coq.MSets.MSetGenTree Props min_elt_spec1 thm
R15496:15499 Coq.MSets.MSetGenTree X lt defax
R15496:15499 Coq.MSets.MSetGenTree X lt defax
R15530:15530 Coq.Init.Logic <> ::type_scope:'~'_x not
R15531:15534 Coq.MSets.MSetGenTree X lt defax
R15530:15530 Coq.Init.Logic <> ::type_scope:'~'_x not
R15531:15534 Coq.MSets.MSetGenTree X lt defax
prf 15575:15587 Props min_elt_spec3
R15609:15612 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R15613:15617 Coq.MSets.MSetGenTree Props Empty def
R15619:15619 Coq.MSets.MSetGenTree <> s var
R15602:15604 Coq.Init.Logic <> ::type_scope:x_'='_x not
R15593:15599 Coq.MSets.MSetGenTree M min_elt def
R15601:15601 Coq.MSets.MSetGenTree <> s var
R15605:15608 Coq.Init.Datatypes <> None constr
R15652:15658 Coq.MSets.MSetGenTree M min_elt def
R15652:15658 Coq.MSets.MSetGenTree M min_elt def
prf 15755:15767 Props max_elt_spec1
R15793:15796 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R15797:15799 Coq.MSets.MSetGenTree Props InT ind
R15803:15803 Coq.MSets.MSetGenTree <> s var
R15801:15801 Coq.MSets.MSetGenTree <> x var
R15784:15786 Coq.Init.Logic <> ::type_scope:x_'='_x not
R15775:15781 Coq.MSets.MSetGenTree M max_elt def
R15783:15783 Coq.MSets.MSetGenTree <> s var
R15787:15790 Coq.Init.Datatypes <> Some constr
R15792:15792 Coq.MSets.MSetGenTree <> x var
R15836:15842 Coq.MSets.MSetGenTree M max_elt def
R15836:15842 Coq.MSets.MSetGenTree M max_elt def
prf 15885:15897 Props max_elt_spec2
R15907:15908 Coq.MSets.MSetGenTree Props Ok class
R15910:15910 Coq.MSets.MSetGenTree <> s var
R15934:15937 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R15945:15948 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R15949:15950 Coq.Init.Logic <> ::type_scope:'~'_x not
R15951:15954 Coq.MSets.MSetGenTree X lt defax
R15958:15958 Coq.MSets.MSetGenTree <> y var
R15956:15956 Coq.MSets.MSetGenTree <> x var
R15938:15940 Coq.MSets.MSetGenTree Props InT ind
R15944:15944 Coq.MSets.MSetGenTree <> s var
R15942:15942 Coq.MSets.MSetGenTree <> y var
R15925:15927 Coq.Init.Logic <> ::type_scope:x_'='_x not
R15916:15922 Coq.MSets.MSetGenTree M max_elt def
R15924:15924 Coq.MSets.MSetGenTree <> s var
R15928:15931 Coq.Init.Datatypes <> Some constr
R15933:15933 Coq.MSets.MSetGenTree <> x var
R16002:16008 Coq.MSets.MSetGenTree M max_elt def
R16002:16008 Coq.MSets.MSetGenTree M max_elt def
R16204:16207 Coq.MSets.MSetGenTree X lt defax
R16235:16247 Coq.MSets.MSetGenTree Props max_elt_spec1 thm
R16204:16207 Coq.MSets.MSetGenTree X lt defax
R16235:16247 Coq.MSets.MSetGenTree Props max_elt_spec1 thm
R16282:16285 Coq.MSets.MSetGenTree X lt defax
R16282:16285 Coq.MSets.MSetGenTree X lt defax
R16316:16316 Coq.Init.Logic <> ::type_scope:'~'_x not
R16317:16320 Coq.MSets.MSetGenTree X lt defax
R16316:16316 Coq.Init.Logic <> ::type_scope:'~'_x not
R16317:16320 Coq.MSets.MSetGenTree X lt defax
prf 16361:16373 Props max_elt_spec3
R16395:16398 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R16399:16403 Coq.MSets.MSetGenTree Props Empty def
R16405:16405 Coq.MSets.MSetGenTree <> s var
R16388:16390 Coq.Init.Logic <> ::type_scope:x_'='_x not
R16379:16385 Coq.MSets.MSetGenTree M max_elt def
R16387:16387 Coq.MSets.MSetGenTree <> s var
R16391:16394 Coq.Init.Datatypes <> None constr
R16438:16444 Coq.MSets.MSetGenTree M max_elt def
R16438:16444 Coq.MSets.MSetGenTree M max_elt def
prf 16541:16552 Props choose_spec1
R16585:16588 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R16589:16591 Coq.MSets.MSetGenTree Props InT ind
R16595:16595 Coq.MSets.MSetGenTree <> s var
R16593:16593 Coq.MSets.MSetGenTree <> x var
R16576:16578 Coq.Init.Logic <> ::type_scope:x_'='_x not
R16568:16573 Coq.MSets.MSetGenTree M choose def
R16575:16575 Coq.MSets.MSetGenTree <> s var
R16579:16582 Coq.Init.Datatypes <> Some constr
R16584:16584 Coq.MSets.MSetGenTree <> x var
R16612:16624 Coq.MSets.MSetGenTree Props min_elt_spec1 thm
R16612:16624 Coq.MSets.MSetGenTree Props min_elt_spec1 thm
prf 16639:16650 Props choose_spec2
R16679:16682 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R16683:16687 Coq.MSets.MSetGenTree Props Empty def
R16689:16689 Coq.MSets.MSetGenTree <> s var
R16672:16674 Coq.Init.Logic <> ::type_scope:x_'='_x not
R16664:16669 Coq.MSets.MSetGenTree M choose def
R16671:16671 Coq.MSets.MSetGenTree <> s var
R16675:16678 Coq.Init.Datatypes <> None constr
R16706:16718 Coq.MSets.MSetGenTree Props min_elt_spec3 thm
R16706:16718 Coq.MSets.MSetGenTree Props min_elt_spec3 thm
prf 16733:16744 Props choose_spec3
R16767:16768 Coq.MSets.MSetGenTree Props Ok class
R16770:16770 Coq.MSets.MSetGenTree <> s var
R16773:16774 Coq.MSets.MSetGenTree Props Ok class
R16776:16777 Coq.MSets.MSetGenTree <> s' var
R16800:16803 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R16823:16828 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R16839:16842 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R16843:16846 Coq.MSets.MSetGenTree X eq defax
R16850:16851 Coq.MSets.MSetGenTree <> x' var
R16848:16848 Coq.MSets.MSetGenTree <> x var
R16829:16833 Coq.MSets.MSetGenTree Props Equal def
R16837:16838 Coq.MSets.MSetGenTree <> s' var
R16835:16835 Coq.MSets.MSetGenTree <> s var
R16813:16815 Coq.Init.Logic <> ::type_scope:x_'='_x not
R16804:16809 Coq.MSets.MSetGenTree M choose def
R16811:16812 Coq.MSets.MSetGenTree <> s' var
R16816:16819 Coq.Init.Datatypes <> Some constr
R16821:16822 Coq.MSets.MSetGenTree <> x' var
R16791:16793 Coq.Init.Logic <> ::type_scope:x_'='_x not
R16783:16788 Coq.MSets.MSetGenTree M choose def
R16790:16790 Coq.MSets.MSetGenTree <> s var
R16794:16797 Coq.Init.Datatypes <> Some constr
R16799:16799 Coq.MSets.MSetGenTree <> x var
R16869:16874 Coq.MSets.MSetGenTree M choose def
R16877:16881 Coq.MSets.MSetGenTree Props Equal def
R16927:16927 Coq.Init.Logic <> ::type_scope:'~'_x not
R16928:16931 Coq.MSets.MSetGenTree X lt defax
R16927:16927 Coq.Init.Logic <> ::type_scope:'~'_x not
R16928:16931 Coq.MSets.MSetGenTree X lt defax
R16948:16960 Coq.MSets.MSetGenTree Props min_elt_spec2 thm
R16948:16960 Coq.MSets.MSetGenTree Props min_elt_spec2 thm
R17003:17015 Coq.MSets.MSetGenTree Props min_elt_spec1 thm
R17003:17015 Coq.MSets.MSetGenTree Props min_elt_spec1 thm
R17027:17027 Coq.Init.Logic <> ::type_scope:'~'_x not
R17028:17031 Coq.MSets.MSetGenTree X lt defax
R17027:17027 Coq.Init.Logic <> ::type_scope:'~'_x not
R17028:17031 Coq.MSets.MSetGenTree X lt defax
R17048:17060 Coq.MSets.MSetGenTree Props min_elt_spec2 thm
R17048:17060 Coq.MSets.MSetGenTree Props min_elt_spec2 thm
R17100:17112 Coq.MSets.MSetGenTree Props min_elt_spec1 thm
R17100:17112 Coq.MSets.MSetGenTree Props min_elt_spec1 thm
prf 17178:17192 Props elements_spec1'
R17244:17248 Coq.Init.Logic <> ::type_scope:x_'<->'_x not
R17213:17215 Coq.Lists.SetoidList <> InA ind
R17225:17236 Coq.MSets.MSetGenTree M elements_aux def
R17242:17242 Coq.MSets.MSetGenTree <> s var
R17238:17240 Coq.MSets.MSetGenTree <> acc var
R17222:17222 Coq.MSets.MSetGenTree <> x var
R17217:17220 Coq.MSets.MSetGenTree X eq defax
R17256:17259 Coq.Init.Logic <> ::type_scope:x_'\/'_x not
R17249:17251 Coq.MSets.MSetGenTree Props InT ind
R17255:17255 Coq.MSets.MSetGenTree <> s var
R17253:17253 Coq.MSets.MSetGenTree <> x var
R17260:17262 Coq.Lists.SetoidList <> InA ind
R17271:17273 Coq.MSets.MSetGenTree <> acc var
R17269:17269 Coq.MSets.MSetGenTree <> x var
R17264:17267 Coq.MSets.MSetGenTree X eq defax
prf 17473:17486 Props elements_spec1
R17525:17529 Coq.Init.Logic <> ::type_scope:x_'<->'_x not
R17502:17504 Coq.Lists.SetoidList <> InA ind
R17514:17521 Coq.MSets.MSetGenTree M elements def
R17523:17523 Coq.MSets.MSetGenTree <> s var
R17511:17511 Coq.MSets.MSetGenTree <> x var
R17506:17509 Coq.MSets.MSetGenTree X eq defax
R17530:17532 Coq.MSets.MSetGenTree Props InT ind
R17536:17536 Coq.MSets.MSetGenTree <> s var
R17534:17534 Coq.MSets.MSetGenTree <> x var
R17567:17581 Coq.MSets.MSetGenTree Props elements_spec1' thm
R17585:17587 Coq.Init.Datatypes <> nil constr
R17567:17581 Coq.MSets.MSetGenTree Props elements_spec1' thm
R17585:17587 Coq.Init.Datatypes <> nil constr
prf 17637:17651 Props elements_spec2'
R17670:17671 Coq.MSets.MSetGenTree Props Ok class
R17673:17673 Coq.MSets.MSetGenTree <> s var
R17690:17694 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R17695:17695 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R17751:17756 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R17757:17760 Coq.Sorting.Sorted <> sort syndef
R17768:17779 Coq.MSets.MSetGenTree M elements_aux def
R17785:17785 Coq.MSets.MSetGenTree <> s var
R17781:17783 Coq.MSets.MSetGenTree <> acc var
R17762:17765 Coq.MSets.MSetGenTree X lt defax
R17709:17711 Coq.MSets.MSetGenTree M elt def
R17728:17731 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R17739:17742 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R17743:17746 Coq.MSets.MSetGenTree X lt defax
R17750:17750 Coq.MSets.MSetGenTree <> x var
R17748:17748 Coq.MSets.MSetGenTree <> y var
R17732:17734 Coq.MSets.MSetGenTree Props InT ind
R17738:17738 Coq.MSets.MSetGenTree <> s var
R17736:17736 Coq.MSets.MSetGenTree <> y var
R17714:17716 Coq.Lists.SetoidList <> InA ind
R17725:17727 Coq.MSets.MSetGenTree <> acc var
R17723:17723 Coq.MSets.MSetGenTree <> x var
R17718:17721 Coq.MSets.MSetGenTree X eq defax
R17677:17680 Coq.Sorting.Sorted <> sort syndef
R17687:17689 Coq.MSets.MSetGenTree <> acc var
R17682:17685 Coq.MSets.MSetGenTree X lt defax
R17912:17919 Coq.Lists.SetoidList <> InA_InfA thm
R17912:17919 Coq.Lists.SetoidList <> InA_InfA thm
R17956:17970 Coq.MSets.MSetGenTree Props elements_spec1' thm
R17956:17970 Coq.MSets.MSetGenTree Props elements_spec1' thm
R18042:18056 Coq.MSets.MSetGenTree Props elements_spec1' thm
R18042:18056 Coq.MSets.MSetGenTree Props elements_spec1' thm
prf 18097:18110 Props elements_spec2
R18125:18126 Coq.MSets.MSetGenTree Props Ok class
R18128:18128 Coq.MSets.MSetGenTree <> s var
R18132:18135 Coq.Sorting.Sorted <> sort syndef
R18143:18150 Coq.MSets.MSetGenTree M elements def
R18152:18152 Coq.MSets.MSetGenTree <> s var
R18137:18140 Coq.MSets.MSetGenTree X lt defax
R18179:18186 Coq.MSets.MSetGenTree M elements def
R18195:18209 Coq.MSets.MSetGenTree Props elements_spec2' thm
R18195:18209 Coq.MSets.MSetGenTree Props elements_spec2' thm
prf 18288:18302 Props elements_spec2w
R18317:18318 Coq.MSets.MSetGenTree Props Ok class
R18320:18320 Coq.MSets.MSetGenTree <> s var
R18324:18329 Coq.Lists.SetoidList <> NoDupA ind
R18337:18344 Coq.MSets.MSetGenTree M elements def
R18346:18346 Coq.MSets.MSetGenTree <> s var
R18331:18334 Coq.MSets.MSetGenTree X eq defax
R18373:18384 Coq.Lists.SetoidList <> SortA_NoDupA thm
R18373:18384 Coq.Lists.SetoidList <> SortA_NoDupA thm
prf 18413:18433 Props elements_aux_cardinal
R18481:18483 Coq.Init.Logic <> ::type_scope:x_'='_x not
R18463:18465 Coq.Init.Peano <> ::nat_scope:x_'+'_x not
R18453:18458 Coq.Init.Datatypes <> length def
R18460:18462 Coq.MSets.MSetGenTree <> acc var
R18466:18473 Coq.MSets.MSetGenTree M cardinal def
R18475:18475 Coq.MSets.MSetGenTree <> s var
R18484:18489 Coq.Init.Datatypes <> length def
R18492:18503 Coq.MSets.MSetGenTree M elements_aux def
R18509:18509 Coq.MSets.MSetGenTree <> s var
R18505:18507 Coq.MSets.MSetGenTree <> acc var
R18607:18618 Coq.Arith.PeanoNat Nat add_comm thm
R18621:18628 Coq.MSets.MSetGenTree M cardinal def
R18607:18618 Coq.Arith.PeanoNat Nat add_comm thm
R18621:18628 Coq.MSets.MSetGenTree M cardinal def
R18607:18618 Coq.Arith.PeanoNat Nat add_comm thm
R18621:18628 Coq.MSets.MSetGenTree M cardinal def
R18652:18665 Coq.Arith.PeanoNat Nat add_succ_r thm
R18668:18680 Coq.Arith.PeanoNat Nat add_assoc thm
R18652:18665 Coq.Arith.PeanoNat Nat add_succ_r thm
R18652:18665 Coq.Arith.PeanoNat Nat add_succ_r thm
R18668:18680 Coq.Arith.PeanoNat Nat add_assoc thm
R18668:18680 Coq.Arith.PeanoNat Nat add_assoc thm
prf 18695:18711 Props elements_cardinal
R18726:18729 Coq.MSets.MSetGenTree M tree ind
R18742:18744 Coq.Init.Logic <> ::type_scope:x_'='_x not
R18732:18739 Coq.MSets.MSetGenTree M cardinal def
R18741:18741 Coq.MSets.MSetGenTree <> s var
R18745:18750 Coq.Init.Datatypes <> length def
R18753:18760 Coq.MSets.MSetGenTree M elements def
R18762:18762 Coq.MSets.MSetGenTree <> s var
R18790:18810 Coq.MSets.MSetGenTree Props elements_aux_cardinal thm
R18814:18816 Coq.Init.Datatypes <> nil constr
R18812:18812 Coq.MSets.MSetGenTree <> s var
R18790:18810 Coq.MSets.MSetGenTree Props elements_aux_cardinal thm
R18814:18816 Coq.Init.Datatypes <> nil constr
R18812:18812 Coq.MSets.MSetGenTree <> s var
def 18837:18849 Props cardinal_spec
R18854:18857 Coq.MSets.MSetGenTree M tree ind
R18863:18864 Coq.MSets.MSetGenTree Props Ok class
R18866:18866 Coq.MSets.MSetGenTree <> s var
R18872:18888 Coq.MSets.MSetGenTree Props elements_cardinal thm
R18890:18890 Coq.MSets.MSetGenTree <> s var
prf 18900:18911 Props elements_app
R18948:18950 Coq.Init.Logic <> ::type_scope:x_'='_x not
R18930:18941 Coq.MSets.MSetGenTree M elements_aux def
R18947:18947 Coq.MSets.MSetGenTree <> s var
R18943:18945 Coq.MSets.MSetGenTree <> acc var
R18961:18964 Coq.Init.Datatypes <> ::list_scope:x_'++'_x not
R18951:18958 Coq.MSets.MSetGenTree M elements def
R18960:18960 Coq.MSets.MSetGenTree <> s var
R18965:18967 Coq.MSets.MSetGenTree <> acc var
R19041:19048 Coq.MSets.MSetGenTree M elements def
R19082:19090 Coq.Lists.List <> app_nil_r thm
R19094:19100 Coq.Lists.List <> app_ass syndef
R19082:19090 Coq.Lists.List <> app_nil_r thm
R19082:19090 Coq.Lists.List <> app_nil_r thm
R19082:19090 Coq.Lists.List <> app_nil_r thm
R19082:19090 Coq.Lists.List <> app_nil_r thm
R19094:19100 Coq.Lists.List <> app_ass syndef
R19094:19100 Coq.Lists.List <> app_ass syndef
R19094:19100 Coq.Lists.List <> app_ass syndef
prf 19121:19133 Props elements_node
R19169:19171 Coq.Init.Logic <> ::type_scope:x_'='_x not
R19146:19153 Coq.MSets.MSetGenTree M elements def
R19156:19159 Coq.MSets.MSetGenTree M Node constr
R19167:19167 Coq.MSets.MSetGenTree <> r var
R19165:19165 Coq.MSets.MSetGenTree <> x var
R19163:19163 Coq.MSets.MSetGenTree <> l var
R19161:19161 Coq.MSets.MSetGenTree <> c var
R19182:19185 Coq.Init.Datatypes <> ::list_scope:x_'++'_x not
R19172:19179 Coq.MSets.MSetGenTree M elements def
R19181:19181 Coq.MSets.MSetGenTree <> l var
R19187:19190 Coq.Init.Datatypes <> ::list_scope:x_'::'_x not
R19186:19186 Coq.MSets.MSetGenTree <> x var
R19191:19198 Coq.MSets.MSetGenTree M elements def
R19200:19200 Coq.MSets.MSetGenTree <> r var
R19218:19225 Coq.MSets.MSetGenTree M elements def
R19249:19260 Coq.MSets.MSetGenTree Props elements_app thm
R19264:19272 Coq.Lists.List <> app_nil_r thm
R19249:19260 Coq.MSets.MSetGenTree Props elements_app thm
R19249:19260 Coq.MSets.MSetGenTree Props elements_app thm
R19249:19260 Coq.MSets.MSetGenTree Props elements_app thm
R19249:19260 Coq.MSets.MSetGenTree Props elements_app thm
R19249:19260 Coq.MSets.MSetGenTree Props elements_app thm
R19264:19272 Coq.Lists.List <> app_nil_r thm
R19264:19272 Coq.Lists.List <> app_nil_r thm
R19264:19272 Coq.Lists.List <> app_nil_r thm
R19264:19272 Coq.Lists.List <> app_nil_r thm
prf 19287:19302 Props rev_elements_app
R19343:19345 Coq.Init.Logic <> ::type_scope:x_'='_x not
R19321:19336 Coq.MSets.MSetGenTree M rev_elements_aux def
R19342:19342 Coq.MSets.MSetGenTree <> s var
R19338:19340 Coq.MSets.MSetGenTree <> acc var
R19360:19363 Coq.Init.Datatypes <> ::list_scope:x_'++'_x not
R19346:19357 Coq.MSets.MSetGenTree M rev_elements def
R19359:19359 Coq.MSets.MSetGenTree <> s var
R19364:19366 Coq.MSets.MSetGenTree <> acc var
R19440:19451 Coq.MSets.MSetGenTree M rev_elements def
R19485:19493 Coq.Lists.List <> app_nil_r thm
R19497:19503 Coq.Lists.List <> app_ass syndef
R19485:19493 Coq.Lists.List <> app_nil_r thm
R19485:19493 Coq.Lists.List <> app_nil_r thm
R19485:19493 Coq.Lists.List <> app_nil_r thm
R19485:19493 Coq.Lists.List <> app_nil_r thm
R19497:19503 Coq.Lists.List <> app_ass syndef
R19497:19503 Coq.Lists.List <> app_ass syndef
R19497:19503 Coq.Lists.List <> app_ass syndef
prf 19524:19540 Props rev_elements_node
R19580:19582 Coq.Init.Logic <> ::type_scope:x_'='_x not
R19553:19564 Coq.MSets.MSetGenTree M rev_elements def
R19567:19570 Coq.MSets.MSetGenTree M Node constr
R19578:19578 Coq.MSets.MSetGenTree <> r var
R19576:19576 Coq.MSets.MSetGenTree <> x var
R19574:19574 Coq.MSets.MSetGenTree <> l var
R19572:19572 Coq.MSets.MSetGenTree <> c var
R19597:19600 Coq.Init.Datatypes <> ::list_scope:x_'++'_x not
R19583:19594 Coq.MSets.MSetGenTree M rev_elements def
R19596:19596 Coq.MSets.MSetGenTree <> r var
R19602:19605 Coq.Init.Datatypes <> ::list_scope:x_'::'_x not
R19601:19601 Coq.MSets.MSetGenTree <> x var
R19606:19617 Coq.MSets.MSetGenTree M rev_elements def
R19619:19619 Coq.MSets.MSetGenTree <> l var
R19637:19648 Coq.MSets.MSetGenTree M rev_elements def
R19672:19687 Coq.MSets.MSetGenTree Props rev_elements_app thm
R19691:19699 Coq.Lists.List <> app_nil_r thm
R19672:19687 Coq.MSets.MSetGenTree Props rev_elements_app thm
R19672:19687 Coq.MSets.MSetGenTree Props rev_elements_app thm
R19672:19687 Coq.MSets.MSetGenTree Props rev_elements_app thm
R19672:19687 Coq.MSets.MSetGenTree Props rev_elements_app thm
R19672:19687 Coq.MSets.MSetGenTree Props rev_elements_app thm
R19691:19699 Coq.Lists.List <> app_nil_r thm
R19691:19699 Coq.Lists.List <> app_nil_r thm
R19691:19699 Coq.Lists.List <> app_nil_r thm
R19691:19699 Coq.Lists.List <> app_nil_r thm
prf 19714:19729 Props rev_elements_rev
R19749:19751 Coq.Init.Logic <> ::type_scope:x_'='_x not
R19735:19746 Coq.MSets.MSetGenTree M rev_elements def
R19748:19748 Coq.MSets.MSetGenTree <> s var
R19752:19754 Coq.Lists.List <> rev def
R19757:19764 Coq.MSets.MSetGenTree M elements def
R19766:19766 Coq.MSets.MSetGenTree <> s var
R19831:19843 Coq.MSets.MSetGenTree Props elements_node thm
R19846:19862 Coq.MSets.MSetGenTree Props rev_elements_node thm
R19875:19887 Coq.Lists.List <> rev_app_distr thm
R19831:19843 Coq.MSets.MSetGenTree Props elements_node thm
R19831:19843 Coq.MSets.MSetGenTree Props elements_node thm
R19846:19862 Coq.MSets.MSetGenTree Props rev_elements_node thm
R19846:19862 Coq.MSets.MSetGenTree Props rev_elements_node thm
R19875:19887 Coq.Lists.List <> rev_app_distr thm
R19875:19887 Coq.Lists.List <> rev_app_distr thm
R19911:19917 Coq.Lists.List <> app_ass syndef
R19911:19917 Coq.Lists.List <> app_ass syndef
R19911:19917 Coq.Lists.List <> app_ass syndef
R19911:19917 Coq.Lists.List <> app_ass syndef
prf 20027:20040 Props sorted_app_inv
R20069:20073 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R20086:20089 Coq.Init.Logic <> ::type_scope:x_'/\'_x not
R20074:20077 Coq.Sorting.Sorted <> sort syndef
R20084:20085 Coq.MSets.MSetGenTree <> l1 var
R20079:20082 Coq.MSets.MSetGenTree X lt defax
R20102:20106 Coq.Init.Logic <> ::type_scope:x_'/\'_x not
R20090:20093 Coq.Sorting.Sorted <> sort syndef
R20100:20101 Coq.MSets.MSetGenTree <> l2 var
R20095:20098 Coq.MSets.MSetGenTree X lt defax
R20135:20138 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R20153:20156 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R20157:20160 Coq.MSets.MSetGenTree X lt defax
R20165:20166 Coq.MSets.MSetGenTree <> x2 var
R20162:20163 Coq.MSets.MSetGenTree <> x1 var
R20139:20141 Coq.Lists.SetoidList <> InA ind
R20151:20152 Coq.MSets.MSetGenTree <> l2 var
R20148:20149 Coq.MSets.MSetGenTree <> x2 var
R20143:20146 Coq.MSets.MSetGenTree X eq defax
R20121:20123 Coq.Lists.SetoidList <> InA ind
R20133:20134 Coq.MSets.MSetGenTree <> l1 var
R20130:20131 Coq.MSets.MSetGenTree <> x1 var
R20125:20128 Coq.MSets.MSetGenTree X eq defax
R20051:20054 Coq.Sorting.Sorted <> sort syndef
R20064:20065 Coq.Init.Datatypes <> ::list_scope:x_'++'_x not
R20062:20063 Coq.MSets.MSetGenTree <> l1 var
R20066:20067 Coq.MSets.MSetGenTree <> l2 var
R20056:20059 Coq.MSets.MSetGenTree X lt defax
R20261:20267 Coq.Lists.SetoidList <> InA_nil thm
R20261:20267 Coq.Lists.SetoidList <> InA_nil thm
R20261:20267 Coq.Lists.SetoidList <> InA_nil thm
R20518:20525 Coq.Lists.SetoidList <> InA_cons thm
R20518:20525 Coq.Lists.SetoidList <> InA_cons thm
R20518:20525 Coq.Lists.SetoidList <> InA_cons thm
R20606:20609 Coq.MSets.MSetGenTree X eq defax
R20617:20618 Coq.Init.Datatypes <> ::list_scope:x_'++'_x not
R20580:20593 Coq.Lists.SetoidList <> SortA_InfA_InA thm
R20606:20609 Coq.MSets.MSetGenTree X eq defax
R20617:20618 Coq.Init.Datatypes <> ::list_scope:x_'++'_x not
R20580:20593 Coq.Lists.SetoidList <> SortA_InfA_InA thm
R20648:20658 Coq.Lists.SetoidList <> InA_app_iff thm
R20648:20658 Coq.Lists.SetoidList <> InA_app_iff thm
R20648:20658 Coq.Lists.SetoidList <> InA_app_iff thm
prf 20695:20710 Props elements_sort_ok
R20738:20741 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R20742:20743 Coq.MSets.MSetGenTree Props Ok class
R20745:20745 Coq.MSets.MSetGenTree <> s var
R20716:20719 Coq.Sorting.Sorted <> sort syndef
R20727:20734 Coq.MSets.MSetGenTree M elements def
R20736:20736 Coq.MSets.MSetGenTree <> s var
R20721:20724 Coq.MSets.MSetGenTree X lt defax
R20811:20823 Coq.MSets.MSetGenTree Props elements_node thm
R20811:20823 Coq.MSets.MSetGenTree Props elements_node thm
R20811:20823 Coq.MSets.MSetGenTree Props elements_node thm
R20849:20862 Coq.MSets.MSetGenTree Props sorted_app_inv thm
R20849:20862 Coq.MSets.MSetGenTree Props sorted_app_inv thm
R20980:20993 Coq.MSets.MSetGenTree Props elements_spec1 thm
R20980:20993 Coq.MSets.MSetGenTree Props elements_spec1 thm
R20980:20993 Coq.MSets.MSetGenTree Props elements_spec1 thm
R21011:21018 Coq.Lists.SetoidList <> InA_cons thm
R21011:21018 Coq.Lists.SetoidList <> InA_cons thm
R21011:21018 Coq.Lists.SetoidList <> InA_cons thm
R21086:21089 Coq.MSets.MSetGenTree X eq defax
R21095:21102 Coq.MSets.MSetGenTree M elements def
R21060:21073 Coq.Lists.SetoidList <> SortA_InfA_InA thm
R21086:21089 Coq.MSets.MSetGenTree X eq defax
R21095:21102 Coq.MSets.MSetGenTree M elements def
R21060:21073 Coq.Lists.SetoidList <> SortA_InfA_InA thm
R21134:21147 Coq.MSets.MSetGenTree Props elements_spec1 thm
R21134:21147 Coq.MSets.MSetGenTree Props elements_spec1 thm
R21134:21147 Coq.MSets.MSetGenTree Props elements_spec1 thm
prf 21196:21207 Props for_all_spec
R21235:21240 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R21295:21295 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R21259:21263 Coq.Init.Logic <> ::type_scope:x_'<->'_x not
R21252:21254 Coq.Init.Logic <> ::type_scope:x_'='_x not
R21241:21247 Coq.MSets.MSetGenTree M for_all def
R21251:21251 Coq.MSets.MSetGenTree <> s var
R21249:21249 Coq.MSets.MSetGenTree <> f var
R21255:21258 Coq.Init.Datatypes <> true constr
R21264:21270 Coq.MSets.MSetGenTree Props For_all def
R21294:21294 Coq.MSets.MSetGenTree <> s var
R21285:21287 Coq.Init.Logic <> ::type_scope:x_'='_x not
R21282:21282 Coq.MSets.MSetGenTree <> f var
R21284:21284 Coq.MSets.MSetGenTree <> x var
R21288:21291 Coq.Init.Datatypes <> true constr
R21215:21220 Coq.Classes.Morphisms <> Proper class
R21234:21234 Coq.MSets.MSetGenTree <> f var
R21227:21229 Coq.Classes.Morphisms ProperNotations ::signature_scope:x_'==>'_x not
R21223:21226 Coq.MSets.MSetGenTree X eq defax
R21230:21231 Coq.Init.Logic <> eq ind
R21324:21330 Coq.MSets.MSetGenTree Props For_all def
R21426:21438 Coq.Bool.Bool <> andb_lazy_alt thm
R21442:21454 Coq.Bool.Bool <> andb_true_iff thm
R21426:21438 Coq.Bool.Bool <> andb_lazy_alt thm
R21426:21438 Coq.Bool.Bool <> andb_lazy_alt thm
R21426:21438 Coq.Bool.Bool <> andb_lazy_alt thm
R21426:21438 Coq.Bool.Bool <> andb_lazy_alt thm
R21442:21454 Coq.Bool.Bool <> andb_true_iff thm
R21442:21454 Coq.Bool.Bool <> andb_true_iff thm
R21442:21454 Coq.Bool.Bool <> andb_true_iff thm
R21442:21454 Coq.Bool.Bool <> andb_true_iff thm
prf 21518:21528 Props exists_spec
R21556:21561 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R21615:21615 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R21580:21584 Coq.Init.Logic <> ::type_scope:x_'<->'_x not
R21573:21575 Coq.Init.Logic <> ::type_scope:x_'='_x not
R21562:21568 Coq.MSets.MSetGenTree M exists_ def
R21572:21572 Coq.MSets.MSetGenTree <> s var
R21570:21570 Coq.MSets.MSetGenTree <> f var
R21576:21579 Coq.Init.Datatypes <> true constr
R21585:21590 Coq.MSets.MSetGenTree Props Exists def
R21614:21614 Coq.MSets.MSetGenTree <> s var
R21605:21607 Coq.Init.Logic <> ::type_scope:x_'='_x not
R21602:21602 Coq.MSets.MSetGenTree <> f var
R21604:21604 Coq.MSets.MSetGenTree <> x var
R21608:21611 Coq.Init.Datatypes <> true constr
R21536:21541 Coq.Classes.Morphisms <> Proper class
R21555:21555 Coq.MSets.MSetGenTree <> f var
R21548:21550 Coq.Classes.Morphisms ProperNotations ::signature_scope:x_'==>'_x not
R21544:21547 Coq.MSets.MSetGenTree X eq defax
R21551:21552 Coq.Init.Logic <> eq ind
R21644:21649 Coq.MSets.MSetGenTree Props Exists def
R21773:21784 Coq.Bool.Bool <> orb_lazy_alt thm
R21788:21799 Coq.Bool.Bool <> orb_true_iff thm
R21773:21784 Coq.Bool.Bool <> orb_lazy_alt thm
R21773:21784 Coq.Bool.Bool <> orb_lazy_alt thm
R21773:21784 Coq.Bool.Bool <> orb_lazy_alt thm
R21773:21784 Coq.Bool.Bool <> orb_lazy_alt thm
R21788:21799 Coq.Bool.Bool <> orb_true_iff thm
R21788:21799 Coq.Bool.Bool <> orb_true_iff thm
R21788:21799 Coq.Bool.Bool <> orb_true_iff thm
R21788:21799 Coq.Bool.Bool <> orb_true_iff thm
prf 22047:22056 Props fold_spec'
R22070:22073 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R22075:22078 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R22079:22079 Coq.MSets.MSetGenTree <> A var
R22074:22074 Coq.MSets.MSetGenTree <> A var
R22067:22069 Coq.MSets.MSetGenTree M elt def
R22087:22090 Coq.MSets.MSetGenTree M tree ind
R22098:22098 Coq.MSets.MSetGenTree <> A var
R22108:22111 Coq.Init.Datatypes <> list ind
R22113:22115 Coq.MSets.MSetGenTree M elt def
R22162:22164 Coq.Init.Logic <> ::type_scope:x_'='_x not
R22121:22129 Coq.Lists.List <> fold_left def
R22161:22161 Coq.MSets.MSetGenTree <> i var
R22141:22152 Coq.MSets.MSetGenTree M elements_aux def
R22158:22158 Coq.MSets.MSetGenTree <> s var
R22154:22156 Coq.MSets.MSetGenTree <> acc var
R22132:22135 Coq.Program.Basics <> flip def
R22137:22137 Coq.MSets.MSetGenTree <> f var
R22165:22173 Coq.Lists.List <> fold_left def
R22189:22192 Coq.MSets.MSetGenTree M fold def
R22198:22198 Coq.MSets.MSetGenTree <> i var
R22196:22196 Coq.MSets.MSetGenTree <> s var
R22194:22194 Coq.MSets.MSetGenTree <> f var
R22184:22186 Coq.MSets.MSetGenTree <> acc var
R22176:22179 Coq.Program.Basics <> flip def
R22181:22181 Coq.MSets.MSetGenTree <> f var
R22310:22313 Coq.Program.Basics <> flip def
prf 22345:22353 Props fold_spec
R22358:22361 Coq.MSets.MSetGenTree M tree ind
R22373:22373 Coq.MSets.MSetGenTree <> A var
R22384:22387 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R22389:22392 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R22393:22393 Coq.MSets.MSetGenTree <> A var
R22388:22388 Coq.MSets.MSetGenTree <> A var
R22381:22383 Coq.MSets.MSetGenTree M elt def
R22409:22411 Coq.Init.Logic <> ::type_scope:x_'='_x not
R22399:22402 Coq.MSets.MSetGenTree M fold def
R22408:22408 Coq.MSets.MSetGenTree <> i var
R22406:22406 Coq.MSets.MSetGenTree <> s var
R22404:22404 Coq.MSets.MSetGenTree <> f var
R22412:22420 Coq.Lists.List <> fold_left def
R22444:22444 Coq.MSets.MSetGenTree <> i var
R22432:22439 Coq.MSets.MSetGenTree M elements def
R22441:22441 Coq.MSets.MSetGenTree <> s var
R22423:22426 Coq.Program.Basics <> flip def
R22428:22428 Coq.MSets.MSetGenTree <> f var
R22472:22479 Coq.MSets.MSetGenTree M elements def
R22548:22557 Coq.MSets.MSetGenTree Props fold_spec' thm
R22548:22557 Coq.MSets.MSetGenTree Props fold_spec' thm
R22548:22557 Coq.MSets.MSetGenTree Props fold_spec' thm
prf 22619:22630 Props subsetl_spec
R22666:22667 Coq.MSets.MSetGenTree Props Ok class
R22670:22673 Coq.MSets.MSetGenTree M Node constr
R22684:22687 Coq.MSets.MSetGenTree M Leaf constr
R22681:22682 Coq.MSets.MSetGenTree <> x1 var
R22678:22679 Coq.MSets.MSetGenTree <> l1 var
R22675:22676 Coq.MSets.MSetGenTree <> c1 var
R22691:22692 Coq.MSets.MSetGenTree Props Ok class
R22694:22695 Coq.MSets.MSetGenTree <> s2 var
R22700:22700 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R22755:22761 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R22827:22828 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R22792:22796 Coq.Init.Logic <> ::type_scope:x_'<->'_x not
R22785:22787 Coq.Init.Logic <> ::type_scope:x_'='_x not
R22762:22768 Coq.MSets.MSetGenTree M subsetl def
R22783:22784 Coq.MSets.MSetGenTree <> s2 var
R22780:22781 Coq.MSets.MSetGenTree <> x1 var
R22770:22778 Coq.MSets.MSetGenTree <> subset_l1 var
R22788:22791 Coq.Init.Datatypes <> true constr
R22797:22802 Coq.MSets.MSetGenTree Props Subset def
R22825:22826 Coq.MSets.MSetGenTree <> s2 var
R22805:22808 Coq.MSets.MSetGenTree M Node constr
R22819:22822 Coq.MSets.MSetGenTree M Leaf constr
R22816:22817 Coq.MSets.MSetGenTree <> x1 var
R22813:22814 Coq.MSets.MSetGenTree <> l1 var
R22810:22811 Coq.MSets.MSetGenTree <> c1 var
R22712:22713 Coq.MSets.MSetGenTree Props Ok class
R22715:22715 Coq.MSets.MSetGenTree <> s var
R22738:22742 Coq.Init.Logic <> ::type_scope:x_'<->'_x not
R22731:22733 Coq.Init.Logic <> ::type_scope:x_'='_x not
R22720:22728 Coq.MSets.MSetGenTree <> subset_l1 var
R22730:22730 Coq.MSets.MSetGenTree <> s var
R22734:22737 Coq.Init.Datatypes <> true constr
R22743:22748 Coq.MSets.MSetGenTree Props Subset def
R22753:22753 Coq.MSets.MSetGenTree <> s var
R22750:22751 Coq.MSets.MSetGenTree <> l1 var
R22904:22909 Coq.MSets.MSetGenTree Props Subset def
R22954:22956 Coq.MSets.MSetGenTree Props InT ind
R22961:22964 Coq.MSets.MSetGenTree M Leaf constr
R22954:22956 Coq.MSets.MSetGenTree Props InT ind
R22961:22964 Coq.MSets.MSetGenTree M Leaf constr
R23111:23116 Coq.MSets.MSetGenTree Props Subset def
R23142:23145 Coq.MSets.MSetGenTree X eq defax
R23142:23145 Coq.MSets.MSetGenTree X eq defax
R23186:23188 Coq.MSets.MSetGenTree Props InT ind
R23193:23196 Coq.MSets.MSetGenTree M Node constr
R23186:23188 Coq.MSets.MSetGenTree Props InT ind
R23193:23196 Coq.MSets.MSetGenTree M Node constr
R23294:23299 Coq.MSets.MSetGenTree Props Subset def
R23325:23327 Coq.MSets.MSetGenTree Props InT ind
R23332:23335 Coq.MSets.MSetGenTree M Node constr
R23325:23327 Coq.MSets.MSetGenTree Props InT ind
R23332:23335 Coq.MSets.MSetGenTree M Node constr
R23390:23392 Coq.MSets.MSetGenTree Props InT ind
R23397:23400 Coq.MSets.MSetGenTree M Node constr
R23390:23392 Coq.MSets.MSetGenTree Props InT ind
R23397:23400 Coq.MSets.MSetGenTree M Node constr
R23458:23470 Coq.Bool.Bool <> andb_lazy_alt thm
R23473:23485 Coq.Bool.Bool <> andb_true_iff thm
R23458:23470 Coq.Bool.Bool <> andb_lazy_alt thm
R23458:23470 Coq.Bool.Bool <> andb_lazy_alt thm
R23473:23485 Coq.Bool.Bool <> andb_true_iff thm
R23473:23485 Coq.Bool.Bool <> andb_true_iff thm
R23528:23533 Coq.MSets.MSetGenTree Props Subset def
R23609:23616 Coq.MSets.MSetGenTree Props mem_spec thm
R23609:23616 Coq.MSets.MSetGenTree Props mem_spec thm
R23609:23616 Coq.MSets.MSetGenTree Props mem_spec thm
R23609:23616 Coq.MSets.MSetGenTree Props mem_spec thm
R23634:23641 Coq.MSets.MSetGenTree Props mem_spec thm
R23634:23641 Coq.MSets.MSetGenTree Props mem_spec thm
R23634:23641 Coq.MSets.MSetGenTree Props mem_spec thm
R23634:23641 Coq.MSets.MSetGenTree Props mem_spec thm
R23659:23661 Coq.MSets.MSetGenTree Props InT ind
R23667:23670 Coq.MSets.MSetGenTree M Node constr
R23659:23661 Coq.MSets.MSetGenTree Props InT ind
R23667:23670 Coq.MSets.MSetGenTree M Node constr
prf 23729:23740 Props subsetr_spec
R23799:23802 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R23809:23813 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R23814:23814 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R23870:23876 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R23942:23942 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R23907:23911 Coq.Init.Logic <> ::type_scope:x_'<->'_x not
R23900:23902 Coq.Init.Logic <> ::type_scope:x_'='_x not
R23877:23883 Coq.MSets.MSetGenTree M subsetr def
R23898:23899 Coq.MSets.MSetGenTree <> s2 var
R23895:23896 Coq.MSets.MSetGenTree <> x1 var
R23885:23893 Coq.MSets.MSetGenTree <> subset_r1 var
R23903:23906 Coq.Init.Datatypes <> true constr
R23912:23917 Coq.MSets.MSetGenTree Props Subset def
R23940:23941 Coq.MSets.MSetGenTree <> s2 var
R23920:23923 Coq.MSets.MSetGenTree M Node constr
R23936:23937 Coq.MSets.MSetGenTree <> r1 var
R23933:23934 Coq.MSets.MSetGenTree <> x1 var
R23928:23931 Coq.MSets.MSetGenTree M Leaf constr
R23925:23926 Coq.MSets.MSetGenTree <> c1 var
R23830:23834 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R23869:23869 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R23853:23857 Coq.Init.Logic <> ::type_scope:x_'<->'_x not
R23846:23848 Coq.Init.Logic <> ::type_scope:x_'='_x not
R23835:23843 Coq.MSets.MSetGenTree <> subset_r1 var
R23845:23845 Coq.MSets.MSetGenTree <> s var
R23849:23852 Coq.Init.Datatypes <> true constr
R23858:23863 Coq.MSets.MSetGenTree Props Subset def
R23868:23868 Coq.MSets.MSetGenTree <> s var
R23865:23866 Coq.MSets.MSetGenTree <> r1 var
R23825:23827 Coq.MSets.MSetGenTree Props bst ind
R23829:23829 Coq.MSets.MSetGenTree <> s var
R23803:23805 Coq.MSets.MSetGenTree Props bst ind
R23807:23808 Coq.MSets.MSetGenTree <> s2 var
R23775:23777 Coq.MSets.MSetGenTree Props bst ind
R23780:23783 Coq.MSets.MSetGenTree M Node constr
R23796:23797 Coq.MSets.MSetGenTree <> r1 var
R23793:23794 Coq.MSets.MSetGenTree <> x1 var
R23788:23791 Coq.MSets.MSetGenTree M Leaf constr
R23785:23786 Coq.MSets.MSetGenTree <> c1 var
R24018:24023 Coq.MSets.MSetGenTree Props Subset def
R24068:24070 Coq.MSets.MSetGenTree Props InT ind
R24075:24078 Coq.MSets.MSetGenTree M Leaf constr
R24068:24070 Coq.MSets.MSetGenTree Props InT ind
R24075:24078 Coq.MSets.MSetGenTree M Leaf constr
R24225:24230 Coq.MSets.MSetGenTree Props Subset def
R24256:24259 Coq.MSets.MSetGenTree X eq defax
R24256:24259 Coq.MSets.MSetGenTree X eq defax
R24300:24302 Coq.MSets.MSetGenTree Props InT ind
R24307:24310 Coq.MSets.MSetGenTree M Node constr
R24300:24302 Coq.MSets.MSetGenTree Props InT ind
R24307:24310 Coq.MSets.MSetGenTree M Node constr
R24368:24380 Coq.Bool.Bool <> andb_lazy_alt thm
R24383:24395 Coq.Bool.Bool <> andb_true_iff thm
R24368:24380 Coq.Bool.Bool <> andb_lazy_alt thm
R24368:24380 Coq.Bool.Bool <> andb_lazy_alt thm
R24383:24395 Coq.Bool.Bool <> andb_true_iff thm
R24383:24395 Coq.Bool.Bool <> andb_true_iff thm
R24439:24444 Coq.MSets.MSetGenTree Props Subset def
R24520:24527 Coq.MSets.MSetGenTree Props mem_spec thm
R24520:24527 Coq.MSets.MSetGenTree Props mem_spec thm
R24520:24527 Coq.MSets.MSetGenTree Props mem_spec thm
R24520:24527 Coq.MSets.MSetGenTree Props mem_spec thm
R24545:24552 Coq.MSets.MSetGenTree Props mem_spec thm
R24545:24552 Coq.MSets.MSetGenTree Props mem_spec thm
R24545:24552 Coq.MSets.MSetGenTree Props mem_spec thm
R24545:24552 Coq.MSets.MSetGenTree Props mem_spec thm
R24570:24572 Coq.MSets.MSetGenTree Props InT ind
R24578:24581 Coq.MSets.MSetGenTree M Node constr
R24570:24572 Coq.MSets.MSetGenTree Props InT ind
R24578:24581 Coq.MSets.MSetGenTree M Node constr
R24679:24684 Coq.MSets.MSetGenTree Props Subset def
R24710:24712 Coq.MSets.MSetGenTree Props InT ind
R24717:24720 Coq.MSets.MSetGenTree M Node constr
R24710:24712 Coq.MSets.MSetGenTree Props InT ind
R24717:24720 Coq.MSets.MSetGenTree M Node constr
R24775:24777 Coq.MSets.MSetGenTree Props InT ind
R24782:24785 Coq.MSets.MSetGenTree M Node constr
R24775:24777 Coq.MSets.MSetGenTree Props InT ind
R24782:24785 Coq.MSets.MSetGenTree M Node constr
prf 24843:24853 Props subset_spec
R24872:24873 Coq.MSets.MSetGenTree Props Ok class
R24875:24876 Coq.MSets.MSetGenTree <> s1 var
R24879:24880 Coq.MSets.MSetGenTree Props Ok class
R24882:24883 Coq.MSets.MSetGenTree <> s2 var
R24908:24912 Coq.Init.Logic <> ::type_scope:x_'<->'_x not
R24901:24903 Coq.Init.Logic <> ::type_scope:x_'='_x not
R24889:24894 Coq.MSets.MSetGenTree M subset def
R24899:24900 Coq.MSets.MSetGenTree <> s2 var
R24896:24897 Coq.MSets.MSetGenTree <> s1 var
R24904:24907 Coq.Init.Datatypes <> true constr
R24913:24918 Coq.MSets.MSetGenTree Props Subset def
R24923:24924 Coq.MSets.MSetGenTree <> s2 var
R24920:24921 Coq.MSets.MSetGenTree <> s1 var
R25001:25006 Coq.MSets.MSetGenTree Props Subset def
R25078:25083 Coq.MSets.MSetGenTree Props Subset def
R25131:25133 Coq.MSets.MSetGenTree Props InT ind
R25138:25141 Coq.MSets.MSetGenTree M Leaf constr
R25131:25133 Coq.MSets.MSetGenTree Props InT ind
R25138:25141 Coq.MSets.MSetGenTree M Leaf constr
R25206:25218 Coq.Bool.Bool <> andb_lazy_alt thm
R25221:25233 Coq.Bool.Bool <> andb_true_iff thm
R25206:25218 Coq.Bool.Bool <> andb_lazy_alt thm
R25206:25218 Coq.Bool.Bool <> andb_lazy_alt thm
R25221:25233 Coq.Bool.Bool <> andb_true_iff thm
R25221:25233 Coq.Bool.Bool <> andb_true_iff thm
R25282:25287 Coq.MSets.MSetGenTree Props Subset def
R25313:25316 Coq.MSets.MSetGenTree X eq defax
R25313:25316 Coq.MSets.MSetGenTree X eq defax
R25357:25359 Coq.MSets.MSetGenTree Props InT ind
R25364:25367 Coq.MSets.MSetGenTree M Node constr
R25357:25359 Coq.MSets.MSetGenTree Props InT ind
R25364:25367 Coq.MSets.MSetGenTree M Node constr
R25422:25424 Coq.MSets.MSetGenTree Props InT ind
R25429:25432 Coq.MSets.MSetGenTree M Node constr
R25422:25424 Coq.MSets.MSetGenTree Props InT ind
R25429:25432 Coq.MSets.MSetGenTree M Node constr
R25490:25502 Coq.Bool.Bool <> andb_lazy_alt thm
R25505:25517 Coq.Bool.Bool <> andb_true_iff thm
R25490:25502 Coq.Bool.Bool <> andb_lazy_alt thm
R25490:25502 Coq.Bool.Bool <> andb_lazy_alt thm
R25505:25517 Coq.Bool.Bool <> andb_true_iff thm
R25505:25517 Coq.Bool.Bool <> andb_true_iff thm
R25545:25556 Coq.MSets.MSetGenTree Props subsetl_spec thm
R25559:25564 Coq.MSets.MSetGenTree M subset def
R25545:25556 Coq.MSets.MSetGenTree Props subsetl_spec thm
R25559:25564 Coq.MSets.MSetGenTree M subset def
R25545:25556 Coq.MSets.MSetGenTree Props subsetl_spec thm
R25559:25564 Coq.MSets.MSetGenTree M subset def
R25615:25620 Coq.MSets.MSetGenTree Props Subset def
R25646:25648 Coq.MSets.MSetGenTree Props InT ind
R25653:25656 Coq.MSets.MSetGenTree M Node constr
R25646:25648 Coq.MSets.MSetGenTree Props InT ind
R25653:25656 Coq.MSets.MSetGenTree M Node constr
R25711:25713 Coq.MSets.MSetGenTree Props InT ind
R25718:25721 Coq.MSets.MSetGenTree M Node constr
R25711:25713 Coq.MSets.MSetGenTree Props InT ind
R25718:25721 Coq.MSets.MSetGenTree M Node constr
R25779:25791 Coq.Bool.Bool <> andb_lazy_alt thm
R25794:25806 Coq.Bool.Bool <> andb_true_iff thm
R25779:25791 Coq.Bool.Bool <> andb_lazy_alt thm
R25779:25791 Coq.Bool.Bool <> andb_lazy_alt thm
R25794:25806 Coq.Bool.Bool <> andb_true_iff thm
R25794:25806 Coq.Bool.Bool <> andb_true_iff thm
R25834:25845 Coq.MSets.MSetGenTree Props subsetr_spec thm
R25848:25853 Coq.MSets.MSetGenTree M subset def
R25834:25845 Coq.MSets.MSetGenTree Props subsetr_spec thm
R25848:25853 Coq.MSets.MSetGenTree M subset def
R25834:25845 Coq.MSets.MSetGenTree Props subsetr_spec thm
R25848:25853 Coq.MSets.MSetGenTree M subset def
R25904:25909 Coq.MSets.MSetGenTree Props Subset def
R25935:25937 Coq.MSets.MSetGenTree Props InT ind
R25942:25945 Coq.MSets.MSetGenTree M Node constr
R25935:25937 Coq.MSets.MSetGenTree Props InT ind
R25942:25945 Coq.MSets.MSetGenTree M Node constr
R26000:26002 Coq.MSets.MSetGenTree Props InT ind
R26007:26010 Coq.MSets.MSetGenTree M Node constr
R26000:26002 Coq.MSets.MSetGenTree Props InT ind
R26007:26010 Coq.MSets.MSetGenTree M Node constr
R26140:26169 Coq.MSets.MSetInterface MakeListOrdering <> modtype
R26171:26171 Coq.MSets.MSetGenTree X <> modtype
mod 26135:26135 <> Props.L
def 26186:26187 Props eq
R26192:26196 Coq.MSets.MSetGenTree Props Equal def
inst 26208:26215 Props eq_equiv
R26219:26229 Coq.Classes.RelationClasses <> Equivalence class
R26231:26232 Coq.MSets.MSetGenTree Props eq def
prf 26266:26271 Props eq_Leq
R26295:26299 Coq.Init.Logic <> ::type_scope:x_'<->'_x not
R26288:26289 Coq.MSets.MSetGenTree Props eq def
R26293:26294 Coq.MSets.MSetGenTree <> s' var
R26291:26291 Coq.MSets.MSetGenTree <> s var
R26300:26303 Coq.MSets.MSetGenTree Props eq def
R26319:26326 Coq.MSets.MSetGenTree M elements def
R26328:26329 Coq.MSets.MSetGenTree <> s' var
R26306:26313 Coq.MSets.MSetGenTree M elements def
R26315:26315 Coq.MSets.MSetGenTree <> s var
R26348:26349 Coq.MSets.MSetGenTree Props eq def
R26352:26356 Coq.MSets.MSetGenTree Props Equal def
R26359:26362 Coq.MSets.MSetGenTree Props eq def
R26389:26402 Coq.MSets.MSetGenTree Props elements_spec1 thm
R26389:26402 Coq.MSets.MSetGenTree Props elements_spec1 thm
R26389:26402 Coq.MSets.MSetGenTree Props elements_spec1 thm
R26389:26402 Coq.MSets.MSetGenTree Props elements_spec1 thm
R26389:26402 Coq.MSets.MSetGenTree Props elements_spec1 thm
R26389:26402 Coq.MSets.MSetGenTree Props elements_spec1 thm
R26389:26402 Coq.MSets.MSetGenTree Props elements_spec1 thm
R26389:26402 Coq.MSets.MSetGenTree Props elements_spec1 thm
R26389:26402 Coq.MSets.MSetGenTree Props elements_spec1 thm
R26389:26402 Coq.MSets.MSetGenTree Props elements_spec1 thm
R26389:26402 Coq.MSets.MSetGenTree Props elements_spec1 thm
R26389:26402 Coq.MSets.MSetGenTree Props elements_spec1 thm
R26389:26402 Coq.MSets.MSetGenTree Props elements_spec1 thm
R26389:26402 Coq.MSets.MSetGenTree Props elements_spec1 thm
R26389:26402 Coq.MSets.MSetGenTree Props elements_spec1 thm
R26389:26402 Coq.MSets.MSetGenTree Props elements_spec1 thm
R26389:26402 Coq.MSets.MSetGenTree Props elements_spec1 thm
R26389:26402 Coq.MSets.MSetGenTree Props elements_spec1 thm
R26389:26402 Coq.MSets.MSetGenTree Props elements_spec1 thm
R26389:26402 Coq.MSets.MSetGenTree Props elements_spec1 thm
R26389:26402 Coq.MSets.MSetGenTree Props elements_spec1 thm
R26389:26402 Coq.MSets.MSetGenTree Props elements_spec1 thm
R26389:26402 Coq.MSets.MSetGenTree Props elements_spec1 thm
R26389:26402 Coq.MSets.MSetGenTree Props elements_spec1 thm
R26389:26402 Coq.MSets.MSetGenTree Props elements_spec1 thm
def 26436:26437 Props lt
R26448:26451 Coq.MSets.MSetGenTree M tree ind
R26465:26471 Coq.Init.Logic <> ::type_scope:'exists'_x_'..'_x_','_x not
R26479:26480 Coq.Init.Logic <> ::type_scope:'exists'_x_'..'_x_','_x not
R26487:26490 Coq.Init.Logic <> ::type_scope:x_'/\'_x not
R26481:26482 Coq.MSets.MSetGenTree Props Ok class
R26484:26486 Coq.MSets.MSetGenTree <> s1' var
R26497:26500 Coq.Init.Logic <> ::type_scope:x_'/\'_x not
R26491:26492 Coq.MSets.MSetGenTree Props Ok class
R26494:26496 Coq.MSets.MSetGenTree <> s2' var
R26510:26513 Coq.Init.Logic <> ::type_scope:x_'/\'_x not
R26501:26502 Coq.MSets.MSetGenTree Props eq def
R26507:26509 Coq.MSets.MSetGenTree <> s1' var
R26504:26505 Coq.MSets.MSetGenTree <> s1 var
R26523:26529 Coq.Init.Logic <> ::type_scope:x_'/\'_x not
R26514:26515 Coq.MSets.MSetGenTree Props eq def
R26520:26522 Coq.MSets.MSetGenTree <> s2' var
R26517:26518 Coq.MSets.MSetGenTree <> s2 var
R26530:26533 Coq.MSets.MSetGenTree Props lt def
R26551:26558 Coq.MSets.MSetGenTree M elements def
R26560:26562 Coq.MSets.MSetGenTree <> s2' var
R26536:26543 Coq.MSets.MSetGenTree M elements def
R26545:26547 Coq.MSets.MSetGenTree <> s1' var
R26591:26594 Coq.MSets.MSetGenTree Props eq def
R26596:26605 Coq.Lists.SetoidList <> equivlistA def
inst 26618:26628 Props lt_strorder
R26632:26642 Coq.Classes.RelationClasses <> StrictOrder class
R26644:26645 Coq.MSets.MSetGenTree Props lt def
R26717:26723 Coq.Lists.SetoidList <> eqlistA ind
R26745:26752 Coq.MSets.MSetGenTree M elements def
R26731:26738 Coq.MSets.MSetGenTree M elements def
R26725:26728 Coq.MSets.MSetGenTree X eq defax
R26717:26723 Coq.Lists.SetoidList <> eqlistA ind
R26745:26752 Coq.MSets.MSetGenTree M elements def
R26731:26738 Coq.MSets.MSetGenTree M elements def
R26725:26728 Coq.MSets.MSetGenTree X eq defax
R26804:26807 Coq.MSets.MSetGenTree X lt defax
R26768:26791 Coq.Lists.SetoidList <> SortA_equivlistA_eqlistA thm
R26804:26807 Coq.MSets.MSetGenTree X lt defax
R26768:26791 Coq.Lists.SetoidList <> SortA_equivlistA_eqlistA thm
R26837:26842 Coq.MSets.MSetGenTree Props eq_Leq thm
R26837:26842 Coq.MSets.MSetGenTree Props eq_Leq thm
R26837:26842 Coq.MSets.MSetGenTree Props eq_Leq thm
R26908:26930 Coq.Classes.RelationClasses <> StrictOrder_Irreflexive meth
R26933:26940 Coq.MSets.MSetGenTree M elements def
R26908:26930 Coq.Classes.RelationClasses <> StrictOrder_Irreflexive meth
R26933:26940 Coq.MSets.MSetGenTree M elements def
R27118:27124 Coq.Lists.SetoidList <> eqlistA ind
R27147:27154 Coq.MSets.MSetGenTree M elements def
R27132:27139 Coq.MSets.MSetGenTree M elements def
R27126:27129 Coq.MSets.MSetGenTree X eq defax
R27118:27124 Coq.Lists.SetoidList <> eqlistA ind
R27147:27154 Coq.MSets.MSetGenTree M elements def
R27132:27139 Coq.MSets.MSetGenTree M elements def
R27126:27129 Coq.MSets.MSetGenTree X eq defax
R27208:27211 Coq.MSets.MSetGenTree X lt defax
R27172:27195 Coq.Lists.SetoidList <> SortA_equivlistA_eqlistA thm
R27208:27211 Coq.MSets.MSetGenTree X lt defax
R27172:27195 Coq.Lists.SetoidList <> SortA_equivlistA_eqlistA thm
R27241:27246 Coq.MSets.MSetGenTree Props eq_Leq thm
R27241:27246 Coq.MSets.MSetGenTree Props eq_Leq thm
R27241:27246 Coq.MSets.MSetGenTree Props eq_Leq thm
R27303:27310 Coq.MSets.MSetGenTree M elements def
R27303:27310 Coq.MSets.MSetGenTree M elements def
inst 27357:27365 Props lt_compat
R27369:27374 Coq.Classes.Morphisms <> Proper class
R27392:27393 Coq.MSets.MSetGenTree Props lt def
R27379:27381 Coq.Classes.Morphisms ProperNotations ::signature_scope:x_'==>'_x not
R27377:27378 Coq.MSets.MSetGenTree Props eq def
R27384:27386 Coq.Classes.Morphisms ProperNotations ::signature_scope:x_'==>'_x not
R27382:27383 Coq.MSets.MSetGenTree Props eq def
R27387:27389 Coq.Init.Logic <> iff def
def 27949:27957 Props flatten_e
R27964:27974 Coq.MSets.MSetGenTree M enumeration ind
R27979:27982 Coq.Init.Datatypes <> list ind
R27984:27986 Coq.MSets.MSetGenTree M elt def
R27997:27997 Coq.MSets.MSetGenTree <> e var
R28008:28010 Coq.MSets.MSetGenTree M End constr
R28015:28017 Coq.Init.Datatypes <> nil constr
R28023:28026 Coq.MSets.MSetGenTree M More constr
R28038:28041 Coq.Init.Datatypes <> ::list_scope:x_'::'_x not
R28052:28055 Coq.Init.Datatypes <> ::list_scope:x_'++'_x not
R28042:28049 Coq.MSets.MSetGenTree M elements def
R28056:28064 Coq.MSets.MSetGenTree <> flatten_e def
prf 28081:28098 Props flatten_e_elements
R28158:28160 Coq.Init.Logic <> ::type_scope:x_'='_x not
R28132:28135 Coq.Init.Datatypes <> ::list_scope:x_'++'_x not
R28122:28129 Coq.MSets.MSetGenTree M elements def
R28131:28131 Coq.MSets.MSetGenTree <> l var
R28136:28144 Coq.MSets.MSetGenTree Props flatten_e def
R28147:28150 Coq.MSets.MSetGenTree M More constr
R28156:28156 Coq.MSets.MSetGenTree <> e var
R28154:28154 Coq.MSets.MSetGenTree <> r var
R28152:28152 Coq.MSets.MSetGenTree <> x var
R28184:28187 Coq.Init.Datatypes <> ::list_scope:x_'++'_x not
R28161:28168 Coq.MSets.MSetGenTree M elements def
R28171:28174 Coq.MSets.MSetGenTree M Node constr
R28182:28182 Coq.MSets.MSetGenTree <> r var
R28180:28180 Coq.MSets.MSetGenTree <> x var
R28178:28178 Coq.MSets.MSetGenTree <> l var
R28176:28176 Coq.MSets.MSetGenTree <> c var
R28188:28196 Coq.MSets.MSetGenTree Props flatten_e def
R28198:28198 Coq.MSets.MSetGenTree <> e var
R28229:28241 Coq.MSets.MSetGenTree Props elements_node thm
R28244:28250 Coq.Lists.List <> app_ass syndef
R28229:28241 Coq.MSets.MSetGenTree Props elements_node thm
R28229:28241 Coq.MSets.MSetGenTree Props elements_node thm
R28244:28250 Coq.Lists.List <> app_ass syndef
R28244:28250 Coq.Lists.List <> app_ass syndef
prf 28265:28270 Props cons_1
R28308:28310 Coq.Init.Logic <> ::type_scope:x_'='_x not
R28288:28296 Coq.MSets.MSetGenTree Props flatten_e def
R28299:28302 Coq.MSets.MSetGenTree M cons def
R28306:28306 Coq.MSets.MSetGenTree <> e var
R28304:28304 Coq.MSets.MSetGenTree <> s var
R28321:28324 Coq.Init.Datatypes <> ::list_scope:x_'++'_x not
R28311:28318 Coq.MSets.MSetGenTree M elements def
R28320:28320 Coq.MSets.MSetGenTree <> s var
R28325:28333 Coq.MSets.MSetGenTree Props flatten_e def
R28335:28335 Coq.MSets.MSetGenTree <> e var
R28401:28418 Coq.MSets.MSetGenTree Props flatten_e_elements thm
R28401:28418 Coq.MSets.MSetGenTree Props flatten_e_elements thm
def 28477:28479 Props Cmp
R28490:28497 Coq.Init.Datatypes <> CompSpec def
R28513:28513 Coq.MSets.MSetGenTree <> c var
R28511:28511 Coq.MSets.MSetGenTree <> y var
R28509:28509 Coq.MSets.MSetGenTree <> x var
R28504:28507 Coq.MSets.MSetGenTree Props lt def
R28499:28502 Coq.MSets.MSetGenTree Props eq def
R28535:28537 Coq.MSets.MSetGenTree Props Cmp def
R28539:28542 Coq.Program.Basics <> flip def
prf 28552:28566 Props compare_end_Cmp
R28582:28584 Coq.MSets.MSetGenTree Props Cmp def
R28608:28616 Coq.MSets.MSetGenTree Props flatten_e def
R28618:28619 Coq.MSets.MSetGenTree <> e2 var
R28603:28605 Coq.Init.Datatypes <> nil constr
R28587:28597 Coq.MSets.MSetGenTree M compare_end def
R28599:28600 Coq.MSets.MSetGenTree <> e2 var
prf 28695:28710 Props compare_more_Cmp
R28798:28804 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R28805:28807 Coq.MSets.MSetGenTree Props Cmp def
R28863:28871 Coq.MSets.MSetGenTree Props flatten_e def
R28874:28877 Coq.MSets.MSetGenTree M More constr
R28885:28886 Coq.MSets.MSetGenTree <> e2 var
R28882:28883 Coq.MSets.MSetGenTree <> r2 var
R28879:28880 Coq.MSets.MSetGenTree <> x2 var
R28851:28852 Coq.Init.Datatypes <> ::list_scope:x_'::'_x not
R28849:28850 Coq.MSets.MSetGenTree <> x1 var
R28853:28853 Coq.MSets.MSetGenTree <> l var
R28810:28821 Coq.MSets.MSetGenTree M compare_more def
R28832:28835 Coq.MSets.MSetGenTree M More constr
R28843:28844 Coq.MSets.MSetGenTree <> e2 var
R28840:28841 Coq.MSets.MSetGenTree <> r2 var
R28837:28838 Coq.MSets.MSetGenTree <> x2 var
R28826:28829 Coq.MSets.MSetGenTree <> cont var
R28823:28824 Coq.MSets.MSetGenTree <> x1 var
R28743:28745 Coq.MSets.MSetGenTree Props Cmp def
R28781:28784 Coq.Init.Datatypes <> ::list_scope:x_'++'_x not
R28770:28777 Coq.MSets.MSetGenTree M elements def
R28779:28780 Coq.MSets.MSetGenTree <> r2 var
R28785:28793 Coq.MSets.MSetGenTree Props flatten_e def
R28795:28796 Coq.MSets.MSetGenTree <> e2 var
R28767:28767 Coq.MSets.MSetGenTree <> l var
R28748:28751 Coq.MSets.MSetGenTree <> cont var
R28754:28757 Coq.MSets.MSetGenTree M cons def
R28762:28763 Coq.MSets.MSetGenTree <> e2 var
R28759:28760 Coq.MSets.MSetGenTree <> r2 var
prf 28964:28979 Props compare_cont_Cmp
R29005:29005 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R29044:29049 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R29050:29052 Coq.MSets.MSetGenTree Props Cmp def
R29100:29108 Coq.MSets.MSetGenTree Props flatten_e def
R29110:29111 Coq.MSets.MSetGenTree <> e2 var
R29092:29095 Coq.Init.Datatypes <> ::list_scope:x_'++'_x not
R29081:29088 Coq.MSets.MSetGenTree M elements def
R29090:29091 Coq.MSets.MSetGenTree <> s1 var
R29096:29096 Coq.MSets.MSetGenTree <> l var
R29055:29066 Coq.MSets.MSetGenTree M compare_cont def
R29076:29077 Coq.MSets.MSetGenTree <> e2 var
R29071:29074 Coq.MSets.MSetGenTree <> cont var
R29068:29069 Coq.MSets.MSetGenTree <> s1 var
R29016:29018 Coq.MSets.MSetGenTree Props Cmp def
R29032:29040 Coq.MSets.MSetGenTree Props flatten_e def
R29042:29042 Coq.MSets.MSetGenTree <> e var
R29029:29029 Coq.MSets.MSetGenTree <> l var
R29021:29024 Coq.MSets.MSetGenTree <> cont var
R29026:29026 Coq.MSets.MSetGenTree <> e var
R29186:29198 Coq.MSets.MSetGenTree Props elements_node thm
R29201:29207 Coq.Lists.List <> app_ass syndef
R29186:29198 Coq.MSets.MSetGenTree Props elements_node thm
R29186:29198 Coq.MSets.MSetGenTree Props elements_node thm
R29201:29207 Coq.Lists.List <> app_ass syndef
R29201:29207 Coq.Lists.List <> app_ass syndef
R29286:29301 Coq.MSets.MSetGenTree Props compare_more_Cmp thm
R29286:29301 Coq.MSets.MSetGenTree Props compare_more_Cmp thm
R29316:29321 Coq.MSets.MSetGenTree Props cons_1 thm
R29316:29321 Coq.MSets.MSetGenTree Props cons_1 thm
R29316:29321 Coq.MSets.MSetGenTree Props cons_1 thm
prf 29342:29352 Props compare_Cmp
R29371:29373 Coq.MSets.MSetGenTree Props Cmp def
R29406:29413 Coq.MSets.MSetGenTree M elements def
R29415:29416 Coq.MSets.MSetGenTree <> s2 var
R29392:29399 Coq.MSets.MSetGenTree M elements def
R29401:29402 Coq.MSets.MSetGenTree <> s1 var
R29376:29382 Coq.MSets.MSetGenTree M compare def
R29387:29388 Coq.MSets.MSetGenTree <> s2 var
R29384:29385 Coq.MSets.MSetGenTree <> s1 var
R29443:29449 Coq.MSets.MSetGenTree M compare def
R29465:29473 Coq.Lists.List <> app_nil_r thm
R29476:29483 Coq.MSets.MSetGenTree M elements def
R29465:29473 Coq.Lists.List <> app_nil_r thm
R29476:29483 Coq.MSets.MSetGenTree M elements def
R29465:29473 Coq.Lists.List <> app_nil_r thm
R29476:29483 Coq.MSets.MSetGenTree M elements def
R29501:29508 Coq.MSets.MSetGenTree M elements def
R29520:29528 Coq.MSets.MSetGenTree Props flatten_e def
R29531:29534 Coq.MSets.MSetGenTree M cons def
R29539:29541 Coq.MSets.MSetGenTree M End constr
R29559:29564 Coq.MSets.MSetGenTree Props cons_1 thm
R29582:29590 Coq.Lists.List <> app_nil_r thm
R29501:29508 Coq.MSets.MSetGenTree M elements def
R29520:29528 Coq.MSets.MSetGenTree Props flatten_e def
R29531:29534 Coq.MSets.MSetGenTree M cons def
R29539:29541 Coq.MSets.MSetGenTree M End constr
R29559:29564 Coq.MSets.MSetGenTree Props cons_1 thm
R29559:29564 Coq.MSets.MSetGenTree Props cons_1 thm
R29582:29590 Coq.Lists.List <> app_nil_r thm
R29582:29590 Coq.Lists.List <> app_nil_r thm
R29607:29622 Coq.MSets.MSetGenTree Props compare_cont_Cmp thm
R29607:29622 Coq.MSets.MSetGenTree Props compare_cont_Cmp thm
R29647:29661 Coq.MSets.MSetGenTree Props compare_end_Cmp thm
R29647:29661 Coq.MSets.MSetGenTree Props compare_end_Cmp thm
prf 29682:29693 Props compare_spec
R29712:29713 Coq.MSets.MSetGenTree Props Ok class
R29715:29716 Coq.MSets.MSetGenTree <> s1 var
R29719:29720 Coq.MSets.MSetGenTree Props Ok class
R29722:29723 Coq.MSets.MSetGenTree <> s2 var
R29728:29735 Coq.Init.Datatypes <> CompSpec def
R29750:29756 Coq.MSets.MSetGenTree M compare def
R29761:29762 Coq.MSets.MSetGenTree <> s2 var
R29758:29759 Coq.MSets.MSetGenTree <> s1 var
R29746:29747 Coq.MSets.MSetGenTree <> s2 var
R29743:29744 Coq.MSets.MSetGenTree <> s1 var
R29740:29741 Coq.MSets.MSetGenTree Props lt def
R29737:29738 Coq.MSets.MSetGenTree Props eq def
R29793:29803 Coq.MSets.MSetGenTree Props compare_Cmp thm
R29793:29803 Coq.MSets.MSetGenTree Props compare_Cmp thm
R29835:29840 Coq.MSets.MSetGenTree Props eq_Leq thm
R29835:29840 Coq.MSets.MSetGenTree Props eq_Leq thm
R29835:29840 Coq.MSets.MSetGenTree Props eq_Leq thm
prf 29975:29984 Props equal_spec
R30003:30004 Coq.MSets.MSetGenTree Props Ok class
R30006:30007 Coq.MSets.MSetGenTree <> s1 var
R30010:30011 Coq.MSets.MSetGenTree Props Ok class
R30013:30014 Coq.MSets.MSetGenTree <> s2 var
R30037:30041 Coq.Init.Logic <> ::type_scope:x_'<->'_x not
R30030:30032 Coq.Init.Logic <> ::type_scope:x_'='_x not
R30019:30023 Coq.MSets.MSetGenTree M equal def
R30028:30029 Coq.MSets.MSetGenTree <> s2 var
R30025:30026 Coq.MSets.MSetGenTree <> s1 var
R30033:30036 Coq.Init.Datatypes <> true constr
R30042:30043 Coq.MSets.MSetGenTree Props eq def
R30048:30049 Coq.MSets.MSetGenTree <> s2 var
R30045:30046 Coq.MSets.MSetGenTree <> s1 var
R30066:30070 Coq.MSets.MSetGenTree M equal def
R30104:30115 Coq.MSets.MSetGenTree Props compare_spec thm
R30104:30115 Coq.MSets.MSetGenTree Props compare_spec thm
R30208:30230 Coq.Classes.RelationClasses <> StrictOrder_Irreflexive meth
R30208:30230 Coq.Classes.RelationClasses <> StrictOrder_Irreflexive meth
R30266:30288 Coq.Classes.RelationClasses <> StrictOrder_Irreflexive meth
R30266:30288 Coq.Classes.RelationClasses <> StrictOrder_Irreflexive meth
prf 30370:30386 Props mindepth_maxdepth
R30402:30405 Coq.Init.Peano <> ::nat_scope:x_'<='_x not
R30392:30399 Coq.MSets.MSetGenTree M mindepth def
R30401:30401 Coq.MSets.MSetGenTree <> s var
R30406:30413 Coq.MSets.MSetGenTree M maxdepth def
R30415:30415 Coq.MSets.MSetGenTree <> s var
R30464:30479 Coq.Arith.PeanoNat Nat succ_le_mono thm
R30464:30479 Coq.Arith.PeanoNat Nat succ_le_mono thm
R30464:30479 Coq.Arith.PeanoNat Nat succ_le_mono thm
R30497:30504 Coq.MSets.MSetGenTree M mindepth def
R30497:30504 Coq.MSets.MSetGenTree M mindepth def
R30517:30528 Coq.Arith.PeanoNat Nat le_min_l thm
R30517:30528 Coq.Arith.PeanoNat Nat le_min_l thm
R30546:30553 Coq.MSets.MSetGenTree M maxdepth def
R30546:30553 Coq.MSets.MSetGenTree M maxdepth def
R30575:30586 Coq.Arith.PeanoNat Nat le_max_l thm
R30575:30586 Coq.Arith.PeanoNat Nat le_max_l thm
prf 30601:30617 Props maxdepth_cardinal
R30633:30635 Coq.Init.Peano <> ::nat_scope:x_'<'_x not
R30623:30630 Coq.MSets.MSetGenTree M cardinal def
R30632:30632 Coq.MSets.MSetGenTree <> s var
R30637:30638 Coq.Arith.PeanoNat <> ::nat_scope:x_'^'_x not
R30649:30649 Coq.Arith.PeanoNat <> ::nat_scope:x_'^'_x not
R30639:30646 Coq.MSets.MSetGenTree M maxdepth def
R30648:30648 Coq.MSets.MSetGenTree <> s var
R30667:30674 Coq.Init.Peano <> lt def
R30743:30756 Coq.Arith.PeanoNat Nat add_succ_r thm
R30762:30775 Coq.Arith.PeanoNat Nat add_succ_l thm
R30778:30788 Coq.Arith.PeanoNat Nat add_0_r thm
R30743:30756 Coq.Arith.PeanoNat Nat add_succ_r thm
R30743:30756 Coq.Arith.PeanoNat Nat add_succ_r thm
R30762:30775 Coq.Arith.PeanoNat Nat add_succ_l thm
R30762:30775 Coq.Arith.PeanoNat Nat add_succ_l thm
R30778:30788 Coq.Arith.PeanoNat Nat add_0_r thm
R30778:30788 Coq.Arith.PeanoNat Nat add_0_r thm
R30800:30814 Coq.Arith.PeanoNat Nat add_le_mono thm
R30871:30885 Coq.Arith.PeanoNat Nat pow_le_mono thm
R30800:30814 Coq.Arith.PeanoNat Nat add_le_mono thm
R30871:30885 Coq.Arith.PeanoNat Nat pow_le_mono thm
R30871:30885 Coq.Arith.PeanoNat Nat pow_le_mono thm
R30905:30916 Coq.Arith.PeanoNat Nat le_max_l thm
R30905:30916 Coq.Arith.PeanoNat Nat le_max_l thm
R30930:30941 Coq.Arith.PeanoNat Nat le_max_r thm
R30930:30941 Coq.Arith.PeanoNat Nat le_max_r thm
prf 30956:30972 Props mindepth_cardinal
R30992:30995 Coq.Init.Peano <> ::nat_scope:x_'<='_x not
R30979:30980 Coq.Arith.PeanoNat <> ::nat_scope:x_'^'_x not
R30991:30991 Coq.Arith.PeanoNat <> ::nat_scope:x_'^'_x not
R30981:30988 Coq.MSets.MSetGenTree M mindepth def
R30990:30990 Coq.MSets.MSetGenTree <> s var
R30996:30996 Coq.Init.Datatypes <> S constr
R30999:31006 Coq.MSets.MSetGenTree M cardinal def
R31008:31008 Coq.MSets.MSetGenTree <> s var
R31027:31034 Coq.Init.Peano <> lt def
R31103:31116 Coq.Arith.PeanoNat Nat add_succ_r thm
R31122:31135 Coq.Arith.PeanoNat Nat add_succ_l thm
R31138:31148 Coq.Arith.PeanoNat Nat add_0_r thm
R31103:31116 Coq.Arith.PeanoNat Nat add_succ_r thm
R31103:31116 Coq.Arith.PeanoNat Nat add_succ_r thm
R31122:31135 Coq.Arith.PeanoNat Nat add_succ_l thm
R31122:31135 Coq.Arith.PeanoNat Nat add_succ_l thm
R31138:31148 Coq.Arith.PeanoNat Nat add_0_r thm
R31138:31148 Coq.Arith.PeanoNat Nat add_0_r thm
R31160:31174 Coq.Arith.PeanoNat Nat add_le_mono thm
R31231:31245 Coq.Arith.PeanoNat Nat pow_le_mono thm
R31160:31174 Coq.Arith.PeanoNat Nat add_le_mono thm
R31231:31245 Coq.Arith.PeanoNat Nat pow_le_mono thm
R31231:31245 Coq.Arith.PeanoNat Nat pow_le_mono thm
R31265:31276 Coq.Arith.PeanoNat Nat le_min_l thm
R31265:31276 Coq.Arith.PeanoNat Nat le_min_l thm
R31290:31301 Coq.Arith.PeanoNat Nat le_min_r thm
R31290:31301 Coq.Arith.PeanoNat Nat le_min_r thm
prf 31316:31336 Props maxdepth_log_cardinal
R31351:31355 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R31377:31379 Coq.Init.Peano <> ::nat_scope:x_'<'_x not
R31356:31363 Coq.Arith.PeanoNat Nat log2 def
R31366:31373 Coq.MSets.MSetGenTree M cardinal def
R31375:31375 Coq.MSets.MSetGenTree <> s var
R31380:31387 Coq.MSets.MSetGenTree M maxdepth def
R31389:31389 Coq.MSets.MSetGenTree <> s var
R31343:31346 Coq.Init.Logic <> ::type_scope:x_'<>'_x not
R31342:31342 Coq.MSets.MSetGenTree <> s var
R31347:31350 Coq.MSets.MSetGenTree M Leaf constr
R31417:31432 Coq.Arith.PeanoNat Nat log2_lt_pow2 thm
R31417:31432 Coq.Arith.PeanoNat Nat log2_lt_pow2 thm
R31472:31488 Coq.MSets.MSetGenTree Props maxdepth_cardinal thm
R31472:31488 Coq.MSets.MSetGenTree Props maxdepth_cardinal thm
prf 31503:31523 Props mindepth_log_cardinal
R31539:31542 Coq.Init.Peano <> ::nat_scope:x_'<='_x not
R31529:31536 Coq.MSets.MSetGenTree M mindepth def
R31538:31538 Coq.MSets.MSetGenTree <> s var
R31543:31550 Coq.Arith.PeanoNat Nat log2 def
R31553:31553 Coq.Init.Datatypes <> S constr
R31556:31563 Coq.MSets.MSetGenTree M cardinal def
R31565:31565 Coq.MSets.MSetGenTree <> s var
R31584:31599 Coq.Arith.PeanoNat Nat log2_le_pow2 thm
R31584:31599 Coq.Arith.PeanoNat Nat log2_le_pow2 thm
R31626:31642 Coq.MSets.MSetGenTree Props mindepth_cardinal thm
R31626:31642 Coq.MSets.MSetGenTree Props mindepth_cardinal thm
R31655:31659 Coq.MSets.MSetGenTree Props <> modtype
