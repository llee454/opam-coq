DIGEST 4e8b19400faf10bfbfb8b5c5f7b227e0
FCoq.Logic.Berardi
sec 1323:1338 <> Berardis_paradox
var 1376:1377 Berardis_paradox EM
R1397:1400 Coq.Init.Logic <> ::type_scope:x_'\/'_x not
R1396:1396 Coq.Logic.Berardi <> P var
R1401:1402 Coq.Init.Logic <> ::type_scope:'~'_x not
R1403:1403 Coq.Logic.Berardi <> P var
def 1457:1462 <> IFProp
R1482:1482 Coq.Logic.Berardi <> P var
R1496:1497 Coq.Logic.Berardi <> Berardis_paradox.EM var
R1499:1499 Coq.Logic.Berardi <> B var
R1510:1518 Coq.Init.Logic <> or_introl constr
R1525:1526 Coq.Logic.Berardi <> e1 var
R1532:1540 Coq.Init.Logic <> or_intror constr
R1547:1548 Coq.Logic.Berardi <> e2 var
prf 1665:1669 <> AC_IF
R1699:1699 Coq.Logic.Berardi <> P var
R1706:1709 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R1705:1705 Coq.Logic.Berardi <> P var
R1720:1720 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R1730:1734 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R1735:1735 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R1747:1751 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R1752:1752 Coq.Logic.Berardi <> Q var
R1755:1760 Coq.Logic.Berardi <> IFProp def
R1767:1768 Coq.Logic.Berardi <> e2 var
R1764:1765 Coq.Logic.Berardi <> e1 var
R1762:1762 Coq.Logic.Berardi <> B var
R1739:1742 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R1743:1743 Coq.Logic.Berardi <> Q var
R1745:1746 Coq.Logic.Berardi <> e2 var
R1736:1737 Coq.Init.Logic <> ::type_scope:'~'_x not
R1738:1738 Coq.Logic.Berardi <> B var
R1722:1725 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R1726:1726 Coq.Logic.Berardi <> Q var
R1728:1729 Coq.Logic.Berardi <> e1 var
R1721:1721 Coq.Logic.Berardi <> B var
R1812:1817 Coq.Logic.Berardi <> IFProp def
R1826:1827 Coq.Logic.Berardi <> Berardis_paradox.EM var
R1826:1827 Coq.Logic.Berardi <> Berardis_paradox.EM var
var 2001:2004 Berardis_paradox Bool
var 2023:2023 Berardis_paradox T
R2027:2030 Coq.Logic.Berardi <> Berardis_paradox.Bool var
var 2042:2042 Berardis_paradox F
R2046:2049 Coq.Logic.Berardi <> Berardis_paradox.Bool var
def 2093:2095 <> pow
R2110:2113 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R2114:2117 Coq.Logic.Berardi <> Berardis_paradox.Bool var
R2109:2109 Coq.Logic.Berardi <> P var
sec 2170:2177 Berardis_paradox Retracts
var 2191:2191 Berardis_paradox.Retracts A
var 2193:2193 Berardis_paradox.Retracts B
rec 2211:2217 <> retract
proj 2232:2232 <> i
proj 2244:2244 <> j
proj 2256:2258 <> inv
R2237:2240 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R2241:2241 Coq.Logic.Berardi <> Berardis_paradox.Retracts.B var
R2236:2236 Coq.Logic.Berardi <> Berardis_paradox.Retracts.A var
R2249:2252 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R2253:2253 Coq.Logic.Berardi <> Berardis_paradox.Retracts.A var
R2248:2248 Coq.Logic.Berardi <> Berardis_paradox.Retracts.B var
R2271:2271 Coq.Logic.Berardi <> Berardis_paradox.Retracts.A var
R2281:2283 Coq.Init.Logic <> ::type_scope:x_'='_x not
R2274:2274 Coq.Logic.Berardi <> j meth
R2277:2277 Coq.Logic.Berardi <> i meth
R2279:2279 Coq.Logic.Berardi <> a var
R2284:2284 Coq.Logic.Berardi <> a var
rec 2295:2306 <> retract_cond
proj 2321:2322 <> i2
proj 2334:2335 <> j2
proj 2347:2350 <> inv2
R2327:2330 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R2331:2331 Coq.Logic.Berardi <> Berardis_paradox.Retracts.B var
R2326:2326 Coq.Logic.Berardi <> Berardis_paradox.Retracts.A var
R2340:2343 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R2344:2344 Coq.Logic.Berardi <> Berardis_paradox.Retracts.A var
R2339:2339 Coq.Logic.Berardi <> Berardis_paradox.Retracts.B var
R2361:2364 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R2374:2374 Coq.Logic.Berardi <> Berardis_paradox.Retracts.A var
R2386:2388 Coq.Init.Logic <> ::type_scope:x_'='_x not
R2377:2378 Coq.Logic.Berardi <> j2 meth
R2381:2382 Coq.Logic.Berardi <> i2 meth
R2384:2384 Coq.Logic.Berardi <> a var
R2389:2389 Coq.Logic.Berardi <> a var
R2354:2360 Coq.Logic.Berardi <> retract rec
prf 2469:2470 <> AC
R2483:2494 Coq.Logic.Berardi <> retract_cond rec
R2504:2507 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R2517:2517 Coq.Logic.Berardi <> Berardis_paradox.Retracts.A var
R2537:2539 Coq.Init.Logic <> ::type_scope:x_'='_x not
R2523:2524 Coq.Logic.Berardi <> j2 proj
R2531:2532 Coq.Logic.Berardi <> i2 proj
R2535:2535 Coq.Logic.Berardi <> a var
R2528:2528 Coq.Logic.Berardi <> r var
R2520:2520 Coq.Logic.Berardi <> r var
R2540:2540 Coq.Logic.Berardi <> a var
R2497:2503 Coq.Logic.Berardi <> retract rec
R2569:2572 Coq.Logic.Berardi <> inv2 proj
R2569:2572 Coq.Logic.Berardi <> inv2 proj
R2586:2593 Coq.Logic.Berardi Berardis_paradox.Retracts <> sec
prf 2840:2841 <> L1
R2862:2873 Coq.Logic.Berardi <> retract_cond rec
R2884:2886 Coq.Logic.Berardi <> pow def
R2888:2888 Coq.Logic.Berardi <> B var
R2876:2878 Coq.Logic.Berardi <> pow def
R2880:2880 Coq.Logic.Berardi <> A var
R2921:2922 Coq.Logic.Berardi <> Berardis_paradox.EM var
R2925:2931 Coq.Logic.Berardi <> retract rec
R2942:2944 Coq.Logic.Berardi <> pow def
R2934:2936 Coq.Logic.Berardi <> pow def
R2921:2922 Coq.Logic.Berardi <> Berardis_paradox.EM var
R2925:2931 Coq.Logic.Berardi <> retract rec
R2942:2944 Coq.Logic.Berardi <> pow def
R2934:2936 Coq.Logic.Berardi <> pow def
R3014:3016 Coq.Logic.Berardi <> pow def
R3030:3030 Coq.Logic.Berardi <> Berardis_paradox.F var
R3041:3043 Coq.Logic.Berardi <> pow def
R3057:3057 Coq.Logic.Berardi <> Berardis_paradox.F var
R3014:3016 Coq.Logic.Berardi <> pow def
R3030:3030 Coq.Logic.Berardi <> Berardis_paradox.F var
R3041:3043 Coq.Logic.Berardi <> pow def
R3057:3057 Coq.Logic.Berardi <> Berardis_paradox.F var
def 3137:3137 <> U
R3157:3159 Coq.Logic.Berardi <> pow def
R3161:3161 Coq.Logic.Berardi <> P var
def 3219:3219 <> f
R3224:3224 Coq.Logic.Berardi <> U def
R3229:3231 Coq.Logic.Berardi <> pow def
R3233:3233 Coq.Logic.Berardi <> U def
R3238:3238 Coq.Logic.Berardi <> u var
R3240:3240 Coq.Logic.Berardi <> U def
def 3255:3255 <> g
R3260:3262 Coq.Logic.Berardi <> pow def
R3264:3264 Coq.Logic.Berardi <> U def
R3269:3269 Coq.Logic.Berardi <> U def
R3295:3296 Coq.Logic.Berardi <> j2 proj
R3299:3300 Coq.Logic.Berardi <> L1 thm
R3304:3304 Coq.Logic.Berardi <> U def
R3302:3302 Coq.Logic.Berardi <> X var
R3320:3321 Coq.Logic.Berardi <> i2 proj
R3324:3325 Coq.Logic.Berardi <> L1 thm
R3329:3329 Coq.Logic.Berardi <> U def
R3327:3327 Coq.Logic.Berardi <> U def
R3335:3336 Coq.Logic.Berardi <> lX var
R3339:3340 Coq.Logic.Berardi <> rU var
R3342:3342 Coq.Logic.Berardi <> h var
prf 3495:3509 <> retract_pow_U_U
R3513:3519 Coq.Logic.Berardi <> retract rec
R3529:3529 Coq.Logic.Berardi <> U def
R3522:3524 Coq.Logic.Berardi <> pow def
R3526:3526 Coq.Logic.Berardi <> U def
R3546:3546 Coq.Logic.Berardi <> g def
R3548:3548 Coq.Logic.Berardi <> f def
R3546:3546 Coq.Logic.Berardi <> g def
R3548:3548 Coq.Logic.Berardi <> f def
R3567:3567 Coq.Logic.Berardi <> f def
R3570:3570 Coq.Logic.Berardi <> g def
R3586:3587 Coq.Logic.Berardi <> AC thm
R3586:3587 Coq.Logic.Berardi <> AC thm
R3605:3607 Coq.Logic.Berardi <> pow def
R3609:3609 Coq.Logic.Berardi <> U def
R3614:3614 Coq.Logic.Berardi <> x var
R3624:3626 Coq.Logic.Berardi <> pow def
R3628:3628 Coq.Logic.Berardi <> U def
R3633:3633 Coq.Logic.Berardi <> x var
R3605:3607 Coq.Logic.Berardi <> pow def
R3609:3609 Coq.Logic.Berardi <> U def
R3614:3614 Coq.Logic.Berardi <> x var
R3624:3626 Coq.Logic.Berardi <> pow def
R3628:3628 Coq.Logic.Berardi <> U def
R3633:3633 Coq.Logic.Berardi <> x var
def 3729:3733 <> Not_b
R3738:3741 Coq.Logic.Berardi <> Berardis_paradox.Bool var
R3747:3752 Coq.Logic.Berardi <> IFProp def
R3764:3764 Coq.Logic.Berardi <> Berardis_paradox.T var
R3762:3762 Coq.Logic.Berardi <> Berardis_paradox.F var
R3756:3758 Coq.Init.Logic <> ::type_scope:x_'='_x not
R3755:3755 Coq.Logic.Berardi <> b var
R3759:3759 Coq.Logic.Berardi <> Berardis_paradox.T var
def 3830:3830 <> R
R3834:3834 Coq.Logic.Berardi <> U def
R3839:3839 Coq.Logic.Berardi <> g def
R3848:3848 Coq.Logic.Berardi <> U def
R3853:3857 Coq.Logic.Berardi <> Not_b def
R3860:3860 Coq.Logic.Berardi <> u var
R3864:3864 Coq.Logic.Berardi <> u var
R3862:3862 Coq.Logic.Berardi <> U def
prf 3877:3892 <> not_has_fixpoint
R3899:3901 Coq.Init.Logic <> ::type_scope:x_'='_x not
R3896:3896 Coq.Logic.Berardi <> R def
R3898:3898 Coq.Logic.Berardi <> R def
R3902:3906 Coq.Logic.Berardi <> Not_b def
R3909:3909 Coq.Logic.Berardi <> R def
R3911:3911 Coq.Logic.Berardi <> R def
R3929:3929 Coq.Logic.Berardi <> R def
R3944:3944 Coq.Logic.Berardi <> g def
R3955:3956 Coq.Logic.Berardi <> AC thm
R3955:3956 Coq.Logic.Berardi <> AC thm
R3955:3956 Coq.Logic.Berardi <> AC thm
R3955:3956 Coq.Logic.Berardi <> AC thm
R3982:3984 Coq.Logic.Berardi <> pow def
R3986:3986 Coq.Logic.Berardi <> U def
R3991:3991 Coq.Logic.Berardi <> x var
R4001:4003 Coq.Logic.Berardi <> pow def
R4005:4005 Coq.Logic.Berardi <> U def
R4010:4010 Coq.Logic.Berardi <> x var
R3982:3984 Coq.Logic.Berardi <> pow def
R3986:3986 Coq.Logic.Berardi <> U def
R3991:3991 Coq.Logic.Berardi <> x var
R4001:4003 Coq.Logic.Berardi <> pow def
R4005:4005 Coq.Logic.Berardi <> U def
R4010:4010 Coq.Logic.Berardi <> x var
prf 4038:4064 <> classical_proof_irrelevance
R4069:4071 Coq.Init.Logic <> ::type_scope:x_'='_x not
R4068:4068 Coq.Logic.Berardi <> Berardis_paradox.T var
R4072:4072 Coq.Logic.Berardi <> Berardis_paradox.F var
R4093:4108 Coq.Logic.Berardi <> not_has_fixpoint thm
R4093:4108 Coq.Logic.Berardi <> not_has_fixpoint thm
R4118:4122 Coq.Logic.Berardi <> Not_b def
R4131:4135 Coq.Logic.Berardi <> AC_IF thm
R4131:4135 Coq.Logic.Berardi <> AC_IF thm
syndef 4267:4293 <> classical_proof_irrelevence
R4298:4324 Coq.Logic.Berardi <> classical_proof_irrelevance thm
R4347:4362 Coq.Logic.Berardi Berardis_paradox <> sec
